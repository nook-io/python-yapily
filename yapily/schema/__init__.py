# generated by datamodel-codegen:
#   filename:  openapi.json
#   timestamp: 2022-05-17T09:43:42+00:00

from __future__ import annotations

from typing import List, Optional

from pydantic import BaseModel, Field


class Contact(BaseModel):
    name: str
    url: str
    email: str


class Info(BaseModel):
    description: str
    title: str
    version: str
    contact: Contact


class Server(BaseModel):
    url: str


class SecurityItem(BaseModel):
    basicAuth: List


class Tag(BaseModel):
    description: str
    name: str


class Schema(BaseModel):
    type: str


class Parameter(BaseModel):
    description: str
    example: Optional[str] = None
    in_: str = Field(..., alias='in')
    name: str
    required: bool
    schema_: Schema = Field(..., alias='schema')


class Meta(BaseModel):
    tracingId: str


class Data(BaseModel):
    id: str
    userUuid: str
    applicationUserId: str
    institutionId: str
    status: str
    createdAt: str
    featureScope: List[str]
    state: str
    authorizedAt: str
    institutionConsentId: str
    authorisationUrl: str
    qrCodeUrl: str


class Value(BaseModel):
    meta: Meta
    data: Data


class OBIEExampleResponse(BaseModel):
    description: str
    value: Value


class Examples(BaseModel):
    OBIE_Example_Response: OBIEExampleResponse = Field(
        ..., alias='OBIE Example Response'
    )


class Schema1(BaseModel):
    _ref: str = Field(..., alias='$ref')


class ApplicationJsonCharsetUTF8(BaseModel):
    examples: Examples
    schema_: Schema1 = Field(..., alias='schema')


class Content(BaseModel):
    application_json_charset_UTF_8: ApplicationJsonCharsetUTF8 = Field(
        ..., alias='application/json;charset=UTF-8'
    )


class Field201(BaseModel):
    content: Content
    description: str


class Error(BaseModel):
    code: int
    status: str
    message: str


class Value1(BaseModel):
    error: Error


class ErrorResponse(BaseModel):
    description: str
    value: Value1


class Examples1(BaseModel):
    Error_Response: ErrorResponse = Field(..., alias='Error Response')


class Schema2(BaseModel):
    _ref: str = Field(..., alias='$ref')


class ApplicationJsonCharsetUTF81(BaseModel):
    examples: Examples1
    schema_: Schema2 = Field(..., alias='schema')


class Content1(BaseModel):
    application_json_charset_UTF_8: ApplicationJsonCharsetUTF81 = Field(
        ..., alias='application/json;charset=UTF-8'
    )


class Default(BaseModel):
    content: Content1
    description: str


class Responses(BaseModel):
    field_201: Field201 = Field(..., alias='201')
    default: Default


class Patch(BaseModel):
    description: str
    operationId: str
    parameters: List[Parameter]
    responses: Responses
    summary: str
    tags: List[str]


class Schema3(BaseModel):
    type: str


class Parameter1(BaseModel):
    description: str
    in_: str = Field(..., alias='in')
    name: str
    required: bool
    schema_: Schema3 = Field(..., alias='schema')


class AccountIdentification(BaseModel):
    type: str
    identification: str


class AccountIdentifiersForBalanceItem(BaseModel):
    accountId: str
    accountIdentification: AccountIdentification


class AccountIdentification1(BaseModel):
    type: str
    identification: str


class AccountIdentifiersForTransactionItem(BaseModel):
    accountId: str
    accountIdentification: AccountIdentification1


class AccountRequest(BaseModel):
    accountIdentifiersForBalance: List[AccountIdentifiersForBalanceItem]
    accountIdentifiersForTransaction: List[AccountIdentifiersForTransactionItem]


class Value2(BaseModel):
    applicationUserId: str
    institutionId: str
    callback: str
    accountRequest: AccountRequest


class CBIGlobeExampleRequest(BaseModel):
    description: str
    value: Value2


class Value3(BaseModel):
    applicationUserId: str
    institutionId: str
    callback: str


class OBIEExampleRequest(BaseModel):
    description: str
    value: Value3


class Examples2(BaseModel):
    CBI_Globe_Example_Request: CBIGlobeExampleRequest = Field(
        ..., alias='CBI Globe Example Request'
    )
    OBIE_Example_Request: OBIEExampleRequest = Field(..., alias='OBIE Example Request')


class Schema4(BaseModel):
    _ref: str = Field(..., alias='$ref')


class ApplicationJsonCharsetUTF82(BaseModel):
    examples: Examples2
    schema_: Schema4 = Field(..., alias='schema')


class Content2(BaseModel):
    application_json_charset_UTF_8: ApplicationJsonCharsetUTF82 = Field(
        ..., alias='application/json;charset=UTF-8'
    )


class RequestBody(BaseModel):
    content: Content2
    required: bool


class Meta1(BaseModel):
    tracingId: str


class Data1(BaseModel):
    id: str
    userUuid: str
    applicationUserId: str
    institutionId: str
    status: str
    createdAt: str
    expiresAt: str
    timeToExpire: str
    featureScope: List[str]
    state: str
    institutionConsentId: str
    authorisationUrl: str
    qrCodeUrl: str


class Value4(BaseModel):
    meta: Meta1
    data: Data1


class CBIGlobeExampleResponse(BaseModel):
    description: str
    value: Value4


class Meta2(BaseModel):
    tracingId: str


class Data2(BaseModel):
    id: str
    userUuid: str
    applicationUserId: str
    institutionId: str
    status: str
    createdAt: str
    featureScope: List[str]
    state: str
    institutionConsentId: str
    authorisationUrl: str
    qrCodeUrl: str


class Value5(BaseModel):
    meta: Meta2
    data: Data2


class OBIEExampleResponse1(BaseModel):
    description: str
    value: Value5


class Examples3(BaseModel):
    CBI_Globe_Example_Response: CBIGlobeExampleResponse = Field(
        ..., alias='CBI Globe Example Response'
    )
    OBIE_Example_Response: OBIEExampleResponse1 = Field(
        ..., alias='OBIE Example Response'
    )


class Schema5(BaseModel):
    _ref: str = Field(..., alias='$ref')


class ApplicationJsonCharsetUTF83(BaseModel):
    examples: Examples3
    schema_: Schema5 = Field(..., alias='schema')


class Content3(BaseModel):
    application_json_charset_UTF_8: ApplicationJsonCharsetUTF83 = Field(
        ..., alias='application/json;charset=UTF-8'
    )


class Field2011(BaseModel):
    content: Content3
    description: str


class Error1(BaseModel):
    code: int
    status: str
    message: str


class Value6(BaseModel):
    error: Error1


class ErrorResponse1(BaseModel):
    description: str
    value: Value6


class Examples4(BaseModel):
    Error_Response: ErrorResponse1 = Field(..., alias='Error Response')


class Schema6(BaseModel):
    _ref: str = Field(..., alias='$ref')


class ApplicationJsonCharsetUTF84(BaseModel):
    examples: Examples4
    schema_: Schema6 = Field(..., alias='schema')


class Content4(BaseModel):
    application_json_charset_UTF_8: ApplicationJsonCharsetUTF84 = Field(
        ..., alias='application/json;charset=UTF-8'
    )


class Default1(BaseModel):
    content: Content4
    description: str


class Responses1(BaseModel):
    field_201: Field2011 = Field(..., alias='201')
    default: Default1


class Post(BaseModel):
    description: str
    operationId: str
    parameters: List[Parameter1]
    requestBody: RequestBody
    responses: Responses1
    summary: str
    tags: List[str]


class Schema7(BaseModel):
    type: str


class Parameter2(BaseModel):
    description: str
    example: Optional[str] = None
    in_: str = Field(..., alias='in')
    name: str
    required: bool
    schema_: Schema7 = Field(..., alias='schema')


class Value7(BaseModel):
    applicationUserId: str
    institutionId: str


class BerlinGroupExampleRequest(BaseModel):
    description: str
    value: Value7


class Examples5(BaseModel):
    Berlin_Group_Example_Request: BerlinGroupExampleRequest = Field(
        ..., alias='Berlin Group Example Request'
    )


class Schema8(BaseModel):
    _ref: str = Field(..., alias='$ref')


class ApplicationJsonCharsetUTF85(BaseModel):
    examples: Examples5
    schema_: Schema8 = Field(..., alias='schema')


class Content5(BaseModel):
    application_json_charset_UTF_8: ApplicationJsonCharsetUTF85 = Field(
        ..., alias='application/json;charset=UTF-8'
    )


class RequestBody1(BaseModel):
    content: Content5
    required: bool


class Meta3(BaseModel):
    tracingId: str


class Data3(BaseModel):
    id: str
    userUuid: str
    applicationUserId: str
    institutionId: str
    institutionConsentId: str
    state: str
    status: str
    authorizedAt: str
    createdAt: str
    featureScope: List[str]


class Value8(BaseModel):
    meta: Meta3
    data: Data3


class OBIEExampleResponse2(BaseModel):
    description: str
    value: Value8


class Examples6(BaseModel):
    OBIE_Example_Response: OBIEExampleResponse2 = Field(
        ..., alias='OBIE Example Response'
    )


class Schema9(BaseModel):
    _ref: str = Field(..., alias='$ref')


class ApplicationJsonCharsetUTF86(BaseModel):
    examples: Examples6
    schema_: Schema9 = Field(..., alias='schema')


class Content6(BaseModel):
    application_json_charset_UTF_8: ApplicationJsonCharsetUTF86 = Field(
        ..., alias='application/json;charset=UTF-8'
    )


class Field200(BaseModel):
    content: Content6
    description: str


class Error2(BaseModel):
    code: int
    status: str
    message: str


class Value9(BaseModel):
    error: Error2


class ErrorResponse2(BaseModel):
    description: str
    value: Value9


class Examples7(BaseModel):
    Error_Response: ErrorResponse2 = Field(..., alias='Error Response')


class Schema10(BaseModel):
    _ref: str = Field(..., alias='$ref')


class ApplicationJsonCharsetUTF87(BaseModel):
    examples: Examples7
    schema_: Schema10 = Field(..., alias='schema')


class Content7(BaseModel):
    application_json_charset_UTF_8: ApplicationJsonCharsetUTF87 = Field(
        ..., alias='application/json;charset=UTF-8'
    )


class Default2(BaseModel):
    content: Content7
    description: str


class Responses2(BaseModel):
    field_200: Field200 = Field(..., alias='200')
    default: Default2


class Put(BaseModel):
    description: str
    operationId: str
    parameters: List[Parameter2]
    requestBody: RequestBody1
    responses: Responses2
    summary: str
    tags: List[str]


class _AccountAuthRequests(BaseModel):
    patch: Patch
    post: Post
    put: Put


class Schema11(BaseModel):
    type: str


class Parameter3(BaseModel):
    description: str
    example: Optional[str] = None
    in_: str = Field(..., alias='in')
    name: str
    required: bool
    schema_: Schema11 = Field(..., alias='schema')


class Meta4(BaseModel):
    tracingId: str
    count: int


class AccountName(BaseModel):
    name: str


class AccountIdentification2(BaseModel):
    type: str
    identification: str


class BalanceAmount(BaseModel):
    amount: float
    currency: str


class AccountBalance(BaseModel):
    type: str
    dateTime: str
    balanceAmount: BalanceAmount
    creditLineIncluded: bool
    creditLines: List


class Datum(BaseModel):
    id: str
    type: str
    balance: float
    currency: str
    usageType: str
    accountType: str
    nickname: str
    accountNames: List[AccountName]
    accountIdentifications: List[AccountIdentification2]
    accountBalances: List[AccountBalance]


class Value10(BaseModel):
    meta: Meta4
    data: List[Datum]


class OBIEExampleResponse3(BaseModel):
    description: str
    value: Value10


class Examples8(BaseModel):
    OBIE_Example_Response: OBIEExampleResponse3 = Field(
        ..., alias='OBIE Example Response'
    )


class Schema12(BaseModel):
    _ref: str = Field(..., alias='$ref')


class ApplicationJsonCharsetUTF88(BaseModel):
    examples: Examples8
    schema_: Schema12 = Field(..., alias='schema')


class Content8(BaseModel):
    application_json_charset_UTF_8: ApplicationJsonCharsetUTF88 = Field(
        ..., alias='application/json;charset=UTF-8'
    )


class Field2001(BaseModel):
    content: Content8
    description: str


class Error3(BaseModel):
    code: int
    status: str
    message: str


class Value11(BaseModel):
    error: Error3


class ErrorResponse3(BaseModel):
    description: str
    value: Value11


class Examples9(BaseModel):
    Error_Response: ErrorResponse3 = Field(..., alias='Error Response')


class Schema13(BaseModel):
    _ref: str = Field(..., alias='$ref')


class ApplicationJsonCharsetUTF89(BaseModel):
    examples: Examples9
    schema_: Schema13 = Field(..., alias='schema')


class Content9(BaseModel):
    application_json_charset_UTF_8: ApplicationJsonCharsetUTF89 = Field(
        ..., alias='application/json;charset=UTF-8'
    )


class Default3(BaseModel):
    content: Content9
    description: str


class Responses3(BaseModel):
    field_200: Field2001 = Field(..., alias='200')
    default: Default3


class Get(BaseModel):
    description: str
    operationId: str
    parameters: List[Parameter3]
    responses: Responses3
    summary: str
    tags: List[str]


class _Accounts(BaseModel):
    get: Get


class Schema14(BaseModel):
    type: str


class Parameter4(BaseModel):
    description: str
    in_: str = Field(..., alias='in')
    name: str
    required: bool
    schema_: Schema14 = Field(..., alias='schema')
    example: Optional[str] = None


class Meta5(BaseModel):
    tracingId: str


class AccountName1(BaseModel):
    name: str


class AccountIdentification3(BaseModel):
    type: str
    identification: str


class BalanceAmount1(BaseModel):
    amount: float
    currency: str


class AccountBalance1(BaseModel):
    type: str
    dateTime: str
    balanceAmount: BalanceAmount1
    creditLineIncluded: bool
    creditLines: List


class Data4(BaseModel):
    id: str
    type: str
    balance: float
    currency: str
    usageType: str
    accountType: str
    nickname: str
    accountNames: List[AccountName1]
    accountIdentifications: List[AccountIdentification3]
    accountBalances: List[AccountBalance1]


class Value12(BaseModel):
    meta: Meta5
    data: Data4


class OBIEExampleResponse4(BaseModel):
    description: str
    value: Value12


class Examples10(BaseModel):
    OBIE_Example_Response: OBIEExampleResponse4 = Field(
        ..., alias='OBIE Example Response'
    )


class Schema15(BaseModel):
    _ref: str = Field(..., alias='$ref')


class ApplicationJsonCharsetUTF810(BaseModel):
    examples: Examples10
    schema_: Schema15 = Field(..., alias='schema')


class Content10(BaseModel):
    application_json_charset_UTF_8: ApplicationJsonCharsetUTF810 = Field(
        ..., alias='application/json;charset=UTF-8'
    )


class Field2002(BaseModel):
    content: Content10
    description: str


class Error4(BaseModel):
    code: int
    status: str
    message: str


class Value13(BaseModel):
    error: Error4


class ErrorResponse4(BaseModel):
    description: str
    value: Value13


class Examples11(BaseModel):
    Error_Response: ErrorResponse4 = Field(..., alias='Error Response')


class Schema16(BaseModel):
    _ref: str = Field(..., alias='$ref')


class ApplicationJsonCharsetUTF811(BaseModel):
    examples: Examples11
    schema_: Schema16 = Field(..., alias='schema')


class Content11(BaseModel):
    application_json_charset_UTF_8: ApplicationJsonCharsetUTF811 = Field(
        ..., alias='application/json;charset=UTF-8'
    )


class Default4(BaseModel):
    content: Content11
    description: str


class Responses4(BaseModel):
    field_200: Field2002 = Field(..., alias='200')
    default: Default4


class Get1(BaseModel):
    description: str
    operationId: str
    parameters: List[Parameter4]
    responses: Responses4
    summary: str
    tags: List[str]


class _AccountsAccountId(BaseModel):
    get: Get1


class Schema17(BaseModel):
    type: str


class Parameter5(BaseModel):
    description: str
    in_: str = Field(..., alias='in')
    name: str
    required: bool
    schema_: Schema17 = Field(..., alias='schema')
    example: Optional[str] = None


class Meta6(BaseModel):
    tracingId: str


class MainBalanceAmount(BaseModel):
    amount: str
    currency: str


class BalanceAmount2(BaseModel):
    amount: str
    currency: str


class Balance(BaseModel):
    type: str
    balanceAmount: BalanceAmount2


class Data5(BaseModel):
    mainBalanceAmount: MainBalanceAmount
    balances: List[Balance]


class Value14(BaseModel):
    meta: Meta6
    data: Data5


class CBIGlobeExampleResponse1(BaseModel):
    description: str
    value: Value14


class Examples12(BaseModel):
    CBI_Globe_Example_Response: CBIGlobeExampleResponse1 = Field(
        ..., alias='CBI Globe Example Response'
    )


class Schema18(BaseModel):
    _ref: str = Field(..., alias='$ref')


class ApplicationJsonCharsetUTF812(BaseModel):
    examples: Examples12
    schema_: Schema18 = Field(..., alias='schema')


class Content12(BaseModel):
    application_json_charset_UTF_8: ApplicationJsonCharsetUTF812 = Field(
        ..., alias='application/json;charset=UTF-8'
    )


class Field2003(BaseModel):
    content: Content12
    description: str


class Error5(BaseModel):
    code: int
    status: str
    message: str


class Value15(BaseModel):
    error: Error5


class ErrorResponse5(BaseModel):
    description: str
    value: Value15


class Examples13(BaseModel):
    Error_Response: ErrorResponse5 = Field(..., alias='Error Response')


class Schema19(BaseModel):
    _ref: str = Field(..., alias='$ref')


class ApplicationJsonCharsetUTF813(BaseModel):
    examples: Examples13
    schema_: Schema19 = Field(..., alias='schema')


class Content13(BaseModel):
    application_json_charset_UTF_8: ApplicationJsonCharsetUTF813 = Field(
        ..., alias='application/json;charset=UTF-8'
    )


class Default5(BaseModel):
    content: Content13
    description: str


class Responses5(BaseModel):
    field_200: Field2003 = Field(..., alias='200')
    default: Default5


class Get2(BaseModel):
    description: str
    operationId: str
    parameters: List[Parameter5]
    responses: Responses5
    summary: str
    tags: List[str]


class _AccountsAccountIdBalances(BaseModel):
    get: Get2


class Schema20(BaseModel):
    type: str


class Parameter6(BaseModel):
    description: str
    in_: str = Field(..., alias='in')
    name: str
    required: bool
    schema_: Schema20 = Field(..., alias='schema')
    example: Optional[str] = None


class AccountIdentification4(BaseModel):
    type: str
    identification: str


class Payee(BaseModel):
    name: str
    accountIdentifications: List[AccountIdentification4]


class Datum1(BaseModel):
    id: str
    trusted: bool
    reference: str
    payee: Payee


class Value16(BaseModel):
    data: List[Datum1]


class OBIEExampleResponse5(BaseModel):
    description: str
    value: Value16


class Examples14(BaseModel):
    OBIE_Example_Response: OBIEExampleResponse5 = Field(
        ..., alias='OBIE Example Response'
    )


class Schema21(BaseModel):
    _ref: str = Field(..., alias='$ref')


class ApplicationJsonCharsetUTF814(BaseModel):
    examples: Examples14
    schema_: Schema21 = Field(..., alias='schema')


class Content14(BaseModel):
    application_json_charset_UTF_8: ApplicationJsonCharsetUTF814 = Field(
        ..., alias='application/json;charset=UTF-8'
    )


class Field2004(BaseModel):
    content: Content14
    description: str


class Error6(BaseModel):
    code: int
    status: str
    message: str


class Value17(BaseModel):
    error: Error6


class ErrorResponse6(BaseModel):
    description: str
    value: Value17


class Examples15(BaseModel):
    Error_Response: ErrorResponse6 = Field(..., alias='Error Response')


class Schema22(BaseModel):
    _ref: str = Field(..., alias='$ref')


class ApplicationJsonCharsetUTF815(BaseModel):
    examples: Examples15
    schema_: Schema22 = Field(..., alias='schema')


class Content15(BaseModel):
    application_json_charset_UTF_8: ApplicationJsonCharsetUTF815 = Field(
        ..., alias='application/json;charset=UTF-8'
    )


class Default6(BaseModel):
    content: Content15
    description: str


class Responses6(BaseModel):
    field_200: Field2004 = Field(..., alias='200')
    default: Default6


class Get3(BaseModel):
    description: str
    operationId: str
    parameters: List[Parameter6]
    responses: Responses6
    summary: str
    tags: List[str]


class _AccountsAccountIdBeneficiaries(BaseModel):
    get: Get3


class Schema23(BaseModel):
    type: str
    format: Optional[str] = None


class Parameter7(BaseModel):
    description: str
    in_: str = Field(..., alias='in')
    name: str
    required: bool
    schema_: Schema23 = Field(..., alias='schema')
    example: Optional[str] = None


class Self(BaseModel):
    limit: int


class Pagination(BaseModel):
    totalCount: int
    self: Self


class Meta7(BaseModel):
    tracingId: str
    count: int
    pagination: Pagination


class StatusDetails(BaseModel):
    status: str


class PayeeDetails(BaseModel):
    name: str


class PreviousPaymentAmount(BaseModel):
    amount: float
    currency: str


class Datum2(BaseModel):
    id: str
    statusDetails: StatusDetails
    payeeDetails: PayeeDetails
    reference: str
    previousPaymentAmount: PreviousPaymentAmount
    previousPaymentDateTime: str


class Links(BaseModel):
    self: str


class Value18(BaseModel):
    meta: Meta7
    data: List[Datum2]
    links: Links


class OBIEExampleResponse6(BaseModel):
    description: str
    value: Value18


class Examples16(BaseModel):
    OBIE_Example_Response: OBIEExampleResponse6 = Field(
        ..., alias='OBIE Example Response'
    )


class Schema24(BaseModel):
    _ref: str = Field(..., alias='$ref')


class ApplicationJsonCharsetUTF816(BaseModel):
    examples: Examples16
    schema_: Schema24 = Field(..., alias='schema')


class Content16(BaseModel):
    application_json_charset_UTF_8: ApplicationJsonCharsetUTF816 = Field(
        ..., alias='application/json;charset=UTF-8'
    )


class Field2005(BaseModel):
    content: Content16
    description: str


class Error7(BaseModel):
    code: int
    status: str
    message: str


class Value19(BaseModel):
    error: Error7


class ErrorResponse7(BaseModel):
    description: str
    value: Value19


class Examples17(BaseModel):
    Error_Response: ErrorResponse7 = Field(..., alias='Error Response')


class Schema25(BaseModel):
    _ref: str = Field(..., alias='$ref')


class ApplicationJsonCharsetUTF817(BaseModel):
    examples: Examples17
    schema_: Schema25 = Field(..., alias='schema')


class Content17(BaseModel):
    application_json_charset_UTF_8: ApplicationJsonCharsetUTF817 = Field(
        ..., alias='application/json;charset=UTF-8'
    )


class Default7(BaseModel):
    content: Content17
    description: str


class Responses7(BaseModel):
    field_200: Field2005 = Field(..., alias='200')
    default: Default7


class Get4(BaseModel):
    description: str
    operationId: str
    parameters: List[Parameter7]
    responses: Responses7
    summary: str
    tags: List[str]


class _AccountsAccountIdDirectDebits(BaseModel):
    get: Get4


class Schema26(BaseModel):
    type: str
    format: Optional[str] = None


class Parameter8(BaseModel):
    description: str
    in_: str = Field(..., alias='in')
    name: str
    required: bool
    schema_: Schema26 = Field(..., alias='schema')
    example: Optional[str] = None


class Self1(BaseModel):
    limit: int


class Pagination1(BaseModel):
    totalCount: int
    self: Self1


class Meta8(BaseModel):
    tracingId: str
    count: int
    pagination: Pagination1


class StatusDetails1(BaseModel):
    status: str


class AccountIdentification5(BaseModel):
    type: str
    identification: str


class PayeeDetails1(BaseModel):
    name: str
    accountIdentifications: List[AccountIdentification5]


class FirstPaymentAmount(BaseModel):
    amount: float
    currency: str


class NextPaymentAmount(BaseModel):
    amount: float
    currency: str


class FinalPaymentAmount(BaseModel):
    amount: float
    currency: str


class Frequency(BaseModel):
    frequencyType: str
    intervalMonth: int
    executionDay: int


class Datum3(BaseModel):
    id: str
    statusDetails: StatusDetails1
    payeeDetails: PayeeDetails1
    reference: str
    firstPaymentAmount: FirstPaymentAmount
    firstPaymentDateTime: str
    nextPaymentAmount: NextPaymentAmount
    nextPaymentDateTime: str
    finalPaymentAmount: FinalPaymentAmount
    finalPaymentDateTime: str
    frequency: Frequency


class Links1(BaseModel):
    self: str


class Value20(BaseModel):
    meta: Meta8
    data: List[Datum3]
    links: Links1


class OBIEExampleResponse7(BaseModel):
    description: str
    value: Value20


class Examples18(BaseModel):
    OBIE_Example_Response: OBIEExampleResponse7 = Field(
        ..., alias='OBIE Example Response'
    )


class Schema27(BaseModel):
    _ref: str = Field(..., alias='$ref')


class ApplicationJsonCharsetUTF818(BaseModel):
    examples: Examples18
    schema_: Schema27 = Field(..., alias='schema')


class Content18(BaseModel):
    application_json_charset_UTF_8: ApplicationJsonCharsetUTF818 = Field(
        ..., alias='application/json;charset=UTF-8'
    )


class Field2006(BaseModel):
    content: Content18
    description: str


class Error8(BaseModel):
    code: int
    status: str
    message: str


class Value21(BaseModel):
    error: Error8


class ErrorResponse8(BaseModel):
    description: str
    value: Value21


class Examples19(BaseModel):
    Error_Response: ErrorResponse8 = Field(..., alias='Error Response')


class Schema28(BaseModel):
    _ref: str = Field(..., alias='$ref')


class ApplicationJsonCharsetUTF819(BaseModel):
    examples: Examples19
    schema_: Schema28 = Field(..., alias='schema')


class Content19(BaseModel):
    application_json_charset_UTF_8: ApplicationJsonCharsetUTF819 = Field(
        ..., alias='application/json;charset=UTF-8'
    )


class Default8(BaseModel):
    content: Content19
    description: str


class Responses8(BaseModel):
    field_200: Field2006 = Field(..., alias='200')
    default: Default8


class Get5(BaseModel):
    description: str
    operationId: str
    parameters: List[Parameter8]
    responses: Responses8
    summary: str
    tags: List[str]


class _AccountsAccountIdPeriodicPayments(BaseModel):
    get: Get5


class Schema29(BaseModel):
    type: str
    format: Optional[str] = None


class Parameter9(BaseModel):
    description: str
    in_: str = Field(..., alias='in')
    name: str
    required: bool
    schema_: Schema29 = Field(..., alias='schema')
    example: Optional[str] = None


class Self2(BaseModel):
    limit: int


class Pagination2(BaseModel):
    totalCount: int
    self: Self2


class Meta9(BaseModel):
    tracingId: str
    count: int
    pagination: Pagination2


class AccountIdentification6(BaseModel):
    type: str
    identification: str


class PayeeDetails2(BaseModel):
    name: str
    accountIdentifications: List[AccountIdentification6]


class AmountDetails(BaseModel):
    amount: float
    currency: str


class Datum4(BaseModel):
    id: str
    payeeDetails: PayeeDetails2
    reference: str
    amountDetails: AmountDetails
    scheduledPaymentType: str
    scheduledPaymentDateTime: str


class Links2(BaseModel):
    self: str


class Value22(BaseModel):
    meta: Meta9
    data: List[Datum4]
    links: Links2


class OBIEExampleResponse8(BaseModel):
    description: str
    value: Value22


class Examples20(BaseModel):
    OBIE_Example_Response: OBIEExampleResponse8 = Field(
        ..., alias='OBIE Example Response'
    )


class Schema30(BaseModel):
    _ref: str = Field(..., alias='$ref')


class ApplicationJsonCharsetUTF820(BaseModel):
    examples: Examples20
    schema_: Schema30 = Field(..., alias='schema')


class Content20(BaseModel):
    application_json_charset_UTF_8: ApplicationJsonCharsetUTF820 = Field(
        ..., alias='application/json;charset=UTF-8'
    )


class Field2007(BaseModel):
    content: Content20
    description: str


class Error9(BaseModel):
    code: int
    status: str
    message: str


class Value23(BaseModel):
    error: Error9


class ErrorResponse9(BaseModel):
    description: str
    value: Value23


class Examples21(BaseModel):
    Error_Response: ErrorResponse9 = Field(..., alias='Error Response')


class Schema31(BaseModel):
    _ref: str = Field(..., alias='$ref')


class ApplicationJsonCharsetUTF821(BaseModel):
    examples: Examples21
    schema_: Schema31 = Field(..., alias='schema')


class Content21(BaseModel):
    application_json_charset_UTF_8: ApplicationJsonCharsetUTF821 = Field(
        ..., alias='application/json;charset=UTF-8'
    )


class Default9(BaseModel):
    content: Content21
    description: str


class Responses9(BaseModel):
    field_200: Field2007 = Field(..., alias='200')
    default: Default9


class Get6(BaseModel):
    description: str
    operationId: str
    parameters: List[Parameter9]
    responses: Responses9
    summary: str
    tags: List[str]


class _AccountsAccountIdScheduledPayments(BaseModel):
    get: Get6


class Schema32(BaseModel):
    type: Optional[str] = None
    format: Optional[str] = None
    _ref: Optional[str] = Field(None, alias='$ref')


class Parameter10(BaseModel):
    description: str
    example: Optional[str] = None
    in_: str = Field(..., alias='in')
    name: str
    required: bool
    schema_: Schema32 = Field(..., alias='schema')


class Self3(BaseModel):
    limit: int
    sort: str
    offset: int


class Pagination3(BaseModel):
    totalCount: int
    self: Self3


class Meta10(BaseModel):
    tracingId: str
    count: int
    pagination: Pagination3


class Datum5(BaseModel):
    id: str
    startDateTime: str
    endDateTime: str
    creationDateTime: str


class Links3(BaseModel):
    self: str


class Value24(BaseModel):
    meta: Meta10
    data: List[Datum5]
    links: Links3


class ExampleResponse(BaseModel):
    description: str
    value: Value24


class Examples22(BaseModel):
    Example_Response: ExampleResponse = Field(..., alias='Example Response')


class Schema33(BaseModel):
    _ref: str = Field(..., alias='$ref')


class ApplicationJsonCharsetUTF822(BaseModel):
    examples: Examples22
    schema_: Schema33 = Field(..., alias='schema')


class Content22(BaseModel):
    application_json_charset_UTF_8: ApplicationJsonCharsetUTF822 = Field(
        ..., alias='application/json;charset=UTF-8'
    )


class Field2008(BaseModel):
    content: Content22
    description: str


class Error10(BaseModel):
    code: int
    status: str
    message: str


class Value25(BaseModel):
    error: Error10


class ErrorResponse10(BaseModel):
    description: str
    value: Value25


class Examples23(BaseModel):
    Error_Response: ErrorResponse10 = Field(..., alias='Error Response')


class Schema34(BaseModel):
    _ref: str = Field(..., alias='$ref')


class ApplicationJsonCharsetUTF823(BaseModel):
    examples: Examples23
    schema_: Schema34 = Field(..., alias='schema')


class Content23(BaseModel):
    application_json_charset_UTF_8: ApplicationJsonCharsetUTF823 = Field(
        ..., alias='application/json;charset=UTF-8'
    )


class Default10(BaseModel):
    content: Content23
    description: str


class Responses10(BaseModel):
    field_200: Field2008 = Field(..., alias='200')
    default: Default10


class Get7(BaseModel):
    description: str
    operationId: str
    parameters: List[Parameter10]
    responses: Responses10
    summary: str
    tags: List[str]


class _AccountsAccountIdStatements(BaseModel):
    get: Get7


class Schema35(BaseModel):
    type: str


class Parameter11(BaseModel):
    description: str
    in_: str = Field(..., alias='in')
    name: str
    required: bool
    schema_: Schema35 = Field(..., alias='schema')


class Meta11(BaseModel):
    tracingId: str


class Data6(BaseModel):
    id: str
    startDateTime: str
    endDateTime: str
    creationDateTime: str


class Value26(BaseModel):
    meta: Meta11
    data: Data6


class ExampleResponse1(BaseModel):
    description: str
    value: Value26


class Examples24(BaseModel):
    Example_Response: ExampleResponse1 = Field(..., alias='Example Response')


class Schema36(BaseModel):
    _ref: str = Field(..., alias='$ref')


class ApplicationJsonCharsetUTF824(BaseModel):
    examples: Examples24
    schema_: Schema36 = Field(..., alias='schema')


class Content24(BaseModel):
    application_json_charset_UTF_8: ApplicationJsonCharsetUTF824 = Field(
        ..., alias='application/json;charset=UTF-8'
    )


class Field2009(BaseModel):
    content: Content24
    description: str


class Error11(BaseModel):
    code: int
    status: str
    message: str


class Value27(BaseModel):
    error: Error11


class ErrorResponse11(BaseModel):
    description: str
    value: Value27


class Examples25(BaseModel):
    Error_Response: ErrorResponse11 = Field(..., alias='Error Response')


class Schema37(BaseModel):
    _ref: str = Field(..., alias='$ref')


class ApplicationJsonCharsetUTF825(BaseModel):
    examples: Examples25
    schema_: Schema37 = Field(..., alias='schema')


class Content25(BaseModel):
    application_json_charset_UTF_8: ApplicationJsonCharsetUTF825 = Field(
        ..., alias='application/json;charset=UTF-8'
    )


class Default11(BaseModel):
    content: Content25
    description: str


class Responses11(BaseModel):
    field_200: Field2009 = Field(..., alias='200')
    default: Default11


class Get8(BaseModel):
    description: str
    operationId: str
    parameters: List[Parameter11]
    responses: Responses11
    summary: str
    tags: List[str]


class _AccountsAccountIdStatementsStatementId(BaseModel):
    get: Get8


class Schema38(BaseModel):
    type: str


class Parameter12(BaseModel):
    description: str
    example: Optional[str] = None
    in_: str = Field(..., alias='in')
    name: str
    required: bool
    schema_: Schema38 = Field(..., alias='schema')


class Schema39(BaseModel):
    type: str
    format: str


class ApplicationPdf(BaseModel):
    schema_: Schema39 = Field(..., alias='schema')


class Content26(BaseModel):
    application_pdf: ApplicationPdf = Field(..., alias='application/pdf')


class Field20010(BaseModel):
    content: Content26
    description: str


class Error12(BaseModel):
    code: int
    status: str
    message: str


class Value28(BaseModel):
    error: Error12


class ErrorResponse12(BaseModel):
    description: str
    value: Value28


class Examples26(BaseModel):
    Error_Response: ErrorResponse12 = Field(..., alias='Error Response')


class Schema40(BaseModel):
    _ref: str = Field(..., alias='$ref')


class ApplicationJsonCharsetUTF826(BaseModel):
    examples: Examples26
    schema_: Schema40 = Field(..., alias='schema')


class Content27(BaseModel):
    application_json_charset_UTF_8: ApplicationJsonCharsetUTF826 = Field(
        ..., alias='application/json;charset=UTF-8'
    )


class Default12(BaseModel):
    content: Content27
    description: str


class Responses12(BaseModel):
    field_200: Field20010 = Field(..., alias='200')
    default: Default12


class Get9(BaseModel):
    description: str
    operationId: str
    parameters: List[Parameter12]
    responses: Responses12
    summary: str
    tags: List[str]


class _AccountsAccountIdStatementsStatementIdFile(BaseModel):
    get: Get9


class Items(BaseModel):
    type: str


class Schema41(BaseModel):
    type: Optional[str] = None
    items: Optional[Items] = None
    format: Optional[str] = None
    _ref: Optional[str] = Field(None, alias='$ref')


class Parameter13(BaseModel):
    description: str
    in_: str = Field(..., alias='in')
    name: str
    required: bool
    schema_: Schema41 = Field(..., alias='schema')
    example: Optional[str] = None


class Self4(BaseModel):
    limit: int
    sort: str
    offset: int


class Pagination4(BaseModel):
    totalCount: int
    self: Self4


class Meta12(BaseModel):
    tracingId: str
    count: int
    pagination: Pagination4


class TransactionAmount(BaseModel):
    amount: float
    currency: str


class DomainCode(BaseModel):
    code: str
    name: str


class FamilyCode(BaseModel):
    code: str
    name: str


class SubFamilyCode(BaseModel):
    code: str
    name: str


class IsoBankTransactionCode(BaseModel):
    domainCode: DomainCode
    familyCode: FamilyCode
    subFamilyCode: SubFamilyCode


class ProprietaryBankTransactionCode(BaseModel):
    code: str
    issuer: str


class BalanceAmount3(BaseModel):
    amount: float
    currency: str


class Balance1(BaseModel):
    type: str
    balanceAmount: BalanceAmount3


class TransactionHash(BaseModel):
    hash: str


class Enrichment(BaseModel):
    transactionHash: TransactionHash


class Datum6(BaseModel):
    id: str
    date: str
    bookingDateTime: str
    valueDateTime: str
    status: str
    amount: float
    currency: str
    transactionAmount: TransactionAmount
    reference: str
    description: str
    transactionInformation: List[str]
    isoBankTransactionCode: IsoBankTransactionCode
    proprietaryBankTransactionCode: ProprietaryBankTransactionCode
    balance: Balance1
    enrichment: Enrichment


class Links4(BaseModel):
    self: str


class Value29(BaseModel):
    meta: Meta12
    data: List[Datum6]
    links: Links4


class ExampleResponse2(BaseModel):
    description: str
    value: Value29


class Examples27(BaseModel):
    Example_Response: ExampleResponse2 = Field(..., alias='Example Response')


class Schema42(BaseModel):
    _ref: str = Field(..., alias='$ref')


class ApplicationJsonCharsetUTF827(BaseModel):
    examples: Examples27
    schema_: Schema42 = Field(..., alias='schema')


class Content28(BaseModel):
    application_json_charset_UTF_8: ApplicationJsonCharsetUTF827 = Field(
        ..., alias='application/json;charset=UTF-8'
    )


class Field20011(BaseModel):
    content: Content28
    description: str


class Error13(BaseModel):
    code: int
    status: str
    message: str


class Value30(BaseModel):
    error: Error13


class ErrorResponse13(BaseModel):
    description: str
    value: Value30


class Examples28(BaseModel):
    Error_Response: ErrorResponse13 = Field(..., alias='Error Response')


class Schema43(BaseModel):
    _ref: str = Field(..., alias='$ref')


class ApplicationJsonCharsetUTF828(BaseModel):
    examples: Examples28
    schema_: Schema43 = Field(..., alias='schema')


class Content29(BaseModel):
    application_json_charset_UTF_8: ApplicationJsonCharsetUTF828 = Field(
        ..., alias='application/json;charset=UTF-8'
    )


class Default13(BaseModel):
    content: Content29
    description: str


class Responses13(BaseModel):
    field_200: Field20011 = Field(..., alias='200')
    default: Default13


class Get10(BaseModel):
    description: str
    operationId: str
    parameters: List[Parameter13]
    responses: Responses13
    summary: str
    tags: List[str]


class _AccountsAccountIdTransactions(BaseModel):
    get: Get10


class Schema44(BaseModel):
    type: str


class Parameter14(BaseModel):
    description: str
    in_: str = Field(..., alias='in')
    name: str
    required: bool
    schema_: Schema44 = Field(..., alias='schema')


class Amount(BaseModel):
    amount: float
    currency: str


class AccountIdentification7(BaseModel):
    type: str
    identification: str


class Payee1(BaseModel):
    name: str
    accountIdentifications: List[AccountIdentification7]


class Payment(BaseModel):
    type: str
    paymentIdempotencyId: str
    reference: str
    amount: Amount
    payee: Payee1


class PaymentRequest(BaseModel):
    payments: List[Payment]


class Value31(BaseModel):
    applicationUserId: str
    institutionId: str
    callback: str
    paymentRequest: PaymentRequest


class UKBulkPaymentExampleRequest(BaseModel):
    description: str
    value: Value31


class Examples29(BaseModel):
    UK_Bulk_Payment_Example_Request: UKBulkPaymentExampleRequest = Field(
        ..., alias='UK Bulk Payment Example Request'
    )


class Schema45(BaseModel):
    _ref: str = Field(..., alias='$ref')


class ApplicationJsonCharsetUTF829(BaseModel):
    examples: Examples29
    schema_: Schema45 = Field(..., alias='schema')


class Content30(BaseModel):
    application_json_charset_UTF_8: ApplicationJsonCharsetUTF829 = Field(
        ..., alias='application/json;charset=UTF-8'
    )


class RequestBody2(BaseModel):
    content: Content30
    required: bool


class Meta13(BaseModel):
    tracingId: str


class Data7(BaseModel):
    id: str
    userUuid: str
    applicationUserId: str
    institutionId: str
    status: str
    createdAt: str
    featureScope: List[str]
    state: str
    institutionConsentId: str
    authorisationUrl: str
    qrCodeUrl: str


class Value32(BaseModel):
    meta: Meta13
    data: Data7


class UKBulkPaymentExampleResponse(BaseModel):
    description: str
    value: Value32


class Examples30(BaseModel):
    UK_Bulk_Payment_Example_Response: UKBulkPaymentExampleResponse = Field(
        ..., alias='UK Bulk Payment Example Response'
    )


class Schema46(BaseModel):
    _ref: str = Field(..., alias='$ref')


class ApplicationJsonCharsetUTF830(BaseModel):
    examples: Examples30
    schema_: Schema46 = Field(..., alias='schema')


class Content31(BaseModel):
    application_json_charset_UTF_8: ApplicationJsonCharsetUTF830 = Field(
        ..., alias='application/json;charset=UTF-8'
    )


class Field2012(BaseModel):
    content: Content31
    description: str


class Error14(BaseModel):
    code: int
    status: str
    message: str


class Value33(BaseModel):
    error: Error14


class ErrorResponse14(BaseModel):
    description: str
    value: Value33


class Examples31(BaseModel):
    Error_Response: ErrorResponse14 = Field(..., alias='Error Response')


class Schema47(BaseModel):
    _ref: str = Field(..., alias='$ref')


class ApplicationJsonCharsetUTF831(BaseModel):
    examples: Examples31
    schema_: Schema47 = Field(..., alias='schema')


class Content32(BaseModel):
    application_json_charset_UTF_8: ApplicationJsonCharsetUTF831 = Field(
        ..., alias='application/json;charset=UTF-8'
    )


class Default14(BaseModel):
    content: Content32
    description: str


class Responses14(BaseModel):
    field_201: Field2012 = Field(..., alias='201')
    default: Default14


class Post1(BaseModel):
    description: str
    operationId: str
    parameters: List[Parameter14]
    requestBody: RequestBody2
    responses: Responses14
    summary: str
    tags: List[str]


class _BulkPaymentAuthRequests(BaseModel):
    post: Post1


class Schema48(BaseModel):
    type: str


class Parameter15(BaseModel):
    description: str
    example: Optional[str] = None
    in_: str = Field(..., alias='in')
    name: str
    required: bool
    schema_: Schema48 = Field(..., alias='schema')


class Amount1(BaseModel):
    amount: float
    currency: str


class AccountIdentification8(BaseModel):
    type: str
    identification: str


class Payee2(BaseModel):
    name: str
    accountIdentifications: List[AccountIdentification8]


class Payment1(BaseModel):
    type: str
    paymentIdempotencyId: str
    reference: str
    amount: Amount1
    payee: Payee2


class Value34(BaseModel):
    payments: List[Payment1]


class UKBulkPaymentExampleRequest1(BaseModel):
    description: str
    value: Value34


class Examples32(BaseModel):
    UK_Bulk_Payment_Example_Request: UKBulkPaymentExampleRequest1 = Field(
        ..., alias='UK Bulk Payment Example Request'
    )


class Schema49(BaseModel):
    _ref: str = Field(..., alias='$ref')


class ApplicationJsonCharsetUTF832(BaseModel):
    examples: Examples32
    schema_: Schema49 = Field(..., alias='schema')


class Content33(BaseModel):
    application_json_charset_UTF_8: ApplicationJsonCharsetUTF832 = Field(
        ..., alias='application/json;charset=UTF-8'
    )


class RequestBody3(BaseModel):
    content: Content33
    required: bool


class Meta14(BaseModel):
    tracingId: str


class StatusDetails2(BaseModel):
    status: str
    statusUpdateDate: str


class Data8(BaseModel):
    id: str
    institutionConsentId: str
    status: str
    statusDetails: StatusDetails2
    createdAt: str
    bulkAmountSum: int


class Value35(BaseModel):
    meta: Meta14
    data: Data8


class UKBulkPaymentExampleResponse1(BaseModel):
    description: str
    value: Value35


class Examples33(BaseModel):
    UK_Bulk_Payment_Example_Response: UKBulkPaymentExampleResponse1 = Field(
        ..., alias='UK Bulk Payment Example Response'
    )


class Schema50(BaseModel):
    _ref: str = Field(..., alias='$ref')


class ApplicationJsonCharsetUTF833(BaseModel):
    examples: Examples33
    schema_: Schema50 = Field(..., alias='schema')


class Content34(BaseModel):
    application_json_charset_UTF_8: ApplicationJsonCharsetUTF833 = Field(
        ..., alias='application/json;charset=UTF-8'
    )


class Field2013(BaseModel):
    content: Content34
    description: str


class Error15(BaseModel):
    code: int
    status: str
    message: str


class Value36(BaseModel):
    error: Error15


class ErrorResponse15(BaseModel):
    description: str
    value: Value36


class Examples34(BaseModel):
    Error_Response: ErrorResponse15 = Field(..., alias='Error Response')


class Schema51(BaseModel):
    _ref: str = Field(..., alias='$ref')


class ApplicationJsonCharsetUTF834(BaseModel):
    examples: Examples34
    schema_: Schema51 = Field(..., alias='schema')


class Content35(BaseModel):
    application_json_charset_UTF_8: ApplicationJsonCharsetUTF834 = Field(
        ..., alias='application/json;charset=UTF-8'
    )


class Default15(BaseModel):
    content: Content35
    description: str


class Responses15(BaseModel):
    field_201: Field2013 = Field(..., alias='201')
    default: Default15


class Post2(BaseModel):
    description: str
    operationId: str
    parameters: List[Parameter15]
    requestBody: RequestBody3
    responses: Responses15
    summary: str
    tags: List[str]


class _BulkPayments(BaseModel):
    post: Post2


class Schema52(BaseModel):
    type: str


class Parameter16(BaseModel):
    description: str
    in_: str = Field(..., alias='in')
    name: str
    required: bool
    schema_: Schema52 = Field(..., alias='schema')


class Meta15(BaseModel):
    tracingId: str
    count: int


class Subcategory(BaseModel):
    id: str
    label: str


class Datum7(BaseModel):
    id: str
    label: str
    country: str
    subcategories: List[Subcategory]


class Value37(BaseModel):
    meta: Meta15
    data: List[Datum7]


class ExampleResponse3(BaseModel):
    description: str
    value: Value37


class Examples35(BaseModel):
    Example_Response: ExampleResponse3 = Field(..., alias='Example Response')


class Schema53(BaseModel):
    _ref: str = Field(..., alias='$ref')


class ApplicationJsonCharsetUTF835(BaseModel):
    examples: Examples35
    schema_: Schema53 = Field(..., alias='schema')


class Content36(BaseModel):
    application_json_charset_UTF_8: ApplicationJsonCharsetUTF835 = Field(
        ..., alias='application/json;charset=UTF-8'
    )


class Field20012(BaseModel):
    content: Content36
    description: str


class Error16(BaseModel):
    code: int
    status: str
    message: str


class Value38(BaseModel):
    error: Error16


class ErrorResponse16(BaseModel):
    description: str
    value: Value38


class Examples36(BaseModel):
    Error_Response: ErrorResponse16 = Field(..., alias='Error Response')


class Schema54(BaseModel):
    _ref: str = Field(..., alias='$ref')


class ApplicationJsonCharsetUTF836(BaseModel):
    examples: Examples36
    schema_: Schema54 = Field(..., alias='schema')


class Content37(BaseModel):
    application_json_charset_UTF_8: ApplicationJsonCharsetUTF836 = Field(
        ..., alias='application/json;charset=UTF-8'
    )


class Default16(BaseModel):
    content: Content37
    description: str


class Responses16(BaseModel):
    field_200: Field20012 = Field(..., alias='200')
    default: Default16


class Get11(BaseModel):
    description: str
    operationId: str
    parameters: List[Parameter16]
    responses: Responses16
    summary: str
    tags: List[str]


class _CategoriesCountry(BaseModel):
    get: Get11


class Schema55(BaseModel):
    _ref: str = Field(..., alias='$ref')


class ApplicationJson(BaseModel):
    schema_: Schema55 = Field(..., alias='schema')


class Content38(BaseModel):
    application_json: ApplicationJson = Field(..., alias='application/json')


class RequestBody4(BaseModel):
    content: Content38
    required: bool


class Value39(BaseModel):
    id: str
    userUuid: str
    applicationUserId: str
    institutionId: str
    status: str
    createdAt: str
    featureScope: List[str]
    consentToken: str
    state: str
    authorizedAt: str
    institutionConsentId: str


class ExampleResponse4(BaseModel):
    description: str
    value: Value39


class Examples37(BaseModel):
    Example_Response: ExampleResponse4 = Field(..., alias='Example Response')


class Schema56(BaseModel):
    _ref: str = Field(..., alias='$ref')


class ApplicationJsonCharsetUTF837(BaseModel):
    examples: Examples37
    schema_: Schema56 = Field(..., alias='schema')


class Content39(BaseModel):
    application_json_charset_UTF_8: ApplicationJsonCharsetUTF837 = Field(
        ..., alias='application/json;charset=UTF-8'
    )


class Field2014(BaseModel):
    content: Content39
    description: str


class Error17(BaseModel):
    code: int
    status: str
    message: str


class Value40(BaseModel):
    error: Error17


class ErrorResponse17(BaseModel):
    description: str
    value: Value40


class Examples38(BaseModel):
    Error_Response: ErrorResponse17 = Field(..., alias='Error Response')


class Schema57(BaseModel):
    _ref: str = Field(..., alias='$ref')


class ApplicationJsonCharsetUTF838(BaseModel):
    examples: Examples38
    schema_: Schema57 = Field(..., alias='schema')


class Content40(BaseModel):
    application_json_charset_UTF_8: ApplicationJsonCharsetUTF838 = Field(
        ..., alias='application/json;charset=UTF-8'
    )


class Default17(BaseModel):
    content: Content40
    description: str


class Responses17(BaseModel):
    field_201: Field2014 = Field(..., alias='201')
    default: Default17


class Post3(BaseModel):
    description: str
    operationId: str
    requestBody: RequestBody4
    responses: Responses17
    summary: str
    tags: List[str]


class _ConsentAuthCode(BaseModel):
    post: Post3


class Schema58(BaseModel):
    _ref: str = Field(..., alias='$ref')


class ApplicationJson1(BaseModel):
    schema_: Schema58 = Field(..., alias='schema')


class Content41(BaseModel):
    application_json: ApplicationJson1 = Field(..., alias='application/json')


class RequestBody5(BaseModel):
    content: Content41
    required: bool


class Value41(BaseModel):
    id: str
    userUuid: str
    applicationUserId: str
    institutionId: str
    status: str
    createdAt: str
    featureScope: List[str]
    consentToken: str
    state: str
    authorizedAt: str
    institutionConsentId: str


class ExampleResponse5(BaseModel):
    description: str
    value: Value41


class Examples39(BaseModel):
    Example_Response: ExampleResponse5 = Field(..., alias='Example Response')


class Schema59(BaseModel):
    _ref: str = Field(..., alias='$ref')


class ApplicationJsonCharsetUTF839(BaseModel):
    examples: Examples39
    schema_: Schema59 = Field(..., alias='schema')


class Content42(BaseModel):
    application_json_charset_UTF_8: ApplicationJsonCharsetUTF839 = Field(
        ..., alias='application/json;charset=UTF-8'
    )


class Field2015(BaseModel):
    content: Content42
    description: str


class Error18(BaseModel):
    code: int
    status: str
    message: str


class Value42(BaseModel):
    error: Error18


class ErrorResponse18(BaseModel):
    description: str
    value: Value42


class Examples40(BaseModel):
    Error_Response: ErrorResponse18 = Field(..., alias='Error Response')


class Schema60(BaseModel):
    _ref: str = Field(..., alias='$ref')


class ApplicationJsonCharsetUTF840(BaseModel):
    examples: Examples40
    schema_: Schema60 = Field(..., alias='schema')


class Content43(BaseModel):
    application_json_charset_UTF_8: ApplicationJsonCharsetUTF840 = Field(
        ..., alias='application/json;charset=UTF-8'
    )


class Default18(BaseModel):
    content: Content43
    description: str


class Responses18(BaseModel):
    field_201: Field2015 = Field(..., alias='201')
    default: Default18


class Post4(BaseModel):
    description: str
    operationId: str
    requestBody: RequestBody5
    responses: Responses18
    summary: str
    tags: List[str]


class _ConsentOneTimeToken(BaseModel):
    post: Post4


class Items1(BaseModel):
    type: str
    format: Optional[str] = None


class Schema61(BaseModel):
    uniqueItems: Optional[bool] = None
    type: str
    items: Optional[Items1] = None
    format: Optional[str] = None
    default: Optional[int] = None


class Parameter17(BaseModel):
    description: str
    in_: str = Field(..., alias='in')
    name: str
    required: bool
    schema_: Schema61 = Field(..., alias='schema')


class Self5(BaseModel):
    sort: str
    offset: int


class Pagination5(BaseModel):
    totalCount: int
    self: Self5


class Meta16(BaseModel):
    tracingId: str
    count: int
    pagination: Pagination5


class Datum8(BaseModel):
    id: str
    userUuid: str
    applicationUserId: str
    institutionId: str
    status: str
    createdAt: str
    featureScope: List[str]
    consentToken: str
    state: str
    authorizedAt: str
    institutionConsentId: str


class Value43(BaseModel):
    meta: Meta16
    data: List[Datum8]


class ExampleResponse6(BaseModel):
    description: str
    value: Value43


class Examples41(BaseModel):
    Example_Response: ExampleResponse6 = Field(..., alias='Example Response')


class Schema62(BaseModel):
    _ref: str = Field(..., alias='$ref')


class ApplicationJsonCharsetUTF841(BaseModel):
    examples: Examples41
    schema_: Schema62 = Field(..., alias='schema')


class Content44(BaseModel):
    application_json_charset_UTF_8: ApplicationJsonCharsetUTF841 = Field(
        ..., alias='application/json;charset=UTF-8'
    )


class Field20013(BaseModel):
    content: Content44
    description: str


class Error19(BaseModel):
    code: int
    status: str
    message: str


class Value44(BaseModel):
    error: Error19


class ErrorResponse19(BaseModel):
    description: str
    value: Value44


class Examples42(BaseModel):
    Error_Response: ErrorResponse19 = Field(..., alias='Error Response')


class Schema63(BaseModel):
    _ref: str = Field(..., alias='$ref')


class ApplicationJsonCharsetUTF842(BaseModel):
    examples: Examples42
    schema_: Schema63 = Field(..., alias='schema')


class Content45(BaseModel):
    application_json_charset_UTF_8: ApplicationJsonCharsetUTF842 = Field(
        ..., alias='application/json;charset=UTF-8'
    )


class Default19(BaseModel):
    content: Content45
    description: str


class Responses19(BaseModel):
    field_200: Field20013 = Field(..., alias='200')
    default: Default19


class Get12(BaseModel):
    description: str
    operationId: str
    parameters: List[Parameter17]
    responses: Responses19
    summary: str
    tags: List[str]


class _Consents(BaseModel):
    get: Get12


class Schema64(BaseModel):
    type: str
    format: Optional[str] = None
    default: Optional[bool] = None


class Parameter18(BaseModel):
    description: str
    in_: str = Field(..., alias='in')
    name: str
    required: bool
    schema_: Schema64 = Field(..., alias='schema')


class Meta17(BaseModel):
    tracingId: str


class Data9(BaseModel):
    id: str
    deleteStatus: str
    institutionId: str
    institutionConsentId: str
    creationDate: str


class Value45(BaseModel):
    meta: Meta17
    data: Data9


class ExampleResponse7(BaseModel):
    description: str
    value: Value45


class Examples43(BaseModel):
    Example_Response: ExampleResponse7 = Field(..., alias='Example Response')


class Schema65(BaseModel):
    _ref: str = Field(..., alias='$ref')


class ApplicationJsonCharsetUTF843(BaseModel):
    examples: Examples43
    schema_: Schema65 = Field(..., alias='schema')


class Content46(BaseModel):
    application_json_charset_UTF_8: ApplicationJsonCharsetUTF843 = Field(
        ..., alias='application/json;charset=UTF-8'
    )


class Field20014(BaseModel):
    content: Content46
    description: str


class Error20(BaseModel):
    code: int
    status: str
    message: str


class Value46(BaseModel):
    error: Error20


class ErrorResponse20(BaseModel):
    description: str
    value: Value46


class Examples44(BaseModel):
    Error_Response: ErrorResponse20 = Field(..., alias='Error Response')


class Schema66(BaseModel):
    _ref: str = Field(..., alias='$ref')


class ApplicationJsonCharsetUTF844(BaseModel):
    examples: Examples44
    schema_: Schema66 = Field(..., alias='schema')


class Content47(BaseModel):
    application_json_charset_UTF_8: ApplicationJsonCharsetUTF844 = Field(
        ..., alias='application/json;charset=UTF-8'
    )


class Default20(BaseModel):
    content: Content47
    description: str


class Responses20(BaseModel):
    field_200: Field20014 = Field(..., alias='200')
    default: Default20


class Delete(BaseModel):
    description: str
    operationId: str
    parameters: List[Parameter18]
    responses: Responses20
    summary: str
    tags: List[str]


class Schema67(BaseModel):
    type: str
    format: str


class Parameter19(BaseModel):
    description: str
    in_: str = Field(..., alias='in')
    name: str
    required: bool
    schema_: Schema67 = Field(..., alias='schema')


class Meta18(BaseModel):
    tracingId: str


class Data10(BaseModel):
    id: str
    userUuid: str
    applicationUserId: str
    institutionId: str
    status: str
    createdAt: str
    featureScope: List[str]
    consentToken: str
    state: str
    authorizedAt: str
    institutionConsentId: str


class Value47(BaseModel):
    meta: Meta18
    data: Data10


class ExampleResponse8(BaseModel):
    description: str
    value: Value47


class Examples45(BaseModel):
    Example_Response: ExampleResponse8 = Field(..., alias='Example Response')


class Schema68(BaseModel):
    _ref: str = Field(..., alias='$ref')


class ApplicationJsonCharsetUTF845(BaseModel):
    examples: Examples45
    schema_: Schema68 = Field(..., alias='schema')


class Content48(BaseModel):
    application_json_charset_UTF_8: ApplicationJsonCharsetUTF845 = Field(
        ..., alias='application/json;charset=UTF-8'
    )


class Field20015(BaseModel):
    content: Content48
    description: str


class Error21(BaseModel):
    code: int
    status: str
    message: str


class Value48(BaseModel):
    error: Error21


class ErrorResponse21(BaseModel):
    description: str
    value: Value48


class Examples46(BaseModel):
    Error_Response: ErrorResponse21 = Field(..., alias='Error Response')


class Schema69(BaseModel):
    _ref: str = Field(..., alias='$ref')


class ApplicationJsonCharsetUTF846(BaseModel):
    examples: Examples46
    schema_: Schema69 = Field(..., alias='schema')


class Content49(BaseModel):
    application_json_charset_UTF_8: ApplicationJsonCharsetUTF846 = Field(
        ..., alias='application/json;charset=UTF-8'
    )


class Default21(BaseModel):
    content: Content49
    description: str


class Responses21(BaseModel):
    field_200: Field20015 = Field(..., alias='200')
    default: Default21


class Get13(BaseModel):
    description: str
    operationId: str
    parameters: List[Parameter19]
    responses: Responses21
    summary: str
    tags: List[str]


class _ConsentsConsentId(BaseModel):
    delete: Delete
    get: Get13


class Schema70(BaseModel):
    type: str


class Parameter20(BaseModel):
    description: str
    in_: str = Field(..., alias='in')
    name: str
    required: bool
    schema_: Schema70 = Field(..., alias='schema')


class UserCredentials(BaseModel):
    id: str
    password: str


class Value49(BaseModel):
    applicationUserId: str
    institutionId: str
    userCredentials: UserCredentials


class BerlinGroupExampleRequest1(BaseModel):
    description: str
    value: Value49


class Examples47(BaseModel):
    Berlin_Group_Example_Request: BerlinGroupExampleRequest1 = Field(
        ..., alias='Berlin Group Example Request'
    )


class Schema71(BaseModel):
    _ref: str = Field(..., alias='$ref')


class ApplicationJsonCharsetUTF847(BaseModel):
    examples: Examples47
    schema_: Schema71 = Field(..., alias='schema')


class Content50(BaseModel):
    application_json_charset_UTF_8: ApplicationJsonCharsetUTF847 = Field(
        ..., alias='application/json;charset=UTF-8'
    )


class RequestBody6(BaseModel):
    content: Content50
    required: bool


class Meta19(BaseModel):
    tracingId: str


class ScaMethod(BaseModel):
    id: str
    type: str
    description: str


class Data11(BaseModel):
    id: str
    userUuid: str
    applicationUserId: str
    institutionId: str
    status: str
    createdAt: str
    expiresAt: str
    timeToExpire: str
    featureScope: List[str]
    state: str
    institutionConsentId: str
    scaMethods: List[ScaMethod]


class Value50(BaseModel):
    meta: Meta19
    data: Data11


class BerlinGroupMultipleSCAMethodsExampleResponse(BaseModel):
    description: str
    value: Value50


class Meta20(BaseModel):
    tracingId: str


class ScaMethod1(BaseModel):
    id: str
    type: str
    description: str


class SelectedScaMethod(BaseModel):
    id: str
    type: str
    description: str


class Data12(BaseModel):
    id: str
    userUuid: str
    applicationUserId: str
    institutionId: str
    status: str
    createdAt: str
    expiresAt: str
    timeToExpire: str
    featureScope: List[str]
    state: str
    institutionConsentId: str
    scaMethods: List[ScaMethod1]
    selectedScaMethod: SelectedScaMethod


class Value51(BaseModel):
    meta: Meta20
    data: Data12


class BerlinGroupSingleSCAMethodExampleResponse(BaseModel):
    description: str
    value: Value51


class Examples48(BaseModel):
    Berlin_Group__Multiple_SCA_Methods__Example_Response: BerlinGroupMultipleSCAMethodsExampleResponse = Field(
        ..., alias='Berlin Group (Multiple SCA Methods) Example Response'
    )
    Berlin_Group__Single_SCA_Method__Example_Response: BerlinGroupSingleSCAMethodExampleResponse = Field(
        ..., alias='Berlin Group (Single SCA Method) Example Response'
    )


class Schema72(BaseModel):
    _ref: str = Field(..., alias='$ref')


class ApplicationJsonCharsetUTF848(BaseModel):
    examples: Examples48
    schema_: Schema72 = Field(..., alias='schema')


class Content51(BaseModel):
    application_json_charset_UTF_8: ApplicationJsonCharsetUTF848 = Field(
        ..., alias='application/json;charset=UTF-8'
    )


class Field2016(BaseModel):
    content: Content51
    description: str


class Error22(BaseModel):
    code: int
    status: str
    message: str


class Value52(BaseModel):
    error: Error22


class ErrorResponse22(BaseModel):
    description: str
    value: Value52


class Examples49(BaseModel):
    Error_Response: ErrorResponse22 = Field(..., alias='Error Response')


class Schema73(BaseModel):
    _ref: str = Field(..., alias='$ref')


class ApplicationJsonCharsetUTF849(BaseModel):
    examples: Examples49
    schema_: Schema73 = Field(..., alias='schema')


class Content52(BaseModel):
    application_json_charset_UTF_8: ApplicationJsonCharsetUTF849 = Field(
        ..., alias='application/json;charset=UTF-8'
    )


class Default22(BaseModel):
    content: Content52
    description: str


class Responses22(BaseModel):
    field_201: Field2016 = Field(..., alias='201')
    default: Default22


class Post5(BaseModel):
    description: str
    operationId: str
    parameters: List[Parameter20]
    requestBody: RequestBody6
    responses: Responses22
    summary: str
    tags: List[str]


class _EmbeddedAccountAuthRequests(BaseModel):
    post: Post5


class Schema74(BaseModel):
    type: str


class Parameter21(BaseModel):
    description: str
    in_: str = Field(..., alias='in')
    name: str
    required: bool
    schema_: Schema74 = Field(..., alias='schema')


class Value53(BaseModel):
    applicationUserId: str
    institutionId: str
    scaCode: str


class BerlinGroupSCACodeExampleRequest(BaseModel):
    description: str
    value: Value53


class SelectedScaMethod1(BaseModel):
    id: str
    type: str
    description: str


class Value54(BaseModel):
    applicationUserId: str
    institutionId: str
    selectedScaMethod: SelectedScaMethod1


class BerlinGroupSelectedSCAMethodExampleRequest(BaseModel):
    description: str
    value: Value54


class Examples50(BaseModel):
    Berlin_Group__SCA_Code__Example_Request: BerlinGroupSCACodeExampleRequest = Field(
        ..., alias='Berlin Group (SCA Code) Example Request'
    )
    Berlin_Group__Selected_SCA_Method__Example_Request: BerlinGroupSelectedSCAMethodExampleRequest = Field(
        ..., alias='Berlin Group (Selected SCA Method) Example Request'
    )


class Schema75(BaseModel):
    _ref: str = Field(..., alias='$ref')


class ApplicationJsonCharsetUTF850(BaseModel):
    examples: Examples50
    schema_: Schema75 = Field(..., alias='schema')


class Content53(BaseModel):
    application_json_charset_UTF_8: ApplicationJsonCharsetUTF850 = Field(
        ..., alias='application/json;charset=UTF-8'
    )


class RequestBody7(BaseModel):
    content: Content53
    required: bool


class Meta21(BaseModel):
    tracingId: str


class Data13(BaseModel):
    id: str
    userUuid: str
    applicationUserId: str
    institutionId: str
    status: str
    createdAt: str
    featureScope: List[str]
    state: str
    authorizedAt: str
    institutionConsentId: str


class Value55(BaseModel):
    meta: Meta21
    data: Data13


class BerlinGroupSCACodeExampleResponse(BaseModel):
    description: str
    value: Value55


class Meta22(BaseModel):
    tracingId: str


class SelectedScaMethod2(BaseModel):
    id: str
    type: str
    description: str


class Data14(BaseModel):
    id: str
    userUuid: str
    applicationUserId: str
    institutionId: str
    status: str
    createdAt: str
    expiresAt: str
    timeToExpire: str
    featureScope: List[str]
    state: str
    institutionConsentId: str
    selectedScaMethod: SelectedScaMethod2


class Value56(BaseModel):
    meta: Meta22
    data: Data14


class BerlinGroupSelectedSCAMethodExampleResponse(BaseModel):
    description: str
    value: Value56


class Examples51(BaseModel):
    Berlin_Group__SCA_Code__Example_Response: BerlinGroupSCACodeExampleResponse = Field(
        ..., alias='Berlin Group (SCA Code) Example Response'
    )
    Berlin_Group__Selected_SCA_Method__Example_Response: BerlinGroupSelectedSCAMethodExampleResponse = Field(
        ..., alias='Berlin Group (Selected SCA Method) Example Response'
    )


class Schema76(BaseModel):
    _ref: str = Field(..., alias='$ref')


class ApplicationJsonCharsetUTF851(BaseModel):
    examples: Examples51
    schema_: Schema76 = Field(..., alias='schema')


class Content54(BaseModel):
    application_json_charset_UTF_8: ApplicationJsonCharsetUTF851 = Field(
        ..., alias='application/json;charset=UTF-8'
    )


class Field2017(BaseModel):
    content: Content54
    description: str


class Error23(BaseModel):
    code: int
    status: str
    message: str


class Value57(BaseModel):
    error: Error23


class ErrorResponse23(BaseModel):
    description: str
    value: Value57


class Examples52(BaseModel):
    Error_Response: ErrorResponse23 = Field(..., alias='Error Response')


class Schema77(BaseModel):
    _ref: str = Field(..., alias='$ref')


class ApplicationJsonCharsetUTF852(BaseModel):
    examples: Examples52
    schema_: Schema77 = Field(..., alias='schema')


class Content55(BaseModel):
    application_json_charset_UTF_8: ApplicationJsonCharsetUTF852 = Field(
        ..., alias='application/json;charset=UTF-8'
    )


class Default23(BaseModel):
    content: Content55
    description: str


class Responses23(BaseModel):
    field_201: Field2017 = Field(..., alias='201')
    default: Default23


class Put1(BaseModel):
    description: str
    operationId: str
    parameters: List[Parameter21]
    requestBody: RequestBody7
    responses: Responses23
    summary: str
    tags: List[str]


class _EmbeddedAccountAuthRequestsConsentId(BaseModel):
    put: Put1


class Schema78(BaseModel):
    type: str


class Parameter22(BaseModel):
    description: str
    in_: str = Field(..., alias='in')
    name: str
    required: bool
    schema_: Schema78 = Field(..., alias='schema')


class UserCredentials1(BaseModel):
    id: str
    password: str


class Amount2(BaseModel):
    amount: float
    currency: str


class AccountIdentification9(BaseModel):
    type: str
    identification: str


class Payer(BaseModel):
    name: str
    accountIdentifications: List[AccountIdentification9]


class Address(BaseModel):
    country: str


class AccountIdentification10(BaseModel):
    type: str
    identification: str


class Payee3(BaseModel):
    name: str
    address: Address
    accountIdentifications: List[AccountIdentification10]


class Payment2(BaseModel):
    type: str
    paymentIdempotencyId: str
    reference: str
    amount: Amount2
    payer: Payer
    payee: Payee3


class PaymentRequest1(BaseModel):
    executionDateTime: str
    payments: List[Payment2]


class Value58(BaseModel):
    applicationUserId: str
    institutionId: str
    userCredentials: UserCredentials1
    paymentRequest: PaymentRequest1


class BerlinGroupEUREmbeddedBulkPaymentExampleRequest(BaseModel):
    description: str
    value: Value58


class Examples53(BaseModel):
    Berlin_Group_EUR_Embedded_Bulk_Payment_Example_Request: BerlinGroupEUREmbeddedBulkPaymentExampleRequest = Field(
        ..., alias='Berlin Group EUR Embedded Bulk Payment Example Request'
    )


class Schema79(BaseModel):
    _ref: str = Field(..., alias='$ref')


class ApplicationJsonCharsetUTF853(BaseModel):
    examples: Examples53
    schema_: Schema79 = Field(..., alias='schema')


class Content56(BaseModel):
    application_json_charset_UTF_8: ApplicationJsonCharsetUTF853 = Field(
        ..., alias='application/json;charset=UTF-8'
    )


class RequestBody8(BaseModel):
    content: Content56
    required: bool


class Meta23(BaseModel):
    tracingId: str


class ScaMethod2(BaseModel):
    id: str
    type: str
    description: str


class SelectedScaMethod3(BaseModel):
    id: str
    type: str
    description: str


class Data15(BaseModel):
    id: str
    userUuid: str
    applicationUserId: str
    institutionId: str
    status: str
    createdAt: str
    featureScope: List[str]
    state: str
    institutionConsentId: str
    scaMethods: List[ScaMethod2]
    selectedScaMethod: SelectedScaMethod3


class Value59(BaseModel):
    meta: Meta23
    data: Data15


class BerlinGroupEUREmbeddedBulkPaymentExampleResponse(BaseModel):
    description: str
    value: Value59


class Examples54(BaseModel):
    Berlin_Group_EUR_Embedded_Bulk_Payment_Example_Response: BerlinGroupEUREmbeddedBulkPaymentExampleResponse = Field(
        ..., alias='Berlin Group EUR Embedded Bulk Payment Example Response'
    )


class Schema80(BaseModel):
    _ref: str = Field(..., alias='$ref')


class ApplicationJsonCharsetUTF854(BaseModel):
    examples: Examples54
    schema_: Schema80 = Field(..., alias='schema')


class Content57(BaseModel):
    application_json_charset_UTF_8: ApplicationJsonCharsetUTF854 = Field(
        ..., alias='application/json;charset=UTF-8'
    )


class Field2018(BaseModel):
    content: Content57
    description: str


class Error24(BaseModel):
    code: int
    status: str
    message: str


class Value60(BaseModel):
    error: Error24


class ErrorResponse24(BaseModel):
    description: str
    value: Value60


class Examples55(BaseModel):
    Error_Response: ErrorResponse24 = Field(..., alias='Error Response')


class Schema81(BaseModel):
    _ref: str = Field(..., alias='$ref')


class ApplicationJsonCharsetUTF855(BaseModel):
    examples: Examples55
    schema_: Schema81 = Field(..., alias='schema')


class Content58(BaseModel):
    application_json_charset_UTF_8: ApplicationJsonCharsetUTF855 = Field(
        ..., alias='application/json;charset=UTF-8'
    )


class Default24(BaseModel):
    content: Content58
    description: str


class Responses24(BaseModel):
    field_201: Field2018 = Field(..., alias='201')
    default: Default24


class Post6(BaseModel):
    description: str
    operationId: str
    parameters: List[Parameter22]
    requestBody: RequestBody8
    responses: Responses24
    summary: str
    tags: List[str]


class _EmbeddedBulkPaymentAuthRequests(BaseModel):
    post: Post6


class Schema82(BaseModel):
    type: str


class Parameter23(BaseModel):
    description: str
    in_: str = Field(..., alias='in')
    name: str
    required: bool
    schema_: Schema82 = Field(..., alias='schema')


class Amount3(BaseModel):
    amount: float
    currency: str


class AccountIdentification11(BaseModel):
    type: str
    identification: str


class Payer1(BaseModel):
    name: str
    accountIdentifications: List[AccountIdentification11]


class Address1(BaseModel):
    country: str


class AccountIdentification12(BaseModel):
    type: str
    identification: str


class Payee4(BaseModel):
    name: str
    address: Address1
    accountIdentifications: List[AccountIdentification12]


class Payment3(BaseModel):
    type: str
    paymentIdempotencyId: str
    reference: str
    amount: Amount3
    payer: Payer1
    payee: Payee4


class PaymentRequest2(BaseModel):
    executionDateTime: str
    payments: List[Payment3]


class Value61(BaseModel):
    applicationUserId: str
    institutionId: str
    scaCode: str
    paymentRequest: PaymentRequest2


class BerlinGroupEUREmbeddedBulkPaymentSCACodeExampleRequest(BaseModel):
    description: str
    value: Value61


class Examples56(BaseModel):
    Berlin_Group_EUR_Embedded_Bulk_Payment__SCA_Code__Example_Request: BerlinGroupEUREmbeddedBulkPaymentSCACodeExampleRequest = Field(
        ..., alias='Berlin Group EUR Embedded Bulk Payment (SCA Code) Example Request'
    )


class Schema83(BaseModel):
    _ref: str = Field(..., alias='$ref')


class ApplicationJsonCharsetUTF856(BaseModel):
    examples: Examples56
    schema_: Schema83 = Field(..., alias='schema')


class Content59(BaseModel):
    application_json_charset_UTF_8: ApplicationJsonCharsetUTF856 = Field(
        ..., alias='application/json;charset=UTF-8'
    )


class RequestBody9(BaseModel):
    content: Content59
    required: bool


class Meta24(BaseModel):
    tracingId: str


class Data16(BaseModel):
    id: str
    userUuid: str
    applicationUserId: str
    institutionId: str
    status: str
    createdAt: str
    featureScope: List[str]
    state: str
    authorizedAt: str
    institutionConsentId: str


class Value62(BaseModel):
    meta: Meta24
    data: Data16


class BerlinGroupEUREmbeddedBulkPaymentSCACodeExampleResponse(BaseModel):
    description: str
    value: Value62


class Examples57(BaseModel):
    Berlin_Group_EUR_Embedded_Bulk_Payment__SCA_Code__Example_Response: BerlinGroupEUREmbeddedBulkPaymentSCACodeExampleResponse = Field(
        ..., alias='Berlin Group EUR Embedded Bulk Payment (SCA Code) Example Response'
    )


class Schema84(BaseModel):
    _ref: str = Field(..., alias='$ref')


class ApplicationJsonCharsetUTF857(BaseModel):
    examples: Examples57
    schema_: Schema84 = Field(..., alias='schema')


class Content60(BaseModel):
    application_json_charset_UTF_8: ApplicationJsonCharsetUTF857 = Field(
        ..., alias='application/json;charset=UTF-8'
    )


class Field20016(BaseModel):
    content: Content60
    description: str


class Error25(BaseModel):
    code: int
    status: str
    message: str


class Value63(BaseModel):
    error: Error25


class ErrorResponse25(BaseModel):
    description: str
    value: Value63


class Examples58(BaseModel):
    Error_Response: ErrorResponse25 = Field(..., alias='Error Response')


class Schema85(BaseModel):
    _ref: str = Field(..., alias='$ref')


class ApplicationJsonCharsetUTF858(BaseModel):
    examples: Examples58
    schema_: Schema85 = Field(..., alias='schema')


class Content61(BaseModel):
    application_json_charset_UTF_8: ApplicationJsonCharsetUTF858 = Field(
        ..., alias='application/json;charset=UTF-8'
    )


class Default25(BaseModel):
    content: Content61
    description: str


class Responses25(BaseModel):
    field_200: Field20016 = Field(..., alias='200')
    default: Default25


class Put2(BaseModel):
    description: str
    operationId: str
    parameters: List[Parameter23]
    requestBody: RequestBody9
    responses: Responses25
    summary: str
    tags: List[str]


class _EmbeddedBulkPaymentAuthRequestsConsentId(BaseModel):
    put: Put2


class Schema86(BaseModel):
    type: str


class Parameter24(BaseModel):
    description: str
    in_: str = Field(..., alias='in')
    name: str
    required: bool
    schema_: Schema86 = Field(..., alias='schema')


class UserCredentials2(BaseModel):
    id: str
    password: str


class Amount4(BaseModel):
    amount: float
    currency: str


class AccountIdentification13(BaseModel):
    type: str
    identification: str


class Payer2(BaseModel):
    name: str
    accountIdentifications: List[AccountIdentification13]


class Address2(BaseModel):
    country: str


class AccountIdentification14(BaseModel):
    type: str
    identification: str


class Payee5(BaseModel):
    name: str
    address: Address2
    accountIdentifications: List[AccountIdentification14]


class PaymentRequest3(BaseModel):
    type: str
    paymentIdempotencyId: str
    reference: str
    amount: Amount4
    payer: Payer2
    payee: Payee5


class Value64(BaseModel):
    applicationUserId: str
    institutionId: str
    userCredentials: UserCredentials2
    paymentRequest: PaymentRequest3


class BerlinGroupEURSingleDomesticPaymentExampleRequest(BaseModel):
    description: str
    value: Value64


class Examples59(BaseModel):
    Berlin_Group_EUR_Single_Domestic_Payment_Example_Request: BerlinGroupEURSingleDomesticPaymentExampleRequest = Field(
        ..., alias='Berlin Group EUR Single Domestic Payment Example Request'
    )


class Schema87(BaseModel):
    _ref: str = Field(..., alias='$ref')


class ApplicationJsonCharsetUTF859(BaseModel):
    examples: Examples59
    schema_: Schema87 = Field(..., alias='schema')


class Content62(BaseModel):
    application_json_charset_UTF_8: ApplicationJsonCharsetUTF859 = Field(
        ..., alias='application/json;charset=UTF-8'
    )


class RequestBody10(BaseModel):
    content: Content62
    required: bool


class Meta25(BaseModel):
    tracingId: str


class ScaMethod3(BaseModel):
    id: str
    type: str
    description: str


class Data17(BaseModel):
    id: str
    userUuid: str
    applicationUserId: str
    institutionId: str
    state: str
    status: str
    createdAt: str
    featureScope: List[str]
    scaMethods: List[ScaMethod3]


class Value65(BaseModel):
    meta: Meta25
    data: Data17


class BerlinGroupEURSingleDomesticPaymentExampleResponse(BaseModel):
    description: str
    value: Value65


class Examples60(BaseModel):
    Berlin_Group_EUR_Single_Domestic_Payment_Example_Response: BerlinGroupEURSingleDomesticPaymentExampleResponse = Field(
        ..., alias='Berlin Group EUR Single Domestic Payment Example Response'
    )


class Schema88(BaseModel):
    _ref: str = Field(..., alias='$ref')


class ApplicationJsonCharsetUTF860(BaseModel):
    examples: Examples60
    schema_: Schema88 = Field(..., alias='schema')


class Content63(BaseModel):
    application_json_charset_UTF_8: ApplicationJsonCharsetUTF860 = Field(
        ..., alias='application/json;charset=UTF-8'
    )


class Field2019(BaseModel):
    content: Content63
    description: str


class Error26(BaseModel):
    code: int
    status: str
    message: str


class Value66(BaseModel):
    error: Error26


class ErrorResponse26(BaseModel):
    description: str
    value: Value66


class Examples61(BaseModel):
    Error_Response: ErrorResponse26 = Field(..., alias='Error Response')


class Schema89(BaseModel):
    _ref: str = Field(..., alias='$ref')


class ApplicationJsonCharsetUTF861(BaseModel):
    examples: Examples61
    schema_: Schema89 = Field(..., alias='schema')


class Content64(BaseModel):
    application_json_charset_UTF_8: ApplicationJsonCharsetUTF861 = Field(
        ..., alias='application/json;charset=UTF-8'
    )


class Default26(BaseModel):
    content: Content64
    description: str


class Responses26(BaseModel):
    field_201: Field2019 = Field(..., alias='201')
    default: Default26


class Post7(BaseModel):
    description: str
    operationId: str
    parameters: List[Parameter24]
    requestBody: RequestBody10
    responses: Responses26
    summary: str
    tags: List[str]


class _EmbeddedPaymentAuthRequests(BaseModel):
    post: Post7


class Schema90(BaseModel):
    type: str


class Parameter25(BaseModel):
    description: str
    in_: str = Field(..., alias='in')
    name: str
    required: bool
    schema_: Schema90 = Field(..., alias='schema')


class Amount5(BaseModel):
    amount: float
    currency: str


class AccountIdentification15(BaseModel):
    type: str
    identification: str


class Payer3(BaseModel):
    name: str
    accountIdentifications: List[AccountIdentification15]


class Address3(BaseModel):
    country: str


class AccountIdentification16(BaseModel):
    type: str
    identification: str


class Payee6(BaseModel):
    name: str
    address: Address3
    accountIdentifications: List[AccountIdentification16]


class PaymentRequest4(BaseModel):
    type: str
    paymentIdempotencyId: str
    reference: str
    amount: Amount5
    payer: Payer3
    payee: Payee6


class Value67(BaseModel):
    applicationUserId: str
    institutionId: str
    scaCode: str
    paymentRequest: PaymentRequest4


class BerlinGroupEURSingleDomesticPaymentSCACodeExampleRequest(BaseModel):
    description: str
    value: Value67


class SelectedScaMethod4(BaseModel):
    id: str


class Amount6(BaseModel):
    amount: float
    currency: str


class AccountIdentification17(BaseModel):
    type: str
    identification: str


class Payer4(BaseModel):
    name: str
    accountIdentifications: List[AccountIdentification17]


class Address4(BaseModel):
    country: str


class AccountIdentification18(BaseModel):
    type: str
    identification: str


class Payee7(BaseModel):
    name: str
    address: Address4
    accountIdentifications: List[AccountIdentification18]


class PaymentRequest5(BaseModel):
    type: str
    paymentIdempotencyId: str
    reference: str
    amount: Amount6
    payer: Payer4
    payee: Payee7


class Value68(BaseModel):
    applicationUserId: str
    institutionId: str
    selectedScaMethod: SelectedScaMethod4
    paymentRequest: PaymentRequest5


class BerlinGroupEURSingleDomesticPaymentSelectedSCAMethodExampleRequest(BaseModel):
    description: str
    value: Value68


class Examples62(BaseModel):
    Berlin_Group_EUR_Single_Domestic_Payment__SCA_Code__Example_Request: BerlinGroupEURSingleDomesticPaymentSCACodeExampleRequest = Field(
        ..., alias='Berlin Group EUR Single Domestic Payment (SCA Code) Example Request'
    )
    Berlin_Group_EUR_Single_Domestic_Payment__Selected_SCA_Method__Example_Request: BerlinGroupEURSingleDomesticPaymentSelectedSCAMethodExampleRequest = Field(
        ...,
        alias='Berlin Group EUR Single Domestic Payment (Selected SCA Method) Example Request',
    )


class Schema91(BaseModel):
    _ref: str = Field(..., alias='$ref')


class ApplicationJsonCharsetUTF862(BaseModel):
    examples: Examples62
    schema_: Schema91 = Field(..., alias='schema')


class Content65(BaseModel):
    application_json_charset_UTF_8: ApplicationJsonCharsetUTF862 = Field(
        ..., alias='application/json;charset=UTF-8'
    )


class RequestBody11(BaseModel):
    content: Content65
    required: bool


class Meta26(BaseModel):
    tracingId: str


class Data18(BaseModel):
    id: str
    userUuid: str
    applicationUserId: str
    institutionId: str
    state: str
    status: str
    createdAt: str
    featureScope: List[str]
    authorizedAt: str


class Value69(BaseModel):
    meta: Meta26
    data: Data18


class BerlinGroupEURSingleDomesticPaymentSCACodeExampleResponse(BaseModel):
    description: str
    value: Value69


class Meta27(BaseModel):
    tracingId: str


class SelectedScaMethod5(BaseModel):
    id: str


class Data19(BaseModel):
    id: str
    userUuid: str
    applicationUserId: str
    institutionId: str
    state: str
    status: str
    createdAt: str
    featureScope: List[str]
    selectedScaMethod: SelectedScaMethod5


class Value70(BaseModel):
    meta: Meta27
    data: Data19


class BerlinGroupEURSingleDomesticPaymentSelectedSCAMethodExampleResponse(BaseModel):
    description: str
    value: Value70


class Examples63(BaseModel):
    Berlin_Group_EUR_Single_Domestic_Payment__SCA_Code__Example_Response: BerlinGroupEURSingleDomesticPaymentSCACodeExampleResponse = Field(
        ...,
        alias='Berlin Group EUR Single Domestic Payment (SCA Code) Example Response',
    )
    Berlin_Group_EUR_Single_Domestic_Payment__Selected_SCA_Method__Example_Response: BerlinGroupEURSingleDomesticPaymentSelectedSCAMethodExampleResponse = Field(
        ...,
        alias='Berlin Group EUR Single Domestic Payment (Selected SCA Method) Example Response',
    )


class Schema92(BaseModel):
    _ref: str = Field(..., alias='$ref')


class ApplicationJsonCharsetUTF863(BaseModel):
    examples: Examples63
    schema_: Schema92 = Field(..., alias='schema')


class Content66(BaseModel):
    application_json_charset_UTF_8: ApplicationJsonCharsetUTF863 = Field(
        ..., alias='application/json;charset=UTF-8'
    )


class Field20017(BaseModel):
    content: Content66
    description: str


class Error27(BaseModel):
    code: int
    status: str
    message: str


class Value71(BaseModel):
    error: Error27


class ErrorResponse27(BaseModel):
    description: str
    value: Value71


class Examples64(BaseModel):
    Error_Response: ErrorResponse27 = Field(..., alias='Error Response')


class Schema93(BaseModel):
    _ref: str = Field(..., alias='$ref')


class ApplicationJsonCharsetUTF864(BaseModel):
    examples: Examples64
    schema_: Schema93 = Field(..., alias='schema')


class Content67(BaseModel):
    application_json_charset_UTF_8: ApplicationJsonCharsetUTF864 = Field(
        ..., alias='application/json;charset=UTF-8'
    )


class Default27(BaseModel):
    content: Content67
    description: str


class Responses27(BaseModel):
    field_200: Field20017 = Field(..., alias='200')
    default: Default27


class Put3(BaseModel):
    description: str
    operationId: str
    parameters: List[Parameter25]
    requestBody: RequestBody11
    responses: Responses27
    summary: str
    tags: List[str]


class _EmbeddedPaymentAuthRequestsConsentId(BaseModel):
    put: Put3


class Meta28(BaseModel):
    tracingId: str
    count: int


class Datum9(BaseModel):
    feature: str
    endpoint: str
    documentationUrl: str


class Value72(BaseModel):
    meta: Meta28
    data: List[Datum9]


class ExampleResponse9(BaseModel):
    description: str
    value: Value72


class Examples65(BaseModel):
    Example_Response: ExampleResponse9 = Field(..., alias='Example Response')


class Schema94(BaseModel):
    _ref: str = Field(..., alias='$ref')


class ApplicationJsonCharsetUTF865(BaseModel):
    examples: Examples65
    schema_: Schema94 = Field(..., alias='schema')


class Content68(BaseModel):
    application_json_charset_UTF_8: ApplicationJsonCharsetUTF865 = Field(
        ..., alias='application/json;charset=UTF-8'
    )


class Field20018(BaseModel):
    content: Content68
    description: str


class Error28(BaseModel):
    code: int
    status: str
    message: str


class Value73(BaseModel):
    error: Error28


class ErrorResponse28(BaseModel):
    description: str
    value: Value73


class Examples66(BaseModel):
    Error_Response: ErrorResponse28 = Field(..., alias='Error Response')


class Schema95(BaseModel):
    _ref: str = Field(..., alias='$ref')


class ApplicationJsonCharsetUTF866(BaseModel):
    examples: Examples66
    schema_: Schema95 = Field(..., alias='schema')


class Content69(BaseModel):
    application_json_charset_UTF_8: ApplicationJsonCharsetUTF866 = Field(
        ..., alias='application/json;charset=UTF-8'
    )


class Default28(BaseModel):
    content: Content69
    description: str


class Responses28(BaseModel):
    field_200: Field20018 = Field(..., alias='200')
    default: Default28


class Get14(BaseModel):
    description: str
    operationId: str
    responses: Responses28
    summary: str
    tags: List[str]


class _Features(BaseModel):
    get: Get14


class Schema96(BaseModel):
    type: str


class Parameter26(BaseModel):
    description: str
    example: Optional[str] = None
    in_: str = Field(..., alias='in')
    name: str
    required: bool
    schema_: Schema96 = Field(..., alias='schema')


class Meta29(BaseModel):
    tracingId: str


class Address5(BaseModel):
    addressLines: List
    city: str
    postalCode: str
    country: str


class Data20(BaseModel):
    id: str
    fullName: str
    email: str
    phone: str
    addresses: List[Address5]


class Value74(BaseModel):
    meta: Meta29
    data: Data20


class ExampleResponse10(BaseModel):
    description: str
    value: Value74


class Examples67(BaseModel):
    Example_Response: ExampleResponse10 = Field(..., alias='Example Response')


class Schema97(BaseModel):
    _ref: str = Field(..., alias='$ref')


class ApplicationJsonCharsetUTF867(BaseModel):
    examples: Examples67
    schema_: Schema97 = Field(..., alias='schema')


class Content70(BaseModel):
    application_json_charset_UTF_8: ApplicationJsonCharsetUTF867 = Field(
        ..., alias='application/json;charset=UTF-8'
    )


class Field20019(BaseModel):
    content: Content70
    description: str


class Error29(BaseModel):
    code: int
    status: str
    message: str


class Value75(BaseModel):
    error: Error29


class ErrorResponse29(BaseModel):
    description: str
    value: Value75


class Examples68(BaseModel):
    Error_Response: ErrorResponse29 = Field(..., alias='Error Response')


class Schema98(BaseModel):
    _ref: str = Field(..., alias='$ref')


class ApplicationJsonCharsetUTF868(BaseModel):
    examples: Examples68
    schema_: Schema98 = Field(..., alias='schema')


class Content71(BaseModel):
    application_json_charset_UTF_8: ApplicationJsonCharsetUTF868 = Field(
        ..., alias='application/json;charset=UTF-8'
    )


class Default29(BaseModel):
    content: Content71
    description: str


class Responses29(BaseModel):
    field_200: Field20019 = Field(..., alias='200')
    default: Default29


class Get15(BaseModel):
    description: str
    operationId: str
    parameters: List[Parameter26]
    responses: Responses29
    summary: str
    tags: List[str]


class _Identity(BaseModel):
    get: Get15


class Meta30(BaseModel):
    tracingId: str
    count: int


class Country(BaseModel):
    displayName: str
    countryCode2: str


class MediaItem(BaseModel):
    source: str
    type: str


class Datum10(BaseModel):
    id: str
    name: str
    fullName: str
    countries: List[Country]
    environmentType: str
    credentialsType: str
    media: List[MediaItem]
    features: List[str]


class Value76(BaseModel):
    meta: Meta30
    data: List[Datum10]


class ExampleResponse11(BaseModel):
    description: str
    value: Value76


class Examples69(BaseModel):
    Example_Response: ExampleResponse11 = Field(..., alias='Example Response')


class Schema99(BaseModel):
    _ref: str = Field(..., alias='$ref')


class ApplicationJsonCharsetUTF869(BaseModel):
    examples: Examples69
    schema_: Schema99 = Field(..., alias='schema')


class Content72(BaseModel):
    application_json_charset_UTF_8: ApplicationJsonCharsetUTF869 = Field(
        ..., alias='application/json;charset=UTF-8'
    )


class Field20020(BaseModel):
    content: Content72
    description: str


class Error30(BaseModel):
    code: int
    status: str
    message: str


class Value77(BaseModel):
    error: Error30


class ErrorResponse30(BaseModel):
    description: str
    value: Value77


class Examples70(BaseModel):
    Error_Response: ErrorResponse30 = Field(..., alias='Error Response')


class Schema100(BaseModel):
    _ref: str = Field(..., alias='$ref')


class ApplicationJsonCharsetUTF870(BaseModel):
    examples: Examples70
    schema_: Schema100 = Field(..., alias='schema')


class Content73(BaseModel):
    application_json_charset_UTF_8: ApplicationJsonCharsetUTF870 = Field(
        ..., alias='application/json;charset=UTF-8'
    )


class Default30(BaseModel):
    content: Content73
    description: str


class Responses30(BaseModel):
    field_200: Field20020 = Field(..., alias='200')
    default: Default30


class Get16(BaseModel):
    description: str
    operationId: str
    responses: Responses30
    summary: str
    tags: List[str]


class _Institutions(BaseModel):
    get: Get16


class Schema101(BaseModel):
    type: str


class Parameter27(BaseModel):
    description: str
    in_: str = Field(..., alias='in')
    name: str
    required: bool
    schema_: Schema101 = Field(..., alias='schema')


class Country1(BaseModel):
    displayName: str
    countryCode2: str


class MediaItem1(BaseModel):
    source: str
    type: str


class Value78(BaseModel):
    id: str
    name: str
    fullName: str
    countries: List[Country1]
    environmentType: str
    credentialsType: str
    media: List[MediaItem1]
    features: List[str]


class ExampleResponse12(BaseModel):
    description: str
    value: Value78


class Examples71(BaseModel):
    Example_Response: ExampleResponse12 = Field(..., alias='Example Response')


class Schema102(BaseModel):
    _ref: str = Field(..., alias='$ref')


class ApplicationJsonCharsetUTF871(BaseModel):
    examples: Examples71
    schema_: Schema102 = Field(..., alias='schema')


class Content74(BaseModel):
    application_json_charset_UTF_8: ApplicationJsonCharsetUTF871 = Field(
        ..., alias='application/json;charset=UTF-8'
    )


class Field20021(BaseModel):
    content: Content74
    description: str


class Error31(BaseModel):
    code: int
    status: str
    message: str


class Value79(BaseModel):
    error: Error31


class ErrorResponse31(BaseModel):
    description: str
    value: Value79


class Examples72(BaseModel):
    Error_Response: ErrorResponse31 = Field(..., alias='Error Response')


class Schema103(BaseModel):
    _ref: str = Field(..., alias='$ref')


class ApplicationJsonCharsetUTF872(BaseModel):
    examples: Examples72
    schema_: Schema103 = Field(..., alias='schema')


class Content75(BaseModel):
    application_json_charset_UTF_8: ApplicationJsonCharsetUTF872 = Field(
        ..., alias='application/json;charset=UTF-8'
    )


class Default31(BaseModel):
    content: Content75
    description: str


class Responses31(BaseModel):
    field_200: Field20021 = Field(..., alias='200')
    default: Default31


class Get17(BaseModel):
    description: str
    operationId: str
    parameters: List[Parameter27]
    responses: Responses31
    summary: str
    tags: List[str]


class _InstitutionsInstitutionId(BaseModel):
    get: Get17


class Country2(BaseModel):
    displayName: str
    countryCode2: str


class MediaItem2(BaseModel):
    source: str
    type: str


class Institution(BaseModel):
    id: str
    name: str
    fullName: str
    countries: List[Country2]
    environmentType: str
    credentialsType: str
    media: List[MediaItem2]
    features: List[str]


class Value80(BaseModel):
    uuid: str
    name: str
    active: bool
    authCallbacks: List[str]
    institutions: List[Institution]
    media: List
    created: str
    updated: str


class ExampleResponse13(BaseModel):
    description: str
    value: Value80


class Examples73(BaseModel):
    Example_Response: ExampleResponse13 = Field(..., alias='Example Response')


class Schema104(BaseModel):
    _ref: str = Field(..., alias='$ref')


class ApplicationJsonCharsetUTF873(BaseModel):
    examples: Examples73
    schema_: Schema104 = Field(..., alias='schema')


class Content76(BaseModel):
    application_json_charset_UTF_8: ApplicationJsonCharsetUTF873 = Field(
        ..., alias='application/json;charset=UTF-8'
    )


class Field20022(BaseModel):
    content: Content76
    description: str


class Error32(BaseModel):
    code: int
    status: str
    message: str


class Value81(BaseModel):
    error: Error32


class ErrorResponse32(BaseModel):
    description: str
    value: Value81


class Examples74(BaseModel):
    Error_Response: ErrorResponse32 = Field(..., alias='Error Response')


class Schema105(BaseModel):
    _ref: str = Field(..., alias='$ref')


class ApplicationJsonCharsetUTF874(BaseModel):
    examples: Examples74
    schema_: Schema105 = Field(..., alias='schema')


class Content77(BaseModel):
    application_json_charset_UTF_8: ApplicationJsonCharsetUTF874 = Field(
        ..., alias='application/json;charset=UTF-8'
    )


class Default32(BaseModel):
    content: Content77
    description: str


class Responses32(BaseModel):
    field_200: Field20022 = Field(..., alias='200')
    default: Default32


class Get18(BaseModel):
    description: str
    operationId: str
    responses: Responses32
    summary: str
    tags: List[str]


class _Me(BaseModel):
    get: Get18


class Schema106(BaseModel):
    type: str


class Parameter28(BaseModel):
    description: str
    in_: str = Field(..., alias='in')
    name: str
    required: bool
    schema_: Schema106 = Field(..., alias='schema')


class AccountIdentification19(BaseModel):
    type: str
    identification: str


class Payer5(BaseModel):
    name: str
    accountIdentifications: List[AccountIdentification19]


class Amount7(BaseModel):
    amount: float
    currency: str


class Address6(BaseModel):
    country: str


class AccountIdentification20(BaseModel):
    type: str
    identification: str


class Payee8(BaseModel):
    name: str
    address: Address6
    accountIdentifications: List[AccountIdentification20]


class PaymentRequest6(BaseModel):
    paymentIdempotencyId: str
    payer: Payer5
    amount: Amount7
    reference: str
    type: str
    payee: Payee8


class Value82(BaseModel):
    applicationUserId: str
    institutionId: str
    callback: str
    paymentRequest: PaymentRequest6


class EURSingleDomesticExampleRequest(BaseModel):
    description: str
    value: Value82


class Amount8(BaseModel):
    amount: float
    currency: str


class Address7(BaseModel):
    country: str


class AccountIdentification21(BaseModel):
    type: str
    identification: str


class Payee9(BaseModel):
    name: str
    address: Address7
    accountIdentifications: List[AccountIdentification21]


class PaymentRequest7(BaseModel):
    paymentIdempotencyId: str
    amount: Amount8
    reference: str
    type: str
    payee: Payee9


class Value83(BaseModel):
    applicationUserId: str
    institutionId: str
    callback: str
    paymentRequest: PaymentRequest7


class GBPSingleDomesticExampleRequest(BaseModel):
    description: str
    value: Value83


class Examples75(BaseModel):
    EUR_Single_Domestic_Example_Request: EURSingleDomesticExampleRequest = Field(
        ..., alias='EUR Single Domestic Example Request'
    )
    GBP_Single_Domestic_Example_Request: GBPSingleDomesticExampleRequest = Field(
        ..., alias='GBP Single Domestic Example Request'
    )


class Schema107(BaseModel):
    _ref: str = Field(..., alias='$ref')


class ApplicationJsonCharsetUTF875(BaseModel):
    examples: Examples75
    schema_: Schema107 = Field(..., alias='schema')


class Content78(BaseModel):
    application_json_charset_UTF_8: ApplicationJsonCharsetUTF875 = Field(
        ..., alias='application/json;charset=UTF-8'
    )


class RequestBody12(BaseModel):
    content: Content78
    required: bool


class Meta31(BaseModel):
    tracingId: str


class Data21(BaseModel):
    id: str
    userUuid: str
    applicationUserId: str
    institutionId: str
    status: str
    createdAt: str
    featureScope: List[str]
    state: str
    institutionConsentId: str
    authorisationUrl: str
    qrCodeUrl: str


class Value84(BaseModel):
    meta: Meta31
    data: Data21


class EURSingleDomesticExampleResponse(BaseModel):
    description: str
    value: Value84


class Meta32(BaseModel):
    tracingId: str


class Data22(BaseModel):
    id: str
    userUuid: str
    applicationUserId: str
    institutionId: str
    status: str
    createdAt: str
    featureScope: List[str]
    state: str
    institutionConsentId: str
    authorisationUrl: str
    qrCodeUrl: str


class Value85(BaseModel):
    meta: Meta32
    data: Data22


class GBPSingleDomesticExampleResponse(BaseModel):
    description: str
    value: Value85


class Examples76(BaseModel):
    EUR_Single_Domestic_Example_Response: EURSingleDomesticExampleResponse = Field(
        ..., alias='EUR Single Domestic Example Response'
    )
    GBP_Single_Domestic_Example_Response: GBPSingleDomesticExampleResponse = Field(
        ..., alias='GBP Single Domestic Example Response'
    )


class Schema108(BaseModel):
    _ref: str = Field(..., alias='$ref')


class ApplicationJsonCharsetUTF876(BaseModel):
    examples: Examples76
    schema_: Schema108 = Field(..., alias='schema')


class Content79(BaseModel):
    application_json_charset_UTF_8: ApplicationJsonCharsetUTF876 = Field(
        ..., alias='application/json;charset=UTF-8'
    )


class Field20110(BaseModel):
    content: Content79
    description: str


class Error33(BaseModel):
    code: int
    status: str
    message: str


class Value86(BaseModel):
    error: Error33


class ErrorResponse33(BaseModel):
    description: str
    value: Value86


class Examples77(BaseModel):
    Error_Response: ErrorResponse33 = Field(..., alias='Error Response')


class Schema109(BaseModel):
    _ref: str = Field(..., alias='$ref')


class ApplicationJsonCharsetUTF877(BaseModel):
    examples: Examples77
    schema_: Schema109 = Field(..., alias='schema')


class Content80(BaseModel):
    application_json_charset_UTF_8: ApplicationJsonCharsetUTF877 = Field(
        ..., alias='application/json;charset=UTF-8'
    )


class Default33(BaseModel):
    content: Content80
    description: str


class Responses33(BaseModel):
    field_201: Field20110 = Field(..., alias='201')
    default: Default33


class Post8(BaseModel):
    description: str
    operationId: str
    parameters: List[Parameter28]
    requestBody: RequestBody12
    responses: Responses33
    summary: str
    tags: List[str]


class Schema110(BaseModel):
    type: str


class Parameter29(BaseModel):
    description: str
    in_: str = Field(..., alias='in')
    name: str
    required: bool
    schema_: Schema110 = Field(..., alias='schema')
    example: Optional[str] = None


class AccountIdentification22(BaseModel):
    type: str
    identification: str


class Payer6(BaseModel):
    name: str
    accountIdentifications: List[AccountIdentification22]


class Amount9(BaseModel):
    amount: float
    currency: str


class Address8(BaseModel):
    country: str


class AccountIdentification23(BaseModel):
    type: str
    identification: str


class Payee10(BaseModel):
    name: str
    address: Address8
    accountIdentifications: List[AccountIdentification23]


class PaymentRequest8(BaseModel):
    paymentIdempotencyId: str
    payer: Payer6
    amount: Amount9
    reference: str
    type: str
    payee: Payee10


class Value87(BaseModel):
    applicationUserId: str
    institutionId: str
    paymentRequest: PaymentRequest8


class BerlinGroupEURSingleDomesticPaymentExampleRequest1(BaseModel):
    description: str
    value: Value87


class Examples78(BaseModel):
    Berlin_Group_EUR_Single_Domestic_Payment_Example_Request: BerlinGroupEURSingleDomesticPaymentExampleRequest1 = Field(
        ..., alias='Berlin Group EUR Single Domestic Payment Example Request'
    )


class Schema111(BaseModel):
    _ref: str = Field(..., alias='$ref')


class ApplicationJsonCharsetUTF878(BaseModel):
    examples: Examples78
    schema_: Schema111 = Field(..., alias='schema')


class Content81(BaseModel):
    application_json_charset_UTF_8: ApplicationJsonCharsetUTF878 = Field(
        ..., alias='application/json;charset=UTF-8'
    )


class RequestBody13(BaseModel):
    content: Content81
    required: bool


class Meta33(BaseModel):
    tracingId: str


class Data23(BaseModel):
    id: str
    userUuid: str
    applicationUserId: str
    institutionId: str
    state: str
    status: str
    createdAt: str
    featureScope: List[str]
    authorizedAt: str
    institutionConsentId: str


class Value88(BaseModel):
    meta: Meta33
    data: Data23


class BerlinGroupEURSingleDomesticPaymentExampleResponse1(BaseModel):
    description: str
    value: Value88


class Examples79(BaseModel):
    Berlin_Group_EUR_Single_Domestic_Payment_Example_Response: BerlinGroupEURSingleDomesticPaymentExampleResponse1 = Field(
        ..., alias='Berlin Group EUR Single Domestic Payment Example Response'
    )


class Schema112(BaseModel):
    _ref: str = Field(..., alias='$ref')


class ApplicationJsonCharsetUTF879(BaseModel):
    examples: Examples79
    schema_: Schema112 = Field(..., alias='schema')


class Content82(BaseModel):
    application_json_charset_UTF_8: ApplicationJsonCharsetUTF879 = Field(
        ..., alias='application/json;charset=UTF-8'
    )


class Field20023(BaseModel):
    content: Content82
    description: str


class Error34(BaseModel):
    code: int
    status: str
    message: str


class Value89(BaseModel):
    error: Error34


class ErrorResponse34(BaseModel):
    description: str
    value: Value89


class Examples80(BaseModel):
    Error_Response: ErrorResponse34 = Field(..., alias='Error Response')


class Schema113(BaseModel):
    _ref: str = Field(..., alias='$ref')


class ApplicationJsonCharsetUTF880(BaseModel):
    examples: Examples80
    schema_: Schema113 = Field(..., alias='schema')


class Content83(BaseModel):
    application_json_charset_UTF_8: ApplicationJsonCharsetUTF880 = Field(
        ..., alias='application/json;charset=UTF-8'
    )


class Default34(BaseModel):
    content: Content83
    description: str


class Responses34(BaseModel):
    field_200: Field20023 = Field(..., alias='200')
    default: Default34


class Put4(BaseModel):
    description: str
    operationId: str
    parameters: List[Parameter29]
    requestBody: RequestBody13
    responses: Responses34
    summary: str
    tags: List[str]


class _PaymentAuthRequests(BaseModel):
    post: Post8
    put: Put4


class Schema114(BaseModel):
    type: str


class Parameter30(BaseModel):
    description: str
    example: Optional[str] = None
    in_: str = Field(..., alias='in')
    name: str
    required: bool
    schema_: Schema114 = Field(..., alias='schema')


class AccountIdentification24(BaseModel):
    type: str
    identification: str


class Payer7(BaseModel):
    name: str
    accountIdentifications: List[AccountIdentification24]


class Amount10(BaseModel):
    amount: float
    currency: str


class Address9(BaseModel):
    country: str


class AccountIdentification25(BaseModel):
    type: str
    identification: str


class Payee11(BaseModel):
    name: str
    address: Address9
    accountIdentifications: List[AccountIdentification25]


class Value90(BaseModel):
    paymentIdempotencyId: str
    payer: Payer7
    amount: Amount10
    reference: str
    type: str
    payee: Payee11


class EURDomesticSinglePaymentExampleRequest(BaseModel):
    description: str
    value: Value90


class Amount11(BaseModel):
    amount: float
    currency: str


class Address10(BaseModel):
    country: str


class AccountIdentification26(BaseModel):
    type: str
    identification: str


class Payee12(BaseModel):
    name: str
    address: Address10
    accountIdentifications: List[AccountIdentification26]


class Value91(BaseModel):
    paymentIdempotencyId: str
    amount: Amount11
    reference: str
    type: str
    payee: Payee12


class GBPDomesticSinglePaymentExampleRequest(BaseModel):
    description: str
    value: Value91


class Examples81(BaseModel):
    EUR_Domestic_Single_Payment_Example_Request: EURDomesticSinglePaymentExampleRequest = Field(
        ..., alias='EUR Domestic Single Payment Example Request'
    )
    GBP_Domestic_Single_Payment_Example_Request: GBPDomesticSinglePaymentExampleRequest = Field(
        ..., alias='GBP Domestic Single Payment Example Request'
    )


class Schema115(BaseModel):
    _ref: str = Field(..., alias='$ref')


class ApplicationJsonCharsetUTF881(BaseModel):
    examples: Examples81
    schema_: Schema115 = Field(..., alias='schema')


class Content84(BaseModel):
    application_json_charset_UTF_8: ApplicationJsonCharsetUTF881 = Field(
        ..., alias='application/json;charset=UTF-8'
    )


class RequestBody14(BaseModel):
    content: Content84
    required: bool


class Meta34(BaseModel):
    tracingId: str


class IsoStatus(BaseModel):
    code: str
    name: str


class StatusDetails3(BaseModel):
    status: str
    isoStatus: IsoStatus


class AccountIdentification27(BaseModel):
    type: str
    identification: str


class Payer8(BaseModel):
    name: str
    accountIdentifications: List[AccountIdentification27]


class AccountIdentification28(BaseModel):
    type: str
    identification: str


class PayeeDetails3(BaseModel):
    name: str
    accountIdentifications: List[AccountIdentification28]


class AmountDetails1(BaseModel):
    amount: float
    currency: str


class Data24(BaseModel):
    id: str
    status: str
    statusDetails: StatusDetails3
    payer: Payer8
    payeeDetails: PayeeDetails3
    reference: str
    amount: float
    currency: str
    amountDetails: AmountDetails1


class Value92(BaseModel):
    meta: Meta34
    data: Data24


class EURDomesticSinglePaymentExampleResponse(BaseModel):
    description: str
    value: Value92


class Meta35(BaseModel):
    tracingId: str


class IsoStatus1(BaseModel):
    code: str
    name: str


class StatusDetails4(BaseModel):
    status: str
    statusUpdateDate: str
    isoStatus: IsoStatus1


class AccountIdentification29(BaseModel):
    type: str
    identification: str


class PayeeDetails4(BaseModel):
    name: str
    accountIdentifications: List[AccountIdentification29]


class AmountDetails2(BaseModel):
    amount: float
    currency: str


class Data25(BaseModel):
    id: str
    institutionConsentId: str
    paymentIdempotencyId: str
    paymentLifecycleId: str
    status: str
    statusDetails: StatusDetails4
    payeeDetails: PayeeDetails4
    reference: str
    amount: float
    currency: str
    amountDetails: AmountDetails2
    createdAt: str


class Value93(BaseModel):
    meta: Meta35
    data: Data25


class GBPDomesticSinglePaymentExampleResponse(BaseModel):
    description: str
    value: Value93


class Examples82(BaseModel):
    EUR_Domestic_Single_Payment_Example_Response: EURDomesticSinglePaymentExampleResponse = Field(
        ..., alias='EUR Domestic Single Payment Example Response'
    )
    GBP_Domestic_Single_Payment_Example_Response: GBPDomesticSinglePaymentExampleResponse = Field(
        ..., alias='GBP Domestic Single Payment Example Response'
    )


class Schema116(BaseModel):
    _ref: str = Field(..., alias='$ref')


class ApplicationJsonCharsetUTF882(BaseModel):
    examples: Examples82
    schema_: Schema116 = Field(..., alias='schema')


class Content85(BaseModel):
    application_json_charset_UTF_8: ApplicationJsonCharsetUTF882 = Field(
        ..., alias='application/json;charset=UTF-8'
    )


class Field20111(BaseModel):
    content: Content85
    description: str


class Error35(BaseModel):
    code: int
    status: str
    message: str


class Value94(BaseModel):
    error: Error35


class ErrorResponse35(BaseModel):
    description: str
    value: Value94


class Examples83(BaseModel):
    Error_Response: ErrorResponse35 = Field(..., alias='Error Response')


class Schema117(BaseModel):
    _ref: str = Field(..., alias='$ref')


class ApplicationJsonCharsetUTF883(BaseModel):
    examples: Examples83
    schema_: Schema117 = Field(..., alias='schema')


class Content86(BaseModel):
    application_json_charset_UTF_8: ApplicationJsonCharsetUTF883 = Field(
        ..., alias='application/json;charset=UTF-8'
    )


class Default35(BaseModel):
    content: Content86
    description: str


class Responses35(BaseModel):
    field_201: Field20111 = Field(..., alias='201')
    default: Default35


class Post9(BaseModel):
    description: str
    operationId: str
    parameters: List[Parameter30]
    requestBody: RequestBody14
    responses: Responses35
    summary: str
    tags: List[str]


class _Payments(BaseModel):
    post: Post9


class Schema118(BaseModel):
    type: str


class Parameter31(BaseModel):
    description: str
    in_: str = Field(..., alias='in')
    name: str
    required: bool
    schema_: Schema118 = Field(..., alias='schema')
    example: Optional[str] = None


class Meta36(BaseModel):
    tracingId: str


class AccountIdentification30(BaseModel):
    type: str
    identification: str


class Payer9(BaseModel):
    name: str
    accountIdentifications: List[AccountIdentification30]


class AmountDetails3(BaseModel):
    amount: float
    currency: str


class Address11(BaseModel):
    country: str


class AccountIdentification31(BaseModel):
    type: str
    identification: str


class Payee13(BaseModel):
    name: str
    address: Address11
    accountIdentifications: List[AccountIdentification31]


class Payment4(BaseModel):
    paymentIdempotencyId: str
    payer: Payer9
    amount: float
    amountDetails: AmountDetails3
    reference: str
    type: str
    payee: Payee13


class Data26(BaseModel):
    payments: List[Payment4]


class Value95(BaseModel):
    meta: Meta36
    data: Data26


class EURSingleDomesticPaymentExampleResponse(BaseModel):
    description: str
    value: Value95


class Meta37(BaseModel):
    tracingId: str


class IsoStatus2(BaseModel):
    code: str
    name: str


class StatusDetails5(BaseModel):
    status: str
    statusUpdateDate: str
    isoStatus: IsoStatus2


class AccountIdentification32(BaseModel):
    type: str
    identification: str


class PayeeDetails5(BaseModel):
    name: str
    accountIdentifications: List[AccountIdentification32]


class AmountDetails4(BaseModel):
    amount: float
    currency: str


class Payment5(BaseModel):
    id: str
    institutionConsentId: str
    paymentIdempotencyId: str
    paymentLifecycleId: str
    status: str
    statusDetails: StatusDetails5
    payeeDetails: PayeeDetails5
    reference: str
    amount: float
    currency: str
    amountDetails: AmountDetails4
    createdAt: str


class Data27(BaseModel):
    payments: List[Payment5]


class Value96(BaseModel):
    meta: Meta37
    data: Data27


class GBPSingleDomesticPaymentExampleResponse(BaseModel):
    description: str
    value: Value96


class Meta38(BaseModel):
    tracingId: str


class StatusDetails6(BaseModel):
    status: str
    statusUpdateDate: str


class Payment6(BaseModel):
    id: str
    institutionConsentId: str
    status: str
    statusDetails: StatusDetails6
    createdAt: str
    bulkAmountSum: int


class Data28(BaseModel):
    payments: List[Payment6]


class Value97(BaseModel):
    meta: Meta38
    data: Data28


class UKBulkPaymentExampleResponse2(BaseModel):
    description: str
    value: Value97


class Examples84(BaseModel):
    EUR_Single_Domestic_Payment_Example_Response: EURSingleDomesticPaymentExampleResponse = Field(
        ..., alias='EUR Single Domestic Payment Example Response'
    )
    GBP_Single_Domestic_Payment_Example_Response: GBPSingleDomesticPaymentExampleResponse = Field(
        ..., alias='GBP Single Domestic Payment Example Response'
    )
    UK_Bulk_Payment_Example_Response: UKBulkPaymentExampleResponse2 = Field(
        ..., alias='UK Bulk Payment Example Response'
    )


class Schema119(BaseModel):
    _ref: str = Field(..., alias='$ref')


class ApplicationJsonCharsetUTF884(BaseModel):
    examples: Examples84
    schema_: Schema119 = Field(..., alias='schema')


class Content87(BaseModel):
    application_json_charset_UTF_8: ApplicationJsonCharsetUTF884 = Field(
        ..., alias='application/json;charset=UTF-8'
    )


class Field20024(BaseModel):
    content: Content87
    description: str


class Error36(BaseModel):
    code: int
    status: str
    message: str


class Value98(BaseModel):
    error: Error36


class ErrorResponse36(BaseModel):
    description: str
    value: Value98


class Examples85(BaseModel):
    Error_Response: ErrorResponse36 = Field(..., alias='Error Response')


class Schema120(BaseModel):
    _ref: str = Field(..., alias='$ref')


class ApplicationJsonCharsetUTF885(BaseModel):
    examples: Examples85
    schema_: Schema120 = Field(..., alias='schema')


class Content88(BaseModel):
    application_json_charset_UTF_8: ApplicationJsonCharsetUTF885 = Field(
        ..., alias='application/json;charset=UTF-8'
    )


class Default36(BaseModel):
    content: Content88
    description: str


class Responses36(BaseModel):
    field_200: Field20024 = Field(..., alias='200')
    default: Default36


class Get19(BaseModel):
    description: str
    operationId: str
    parameters: List[Parameter31]
    responses: Responses36
    summary: str
    tags: List[str]


class _PaymentsPaymentIdDetails(BaseModel):
    get: Get19


class Schema121(BaseModel):
    type: str


class Parameter32(BaseModel):
    description: str
    in_: str = Field(..., alias='in')
    name: str
    required: bool
    schema_: Schema121 = Field(..., alias='schema')


class Value99(BaseModel):
    applicationUserId: str
    institutionId: str
    callback: str
    scope: str


class BerlinGroupAISExampleRequest(BaseModel):
    description: str
    value: Value99


class Value100(BaseModel):
    applicationUserId: str
    institutionId: str
    callback: str
    scope: str


class BerlinGroupPISExampleRequest(BaseModel):
    description: str
    value: Value100


class Examples86(BaseModel):
    Berlin_Group__AIS__Example_Request: BerlinGroupAISExampleRequest = Field(
        ..., alias='Berlin Group (AIS) Example Request'
    )
    Berlin_Group__PIS__Example_Request: BerlinGroupPISExampleRequest = Field(
        ..., alias='Berlin Group (PIS) Example Request'
    )


class Schema122(BaseModel):
    _ref: str = Field(..., alias='$ref')


class ApplicationJsonCharsetUTF886(BaseModel):
    examples: Examples86
    schema_: Schema122 = Field(..., alias='schema')


class Content89(BaseModel):
    application_json_charset_UTF_8: ApplicationJsonCharsetUTF886 = Field(
        ..., alias='application/json;charset=UTF-8'
    )


class RequestBody15(BaseModel):
    content: Content89
    required: bool


class Meta39(BaseModel):
    tracingId: str


class Data29(BaseModel):
    id: str
    userUuid: str
    applicationUserId: str
    institutionId: str
    state: str
    status: str
    createdAt: str
    featureScope: List[str]
    authorisationUrl: str
    qrCodeUrl: str


class Value101(BaseModel):
    meta: Meta39
    data: Data29


class BerlinGroupExampleAISResponse(BaseModel):
    description: str
    value: Value101


class Meta40(BaseModel):
    tracingId: str


class Data30(BaseModel):
    id: str
    userUuid: str
    applicationUserId: str
    institutionId: str
    state: str
    status: str
    createdAt: str
    featureScope: List[str]
    authorisationUrl: str
    qrCodeUrl: str


class Value102(BaseModel):
    meta: Meta40
    data: Data30


class BerlinGroupExamplePISResponse(BaseModel):
    description: str
    value: Value102


class Examples87(BaseModel):
    Berlin_Group_Example__AIS__Response: BerlinGroupExampleAISResponse = Field(
        ..., alias='Berlin Group Example (AIS) Response'
    )
    Berlin_Group_Example__PIS__Response: BerlinGroupExamplePISResponse = Field(
        ..., alias='Berlin Group Example (PIS) Response'
    )


class Schema123(BaseModel):
    _ref: str = Field(..., alias='$ref')


class ApplicationJsonCharsetUTF887(BaseModel):
    examples: Examples87
    schema_: Schema123 = Field(..., alias='schema')


class Content90(BaseModel):
    application_json_charset_UTF_8: ApplicationJsonCharsetUTF887 = Field(
        ..., alias='application/json;charset=UTF-8'
    )


class Field20112(BaseModel):
    content: Content90
    description: str


class Error37(BaseModel):
    code: int
    status: str
    message: str


class Value103(BaseModel):
    error: Error37


class ErrorResponse37(BaseModel):
    description: str
    value: Value103


class Examples88(BaseModel):
    Error_Response: ErrorResponse37 = Field(..., alias='Error Response')


class Schema124(BaseModel):
    _ref: str = Field(..., alias='$ref')


class ApplicationJsonCharsetUTF888(BaseModel):
    examples: Examples88
    schema_: Schema124 = Field(..., alias='schema')


class Content91(BaseModel):
    application_json_charset_UTF_8: ApplicationJsonCharsetUTF888 = Field(
        ..., alias='application/json;charset=UTF-8'
    )


class Default37(BaseModel):
    content: Content91
    description: str


class Responses37(BaseModel):
    field_201: Field20112 = Field(..., alias='201')
    default: Default37


class Post10(BaseModel):
    description: str
    operationId: str
    parameters: List[Parameter32]
    requestBody: RequestBody15
    responses: Responses37
    summary: str
    tags: List[str]


class _PreAuthRequests(BaseModel):
    post: Post10


class Schema125(BaseModel):
    type: str


class Parameter33(BaseModel):
    description: str
    in_: str = Field(..., alias='in')
    name: str
    required: bool
    schema_: Schema125 = Field(..., alias='schema')


class Amount12(BaseModel):
    amount: float
    currency: str


class AccountIdentification33(BaseModel):
    type: str
    identification: str


class Payee14(BaseModel):
    name: str
    country: str
    accountIdentifications: List[AccountIdentification33]


class AccountIdentification34(BaseModel):
    type: str
    identification: str


class Payer10(BaseModel):
    accountIdentifications: List[AccountIdentification34]


class Value104(BaseModel):
    applicationUserId: str
    institutionId: str
    callback: str
    scope: str
    reference: str
    amount: Amount12
    payee: Payee14
    payer: Payer10


class CbiGlobePISExampleRequest(BaseModel):
    description: str
    value: Value104


class Examples89(BaseModel):
    Cbi_Globe__PIS__Example_Request: CbiGlobePISExampleRequest = Field(
        ..., alias='Cbi Globe (PIS) Example Request'
    )


class Schema126(BaseModel):
    _ref: str = Field(..., alias='$ref')


class ApplicationJsonCharsetUTF889(BaseModel):
    examples: Examples89
    schema_: Schema126 = Field(..., alias='schema')


class Content92(BaseModel):
    application_json_charset_UTF_8: ApplicationJsonCharsetUTF889 = Field(
        ..., alias='application/json;charset=UTF-8'
    )


class RequestBody16(BaseModel):
    content: Content92
    required: bool


class Meta41(BaseModel):
    tracingId: str


class Data31(BaseModel):
    id: str
    userUuid: str
    applicationUserId: str
    institutionId: str
    state: str
    status: str
    createdAt: str
    featureScope: List[str]
    authorisationUrl: str
    qrCodeUrl: str


class Value105(BaseModel):
    meta: Meta41
    data: Data31


class BerlinGroupExamplePISResponse1(BaseModel):
    description: str
    value: Value105


class Examples90(BaseModel):
    Berlin_Group_Example__PIS__Response: BerlinGroupExamplePISResponse1 = Field(
        ..., alias='Berlin Group Example (PIS) Response'
    )


class Schema127(BaseModel):
    _ref: str = Field(..., alias='$ref')


class ApplicationJsonCharsetUTF890(BaseModel):
    examples: Examples90
    schema_: Schema127 = Field(..., alias='schema')


class Content93(BaseModel):
    application_json_charset_UTF_8: ApplicationJsonCharsetUTF890 = Field(
        ..., alias='application/json;charset=UTF-8'
    )


class Field20113(BaseModel):
    content: Content93
    description: str


class Error38(BaseModel):
    code: int
    status: str
    message: str


class Value106(BaseModel):
    error: Error38


class ErrorResponse38(BaseModel):
    description: str
    value: Value106


class Examples91(BaseModel):
    Error_Response: ErrorResponse38 = Field(..., alias='Error Response')


class Schema128(BaseModel):
    _ref: str = Field(..., alias='$ref')


class ApplicationJsonCharsetUTF891(BaseModel):
    examples: Examples91
    schema_: Schema128 = Field(..., alias='schema')


class Content94(BaseModel):
    application_json_charset_UTF_8: ApplicationJsonCharsetUTF891 = Field(
        ..., alias='application/json;charset=UTF-8'
    )


class Default38(BaseModel):
    content: Content94
    description: str


class Responses38(BaseModel):
    field_201: Field20113 = Field(..., alias='201')
    default: Default38


class Post11(BaseModel):
    description: str
    operationId: str
    parameters: List[Parameter33]
    requestBody: RequestBody16
    responses: Responses38
    summary: str
    tags: List[str]


class _PaymentPreAuthRequests(BaseModel):
    post: Post11


class Items2(BaseModel):
    type: str


class Schema129(BaseModel):
    uniqueItems: bool
    type: str
    items: Items2


class Parameter34(BaseModel):
    description: str
    in_: str = Field(..., alias='in')
    name: str
    required: bool
    schema_: Schema129 = Field(..., alias='schema')


class InstitutionConsent(BaseModel):
    institutionId: str


class ValueItem(BaseModel):
    uuid: str
    applicationUuid: str
    applicationUserId: Optional[str] = None
    institutionConsents: List[InstitutionConsent]
    referenceId: Optional[str] = None


class ExampleResponse14(BaseModel):
    description: str
    value: List[ValueItem]


class Examples92(BaseModel):
    Example_Response: ExampleResponse14 = Field(..., alias='Example Response')


class Items3(BaseModel):
    _ref: str = Field(..., alias='$ref')


class Schema130(BaseModel):
    type: str
    items: Items3


class ApplicationJsonCharsetUTF892(BaseModel):
    examples: Examples92
    schema_: Schema130 = Field(..., alias='schema')


class Content95(BaseModel):
    application_json_charset_UTF_8: ApplicationJsonCharsetUTF892 = Field(
        ..., alias='application/json;charset=UTF-8'
    )


class Field20025(BaseModel):
    content: Content95
    description: str


class Error39(BaseModel):
    code: int
    status: str
    message: str


class Value107(BaseModel):
    error: Error39


class ErrorResponse39(BaseModel):
    description: str
    value: Value107


class Examples93(BaseModel):
    Error_Response: ErrorResponse39 = Field(..., alias='Error Response')


class Schema131(BaseModel):
    _ref: str = Field(..., alias='$ref')


class ApplicationJsonCharsetUTF893(BaseModel):
    examples: Examples93
    schema_: Schema131 = Field(..., alias='schema')


class Content96(BaseModel):
    application_json_charset_UTF_8: ApplicationJsonCharsetUTF893 = Field(
        ..., alias='application/json;charset=UTF-8'
    )


class Default39(BaseModel):
    content: Content96
    description: str


class Responses39(BaseModel):
    field_200: Field20025 = Field(..., alias='200')
    default: Default39


class Get20(BaseModel):
    description: str
    operationId: str
    parameters: List[Parameter34]
    responses: Responses39
    summary: str
    tags: List[str]


class Value108(BaseModel):
    applicationUserId: str


class CreateUserExampleRequest(BaseModel):
    description: str
    value: Value108


class Examples94(BaseModel):
    Create_User_Example_Request: CreateUserExampleRequest = Field(
        ..., alias='Create User Example Request'
    )


class Schema132(BaseModel):
    _ref: str = Field(..., alias='$ref')


class ApplicationJsonCharsetUTF894(BaseModel):
    examples: Examples94
    schema_: Schema132 = Field(..., alias='schema')


class Content97(BaseModel):
    application_json_charset_UTF_8: ApplicationJsonCharsetUTF894 = Field(
        ..., alias='application/json;charset=UTF-8'
    )


class RequestBody17(BaseModel):
    content: Content97
    required: bool


class Value109(BaseModel):
    uuid: str
    applicationUuid: str
    applicationUserId: str
    institutionConsents: List


class ExampleResponse15(BaseModel):
    description: str
    value: Value109


class Examples95(BaseModel):
    Example_Response: ExampleResponse15 = Field(..., alias='Example Response')


class Schema133(BaseModel):
    _ref: str = Field(..., alias='$ref')


class ApplicationJsonCharsetUTF895(BaseModel):
    examples: Examples95
    schema_: Schema133 = Field(..., alias='schema')


class Content98(BaseModel):
    application_json_charset_UTF_8: ApplicationJsonCharsetUTF895 = Field(
        ..., alias='application/json;charset=UTF-8'
    )


class Field20114(BaseModel):
    content: Content98
    description: str


class Error40(BaseModel):
    code: int
    status: str
    message: str


class Value110(BaseModel):
    error: Error40


class ErrorResponse40(BaseModel):
    description: str
    value: Value110


class Examples96(BaseModel):
    Error_Response: ErrorResponse40 = Field(..., alias='Error Response')


class Schema134(BaseModel):
    _ref: str = Field(..., alias='$ref')


class ApplicationJsonCharsetUTF896(BaseModel):
    examples: Examples96
    schema_: Schema134 = Field(..., alias='schema')


class Content99(BaseModel):
    application_json_charset_UTF_8: ApplicationJsonCharsetUTF896 = Field(
        ..., alias='application/json;charset=UTF-8'
    )


class Default40(BaseModel):
    content: Content99
    description: str


class Responses40(BaseModel):
    field_201: Field20114 = Field(..., alias='201')
    default: Default40


class Post12(BaseModel):
    description: str
    operationId: str
    requestBody: RequestBody17
    responses: Responses40
    summary: str
    tags: List[str]


class _Users(BaseModel):
    get: Get20
    post: Post12


class Schema135(BaseModel):
    type: str
    format: str


class Parameter35(BaseModel):
    description: str
    in_: str = Field(..., alias='in')
    name: str
    required: bool
    schema_: Schema135 = Field(..., alias='schema')


class Meta42(BaseModel):
    tracingId: str


class UserConsent(BaseModel):
    institutionId: str


class Data32(BaseModel):
    id: str
    deleteStatus: str
    creationDate: str
    userConsents: List[UserConsent]


class Value111(BaseModel):
    meta: Meta42
    data: Data32


class ExampleResponse16(BaseModel):
    description: str
    value: Value111


class Examples97(BaseModel):
    Example_Response: ExampleResponse16 = Field(..., alias='Example Response')


class Schema136(BaseModel):
    _ref: str = Field(..., alias='$ref')


class ApplicationJsonCharsetUTF897(BaseModel):
    examples: Examples97
    schema_: Schema136 = Field(..., alias='schema')


class Content100(BaseModel):
    application_json_charset_UTF_8: ApplicationJsonCharsetUTF897 = Field(
        ..., alias='application/json;charset=UTF-8'
    )


class Field20026(BaseModel):
    content: Content100
    description: str


class Error41(BaseModel):
    code: int
    status: str
    message: str


class Value112(BaseModel):
    error: Error41


class ErrorResponse41(BaseModel):
    description: str
    value: Value112


class Examples98(BaseModel):
    Error_Response: ErrorResponse41 = Field(..., alias='Error Response')


class Schema137(BaseModel):
    _ref: str = Field(..., alias='$ref')


class ApplicationJsonCharsetUTF898(BaseModel):
    examples: Examples98
    schema_: Schema137 = Field(..., alias='schema')


class Content101(BaseModel):
    application_json_charset_UTF_8: ApplicationJsonCharsetUTF898 = Field(
        ..., alias='application/json;charset=UTF-8'
    )


class Default41(BaseModel):
    content: Content101
    description: str


class Responses41(BaseModel):
    field_200: Field20026 = Field(..., alias='200')
    default: Default41


class Delete1(BaseModel):
    description: str
    operationId: str
    parameters: List[Parameter35]
    responses: Responses41
    summary: str
    tags: List[str]


class Schema138(BaseModel):
    type: str
    format: str


class Parameter36(BaseModel):
    description: str
    in_: str = Field(..., alias='in')
    name: str
    required: bool
    schema_: Schema138 = Field(..., alias='schema')


class InstitutionConsent1(BaseModel):
    institutionId: str


class Value113(BaseModel):
    uuid: str
    applicationUuid: str
    applicationUserId: str
    institutionConsents: List[InstitutionConsent1]


class ExampleResponse17(BaseModel):
    description: str
    value: Value113


class Examples99(BaseModel):
    Example_Response: ExampleResponse17 = Field(..., alias='Example Response')


class Schema139(BaseModel):
    _ref: str = Field(..., alias='$ref')


class ApplicationJsonCharsetUTF899(BaseModel):
    examples: Examples99
    schema_: Schema139 = Field(..., alias='schema')


class Content102(BaseModel):
    application_json_charset_UTF_8: ApplicationJsonCharsetUTF899 = Field(
        ..., alias='application/json;charset=UTF-8'
    )


class Field20027(BaseModel):
    content: Content102
    description: str


class Error42(BaseModel):
    code: int
    status: str
    message: str


class Value114(BaseModel):
    error: Error42


class ErrorResponse42(BaseModel):
    description: str
    value: Value114


class Examples100(BaseModel):
    Error_Response: ErrorResponse42 = Field(..., alias='Error Response')


class Schema140(BaseModel):
    _ref: str = Field(..., alias='$ref')


class ApplicationJsonCharsetUTF8100(BaseModel):
    examples: Examples100
    schema_: Schema140 = Field(..., alias='schema')


class Content103(BaseModel):
    application_json_charset_UTF_8: ApplicationJsonCharsetUTF8100 = Field(
        ..., alias='application/json;charset=UTF-8'
    )


class Default42(BaseModel):
    content: Content103
    description: str


class Responses42(BaseModel):
    field_200: Field20027 = Field(..., alias='200')
    default: Default42


class Get21(BaseModel):
    description: str
    operationId: str
    parameters: List[Parameter36]
    responses: Responses42
    summary: str
    tags: List[str]


class _UsersUserUuid(BaseModel):
    delete: Delete1
    get: Get21


class Schema141(BaseModel):
    type: str
    format: Optional[str] = None


class Parameter37(BaseModel):
    description: str
    in_: str = Field(..., alias='in')
    name: str
    required: bool
    schema_: Schema141 = Field(..., alias='schema')


class Schema142(BaseModel):
    _ref: str = Field(..., alias='$ref')


class ApplicationJson2(BaseModel):
    schema_: Schema142 = Field(..., alias='schema')


class Content104(BaseModel):
    application_json: ApplicationJson2 = Field(..., alias='application/json')


class Field20028(BaseModel):
    description: str
    content: Content104


class Schema143(BaseModel):
    _ref: str = Field(..., alias='$ref')


class ApplicationJson3(BaseModel):
    schema_: Schema143 = Field(..., alias='schema')


class Content105(BaseModel):
    application_json: ApplicationJson3 = Field(..., alias='application/json')


class Field400(BaseModel):
    description: str
    content: Content105


class Schema144(BaseModel):
    _ref: str = Field(..., alias='$ref')


class ApplicationJson4(BaseModel):
    schema_: Schema144 = Field(..., alias='schema')


class Content106(BaseModel):
    application_json: ApplicationJson4 = Field(..., alias='application/json')


class Field401(BaseModel):
    description: str
    content: Content106


class Schema145(BaseModel):
    _ref: str = Field(..., alias='$ref')


class ApplicationJson5(BaseModel):
    schema_: Schema145 = Field(..., alias='schema')


class Content107(BaseModel):
    application_json: ApplicationJson5 = Field(..., alias='application/json')


class Field404(BaseModel):
    description: str
    content: Content107


class Responses43(BaseModel):
    field_200: Field20028 = Field(..., alias='200')
    field_400: Field400 = Field(..., alias='400')
    field_401: Field401 = Field(..., alias='401')
    field_404: Field404 = Field(..., alias='404')


class Post13(BaseModel):
    tags: List[str]
    operationId: str
    summary: str
    description: str
    parameters: List[Parameter37]
    responses: Responses43


class _UsersUserUuidProfileConsents(BaseModel):
    post: Post13


class Schema146(BaseModel):
    type: str
    format: Optional[str] = None


class Parameter38(BaseModel):
    description: str
    in_: str = Field(..., alias='in')
    name: str
    required: bool
    schema_: Schema146 = Field(..., alias='schema')


class Schema147(BaseModel):
    _ref: str = Field(..., alias='$ref')


class ApplicationJson6(BaseModel):
    schema_: Schema147 = Field(..., alias='schema')


class Content108(BaseModel):
    application_json: ApplicationJson6 = Field(..., alias='application/json')


class Field20029(BaseModel):
    description: str
    content: Content108


class Schema148(BaseModel):
    _ref: str = Field(..., alias='$ref')


class ApplicationJson7(BaseModel):
    schema_: Schema148 = Field(..., alias='schema')


class Content109(BaseModel):
    application_json: ApplicationJson7 = Field(..., alias='application/json')


class Field4001(BaseModel):
    description: str
    content: Content109


class Schema149(BaseModel):
    _ref: str = Field(..., alias='$ref')


class ApplicationJson8(BaseModel):
    schema_: Schema149 = Field(..., alias='schema')


class Content110(BaseModel):
    application_json: ApplicationJson8 = Field(..., alias='application/json')


class Field4011(BaseModel):
    description: str
    content: Content110


class Schema150(BaseModel):
    _ref: str = Field(..., alias='$ref')


class ApplicationJson9(BaseModel):
    schema_: Schema150 = Field(..., alias='schema')


class Content111(BaseModel):
    application_json: ApplicationJson9 = Field(..., alias='application/json')


class Field4041(BaseModel):
    description: str
    content: Content111


class Responses44(BaseModel):
    field_200: Field20029 = Field(..., alias='200')
    field_400: Field4001 = Field(..., alias='400')
    field_401: Field4011 = Field(..., alias='401')
    field_404: Field4041 = Field(..., alias='404')


class Get22(BaseModel):
    tags: List[str]
    operationId: str
    summary: str
    description: str
    parameters: List[Parameter38]
    responses: Responses44


class Schema151(BaseModel):
    type: str
    format: Optional[str] = None


class Parameter39(BaseModel):
    description: str
    in_: str = Field(..., alias='in')
    name: str
    required: bool
    schema_: Schema151 = Field(..., alias='schema')


class Field20030(BaseModel):
    description: str


class Schema152(BaseModel):
    _ref: str = Field(..., alias='$ref')


class ApplicationJson10(BaseModel):
    schema_: Schema152 = Field(..., alias='schema')


class Content112(BaseModel):
    application_json: ApplicationJson10 = Field(..., alias='application/json')


class Field4002(BaseModel):
    description: str
    content: Content112


class Schema153(BaseModel):
    _ref: str = Field(..., alias='$ref')


class ApplicationJson11(BaseModel):
    schema_: Schema153 = Field(..., alias='schema')


class Content113(BaseModel):
    application_json: ApplicationJson11 = Field(..., alias='application/json')


class Field4012(BaseModel):
    description: str
    content: Content113


class Schema154(BaseModel):
    _ref: str = Field(..., alias='$ref')


class ApplicationJson12(BaseModel):
    schema_: Schema154 = Field(..., alias='schema')


class Content114(BaseModel):
    application_json: ApplicationJson12 = Field(..., alias='application/json')


class Field4042(BaseModel):
    description: str
    content: Content114


class Responses45(BaseModel):
    field_200: Field20030 = Field(..., alias='200')
    field_400: Field4002 = Field(..., alias='400')
    field_401: Field4012 = Field(..., alias='401')
    field_404: Field4042 = Field(..., alias='404')


class Delete2(BaseModel):
    tags: List[str]
    operationId: str
    summary: str
    description: str
    parameters: List[Parameter39]
    responses: Responses45


class _UsersUserUuidProfileConsentsProfileConsentId(BaseModel):
    get: Get22
    delete: Delete2


class Schema155(BaseModel):
    type: str
    format: str


class Parameter40(BaseModel):
    description: str
    in_: str = Field(..., alias='in')
    name: str
    required: bool
    schema_: Schema155 = Field(..., alias='schema')


class Schema156(BaseModel):
    _ref: str = Field(..., alias='$ref')


class ApplicationJson13(BaseModel):
    schema_: Schema156 = Field(..., alias='schema')


class Content115(BaseModel):
    application_json: ApplicationJson13 = Field(..., alias='application/json')


class Field20031(BaseModel):
    description: str
    content: Content115


class Schema157(BaseModel):
    _ref: str = Field(..., alias='$ref')


class ApplicationJson14(BaseModel):
    schema_: Schema157 = Field(..., alias='schema')


class Content116(BaseModel):
    application_json: ApplicationJson14 = Field(..., alias='application/json')


class Field4003(BaseModel):
    description: str
    content: Content116


class Schema158(BaseModel):
    _ref: str = Field(..., alias='$ref')


class ApplicationJson15(BaseModel):
    schema_: Schema158 = Field(..., alias='schema')


class Content117(BaseModel):
    application_json: ApplicationJson15 = Field(..., alias='application/json')


class Field4013(BaseModel):
    description: str
    content: Content117


class Schema159(BaseModel):
    _ref: str = Field(..., alias='$ref')


class ApplicationJson16(BaseModel):
    schema_: Schema159 = Field(..., alias='schema')


class Content118(BaseModel):
    application_json: ApplicationJson16 = Field(..., alias='application/json')


class Field4043(BaseModel):
    description: str
    content: Content118


class Responses46(BaseModel):
    field_200: Field20031 = Field(..., alias='200')
    field_400: Field4003 = Field(..., alias='400')
    field_401: Field4013 = Field(..., alias='401')
    field_404: Field4043 = Field(..., alias='404')


class Get23(BaseModel):
    tags: List[str]
    operationId: str
    summary: str
    description: str
    parameters: List[Parameter40]
    responses: Responses46


class _UsersUserUuidProfile(BaseModel):
    get: Get23


class Paths(BaseModel):
    _account_auth_requests: _AccountAuthRequests = Field(
        ..., alias='/account-auth-requests'
    )
    _accounts: _Accounts = Field(..., alias='/accounts')
    _accounts__accountId_: _AccountsAccountId = Field(
        ..., alias='/accounts/{accountId}'
    )
    _accounts__accountId__balances: _AccountsAccountIdBalances = Field(
        ..., alias='/accounts/{accountId}/balances'
    )
    _accounts__accountId__beneficiaries: _AccountsAccountIdBeneficiaries = Field(
        ..., alias='/accounts/{accountId}/beneficiaries'
    )
    _accounts__accountId__direct_debits: _AccountsAccountIdDirectDebits = Field(
        ..., alias='/accounts/{accountId}/direct-debits'
    )
    _accounts__accountId__periodic_payments: _AccountsAccountIdPeriodicPayments = Field(
        ..., alias='/accounts/{accountId}/periodic-payments'
    )
    _accounts__accountId__scheduled_payments: _AccountsAccountIdScheduledPayments = (
        Field(..., alias='/accounts/{accountId}/scheduled-payments')
    )
    _accounts__accountId__statements: _AccountsAccountIdStatements = Field(
        ..., alias='/accounts/{accountId}/statements'
    )
    _accounts__accountId__statements__statementId_: _AccountsAccountIdStatementsStatementId = Field(
        ..., alias='/accounts/{accountId}/statements/{statementId}'
    )
    _accounts__accountId__statements__statementId__file: _AccountsAccountIdStatementsStatementIdFile = Field(
        ..., alias='/accounts/{accountId}/statements/{statementId}/file'
    )
    _accounts__accountId__transactions: _AccountsAccountIdTransactions = Field(
        ..., alias='/accounts/{accountId}/transactions'
    )
    _bulk_payment_auth_requests: _BulkPaymentAuthRequests = Field(
        ..., alias='/bulk-payment-auth-requests'
    )
    _bulk_payments: _BulkPayments = Field(..., alias='/bulk-payments')
    _categories__country_: _CategoriesCountry = Field(
        ..., alias='/categories/{country}'
    )
    _consent_auth_code: _ConsentAuthCode = Field(..., alias='/consent-auth-code')
    _consent_one_time_token: _ConsentOneTimeToken = Field(
        ..., alias='/consent-one-time-token'
    )
    _consents: _Consents = Field(..., alias='/consents')
    _consents__consentId_: _ConsentsConsentId = Field(
        ..., alias='/consents/{consentId}'
    )
    _embedded_account_auth_requests: _EmbeddedAccountAuthRequests = Field(
        ..., alias='/embedded-account-auth-requests'
    )
    _embedded_account_auth_requests__consentId_: _EmbeddedAccountAuthRequestsConsentId = Field(
        ..., alias='/embedded-account-auth-requests/{consentId}'
    )
    _embedded_bulk_payment_auth_requests: _EmbeddedBulkPaymentAuthRequests = Field(
        ..., alias='/embedded-bulk-payment-auth-requests'
    )
    _embedded_bulk_payment_auth_requests__consentId_: _EmbeddedBulkPaymentAuthRequestsConsentId = Field(
        ..., alias='/embedded-bulk-payment-auth-requests/{consentId}'
    )
    _embedded_payment_auth_requests: _EmbeddedPaymentAuthRequests = Field(
        ..., alias='/embedded-payment-auth-requests'
    )
    _embedded_payment_auth_requests__consentId_: _EmbeddedPaymentAuthRequestsConsentId = Field(
        ..., alias='/embedded-payment-auth-requests/{consentId}'
    )
    _features: _Features = Field(..., alias='/features')
    _identity: _Identity = Field(..., alias='/identity')
    _institutions: _Institutions = Field(..., alias='/institutions')
    _institutions__institutionId_: _InstitutionsInstitutionId = Field(
        ..., alias='/institutions/{institutionId}'
    )
    _me: _Me = Field(..., alias='/me')
    _payment_auth_requests: _PaymentAuthRequests = Field(
        ..., alias='/payment-auth-requests'
    )
    _payments: _Payments = Field(..., alias='/payments')
    _payments__paymentId__details: _PaymentsPaymentIdDetails = Field(
        ..., alias='/payments/{paymentId}/details'
    )
    _pre_auth_requests: _PreAuthRequests = Field(..., alias='/pre-auth-requests')
    _payment_pre_auth_requests: _PaymentPreAuthRequests = Field(
        ..., alias='/payment-pre-auth-requests'
    )
    _users: _Users = Field(..., alias='/users')
    _users__userUuid_: _UsersUserUuid = Field(..., alias='/users/{userUuid}')
    _users__userUuid__profile_consents: _UsersUserUuidProfileConsents = Field(
        ..., alias='/users/{userUuid}/profile/consents'
    )
    _users__userUuid__profile_consents__profileConsentId_: _UsersUserUuidProfileConsentsProfileConsentId = Field(
        ..., alias='/users/{userUuid}/profile/consents/{profileConsentId}'
    )
    _users__userUuid__profile: _UsersUserUuidProfile = Field(
        ..., alias='/users/{userUuid}/profile'
    )


class Id(BaseModel):
    description: str
    type: str


class Type(BaseModel):
    type: str


class Description(BaseModel):
    description: str
    type: str


class Balance2(BaseModel):
    type: str


class Currency(BaseModel):
    description: str
    type: str


class UsageType(BaseModel):
    _ref: str = Field(..., alias='$ref')


class AccountType(BaseModel):
    _ref: str = Field(..., alias='$ref')


class Nickname(BaseModel):
    description: str
    type: str


class Details(BaseModel):
    description: str
    type: str


class Items4(BaseModel):
    _ref: str = Field(..., alias='$ref')


class AccountNames(BaseModel):
    type: str
    items: Items4


class Items5(BaseModel):
    _ref: str = Field(..., alias='$ref')


class AccountIdentifications(BaseModel):
    uniqueItems: bool
    type: str
    items: Items5


class Items6(BaseModel):
    _ref: str = Field(..., alias='$ref')


class AccountBalances(BaseModel):
    type: str
    items: Items6


class Properties(BaseModel):
    id: Id
    type: Type
    description: Description
    balance: Balance2
    currency: Currency
    usageType: UsageType
    accountType: AccountType
    nickname: Nickname
    details: Details
    accountNames: AccountNames
    accountIdentifications: AccountIdentifications
    accountBalances: AccountBalances


class Account(BaseModel):
    type: str
    properties: Properties


class Meta43(BaseModel):
    _ref: str = Field(..., alias='$ref')


class Items7(BaseModel):
    _ref: str = Field(..., alias='$ref')


class Data33(BaseModel):
    type: str
    items: Items7


class AdditionalProperties(BaseModel):
    type: str


class Links5(BaseModel):
    type: str
    additionalProperties: AdditionalProperties


class Items8(BaseModel):
    _ref: str = Field(..., alias='$ref')


class ForwardedData(BaseModel):
    type: str
    items: Items8


class Items9(BaseModel):
    _ref: str = Field(..., alias='$ref')


class Raw(BaseModel):
    type: str
    items: Items9


class Paging(BaseModel):
    _ref: str = Field(..., alias='$ref')


class TracingId(BaseModel):
    type: str
    writeOnly: bool


class Properties1(BaseModel):
    meta: Meta43
    data: Data33
    links: Links5
    forwardedData: ForwardedData
    raw: Raw
    paging: Paging
    tracingId: TracingId


class AccountApiListResponse(BaseModel):
    type: str
    properties: Properties1


class Meta44(BaseModel):
    _ref: str = Field(..., alias='$ref')


class Data34(BaseModel):
    _ref: str = Field(..., alias='$ref')


class AdditionalProperties1(BaseModel):
    type: str


class Links6(BaseModel):
    type: str
    additionalProperties: AdditionalProperties1


class Items10(BaseModel):
    _ref: str = Field(..., alias='$ref')


class ForwardedData1(BaseModel):
    type: str
    items: Items10


class Items11(BaseModel):
    _ref: str = Field(..., alias='$ref')


class Raw1(BaseModel):
    type: str
    items: Items11


class TracingId1(BaseModel):
    type: str
    writeOnly: bool


class Properties2(BaseModel):
    meta: Meta44
    data: Data34
    links: Links6
    forwardedData: ForwardedData1
    raw: Raw1
    tracingId: TracingId1


class ApiResponseOfAccount(BaseModel):
    type: str
    properties: Properties2


class UserUuid(BaseModel):
    type: str
    format: str


class ApplicationUserId(BaseModel):
    type: str
    description: str
    example: str


class Items12(BaseModel):
    type: str


class ForwardParameters(BaseModel):
    description: str
    type: str
    items: Items12


class InstitutionId(BaseModel):
    type: str
    description: str
    example: str


class Callback(BaseModel):
    type: str
    description: str
    example: str


class Redirect(BaseModel):
    _ref: str = Field(..., alias='$ref')


class OneTimeToken(BaseModel):
    type: str
    description: str
    example: bool


class AccountRequest1(BaseModel):
    _ref: str = Field(..., alias='$ref')


class Properties3(BaseModel):
    userUuid: UserUuid
    applicationUserId: ApplicationUserId
    forwardParameters: ForwardParameters
    institutionId: InstitutionId
    callback: Callback
    redirect: Redirect
    oneTimeToken: OneTimeToken
    accountRequest: AccountRequest1


class AccountAuthorisationRequest(BaseModel):
    required: List[str]
    type: str
    properties: Properties3
    description: str


class Type1(BaseModel):
    _ref: str = Field(..., alias='$ref')


class DateTime(BaseModel):
    type: str
    format: str


class BalanceAmount4(BaseModel):
    _ref: str = Field(..., alias='$ref')


class CreditLineIncluded(BaseModel):
    type: str


class Items13(BaseModel):
    _ref: str = Field(..., alias='$ref')


class CreditLines(BaseModel):
    type: str
    items: Items13


class Properties4(BaseModel):
    type: Type1
    dateTime: DateTime
    balanceAmount: BalanceAmount4
    creditLineIncluded: CreditLineIncluded
    creditLines: CreditLines


class AccountBalance2(BaseModel):
    type: str
    properties: Properties4


class UserUuid1(BaseModel):
    type: str
    format: str


class ApplicationUserId1(BaseModel):
    type: str
    description: str
    example: str


class Items14(BaseModel):
    type: str


class ForwardParameters1(BaseModel):
    type: str
    description: str
    items: Items14


class InstitutionId1(BaseModel):
    type: str
    description: str
    example: str


class Callback1(BaseModel):
    type: str
    description: str
    example: str


class Redirect1(BaseModel):
    _ref: str = Field(..., alias='$ref')


class OneTimeToken1(BaseModel):
    type: str
    description: str
    example: bool


class UserCredentials3(BaseModel):
    _ref: str = Field(..., alias='$ref')


class SelectedScaMethod6(BaseModel):
    _ref: str = Field(..., alias='$ref')


class ScaCode(BaseModel):
    type: str
    description: str
    example: str


class AccountRequest2(BaseModel):
    _ref: str = Field(..., alias='$ref')


class Properties5(BaseModel):
    userUuid: UserUuid1
    applicationUserId: ApplicationUserId1
    forwardParameters: ForwardParameters1
    institutionId: InstitutionId1
    callback: Callback1
    redirect: Redirect1
    oneTimeToken: OneTimeToken1
    userCredentials: UserCredentials3
    selectedScaMethod: SelectedScaMethod6
    scaCode: ScaCode
    accountRequest: AccountRequest2


class AccountEmbeddedAuthorisationRequest(BaseModel):
    required: List[str]
    type: str
    properties: Properties5
    description: str


class Type2(BaseModel):
    _ref: str = Field(..., alias='$ref')


class Identification(BaseModel):
    type: str
    description: str
    example: str


class Properties6(BaseModel):
    type: Type2
    identification: Identification


class AccountIdentification35(BaseModel):
    required: List[str]
    type: str
    properties: Properties6
    description: str


class AccountId(BaseModel):
    type: str
    description: str
    example: str


class AccountIdentification36(BaseModel):
    _ref: str = Field(..., alias='$ref')


class Properties7(BaseModel):
    accountId: AccountId
    accountIdentification: AccountIdentification36


class AccountInfo(BaseModel):
    required: List[str]
    type: str
    properties: Properties7
    description: str


class Name(BaseModel):
    type: str


class Properties8(BaseModel):
    name: Name


class AccountName2(BaseModel):
    type: str
    properties: Properties8


class TransactionFrom(BaseModel):
    type: str
    description: str
    format: str
    example: str


class TransactionTo(BaseModel):
    type: str
    description: str
    format: str
    example: str


class ExpiresAt(BaseModel):
    type: str
    description: str
    format: str
    example: str


class AccountIdentifiers(BaseModel):
    _ref: str = Field(..., alias='$ref')


class Items15(BaseModel):
    _ref: str = Field(..., alias='$ref')


class AccountIdentifiersForTransaction(BaseModel):
    type: str
    description: str
    items: Items15


class Items16(BaseModel):
    _ref: str = Field(..., alias='$ref')


class AccountIdentifiersForBalance(BaseModel):
    type: str
    description: str
    items: Items16


class Items17(BaseModel):
    _ref: str = Field(..., alias='$ref')


class FeatureScope(BaseModel):
    uniqueItems: bool
    type: str
    description: str
    items: Items17


class Properties9(BaseModel):
    transactionFrom: TransactionFrom
    transactionTo: TransactionTo
    expiresAt: ExpiresAt
    accountIdentifiers: AccountIdentifiers
    accountIdentifiersForTransaction: AccountIdentifiersForTransaction
    accountIdentifiersForBalance: AccountIdentifiersForBalance
    featureScope: FeatureScope


class AccountRequest3(BaseModel):
    type: str
    properties: Properties9
    description: str


class Id1(BaseModel):
    type: str


class StartDateTime(BaseModel):
    type: str
    format: str


class EndDateTime(BaseModel):
    type: str
    format: str


class CreationDateTime(BaseModel):
    type: str
    format: str


class Properties10(BaseModel):
    id: Id1
    startDateTime: StartDateTime
    endDateTime: EndDateTime
    creationDateTime: CreationDateTime


class AccountStatement(BaseModel):
    type: str
    properties: Properties10


class AccountBalanceType(BaseModel):
    type: str
    enum: List[str]


class AccountIdentificationType(BaseModel):
    type: str
    description: str
    example: str
    enum: List[str]


class Meta45(BaseModel):
    _ref: str = Field(..., alias='$ref')


class Data35(BaseModel):
    _ref: str = Field(..., alias='$ref')


class AdditionalProperties2(BaseModel):
    type: str


class Links7(BaseModel):
    type: str
    additionalProperties: AdditionalProperties2


class Items18(BaseModel):
    _ref: str = Field(..., alias='$ref')


class ForwardedData2(BaseModel):
    type: str
    items: Items18


class Items19(BaseModel):
    _ref: str = Field(..., alias='$ref')


class Raw2(BaseModel):
    type: str
    items: Items19


class TracingId2(BaseModel):
    type: str
    writeOnly: bool


class Properties11(BaseModel):
    meta: Meta45
    data: Data35
    links: Links7
    forwardedData: ForwardedData2
    raw: Raw2
    tracingId: TracingId2


class ApiResponseOfAccountStatement(BaseModel):
    type: str
    properties: Properties11


class Meta46(BaseModel):
    _ref: str = Field(..., alias='$ref')


class Items20(BaseModel):
    _ref: str = Field(..., alias='$ref')


class Data36(BaseModel):
    type: str
    items: Items20


class AdditionalProperties3(BaseModel):
    type: str


class Links8(BaseModel):
    type: str
    additionalProperties: AdditionalProperties3


class Items21(BaseModel):
    _ref: str = Field(..., alias='$ref')


class ForwardedData3(BaseModel):
    type: str
    items: Items21


class Items22(BaseModel):
    _ref: str = Field(..., alias='$ref')


class Raw3(BaseModel):
    type: str
    items: Items22


class Paging1(BaseModel):
    _ref: str = Field(..., alias='$ref')


class TracingId3(BaseModel):
    type: str
    writeOnly: bool


class Properties12(BaseModel):
    meta: Meta46
    data: Data36
    links: Links8
    forwardedData: ForwardedData3
    raw: Raw3
    paging: Paging1
    tracingId: TracingId3


class ApiListResponseOfAccountStatement(BaseModel):
    type: str
    properties: Properties12


class AccountType1(BaseModel):
    type: str
    enum: List[str]


class Items23(BaseModel):
    type: str


class AddressLines(BaseModel):
    type: str
    description: str
    example: str
    items: Items23


class StreetName(BaseModel):
    type: str
    description: str
    example: str


class BuildingNumber(BaseModel):
    type: str
    description: str
    example: str


class PostCode(BaseModel):
    type: str
    description: str
    example: str


class TownName(BaseModel):
    type: str
    description: str
    example: str


class Items24(BaseModel):
    type: str


class County(BaseModel):
    type: str
    description: str
    example: str
    items: Items24


class Country3(BaseModel):
    type: str
    description: str
    example: str


class Department(BaseModel):
    type: str
    description: str
    example: str


class SubDepartment(BaseModel):
    type: str
    description: str
    example: str


class AddressType(BaseModel):
    _ref: str = Field(..., alias='$ref')


class Properties13(BaseModel):
    addressLines: AddressLines
    streetName: StreetName
    buildingNumber: BuildingNumber
    postCode: PostCode
    townName: TownName
    county: County
    country: Country3
    department: Department
    subDepartment: SubDepartment
    addressType: AddressType


class Example(BaseModel):
    country: str


class Address12(BaseModel):
    type: str
    properties: Properties13
    description: str
    example: Example


class AddressLine(BaseModel):
    type: str


class Properties14(BaseModel):
    addressLine: AddressLine


class AddressDetails(BaseModel):
    type: str
    properties: Properties14


class AddressTypeEnum(BaseModel):
    type: str
    description: str
    enum: List[str]


class Amount14(BaseModel):
    type: str
    description: str
    example: int


class Currency1(BaseModel):
    type: str
    description: str
    example: str


class Properties15(BaseModel):
    amount: Amount14
    currency: Currency1


class Amount13(BaseModel):
    required: List[str]
    type: str
    properties: Properties15
    description: str


class ApiCall(BaseModel):
    type: str


class Code(BaseModel):
    type: str
    format: str


class InstitutionError(BaseModel):
    _ref: str = Field(..., alias='$ref')


class Message(BaseModel):
    type: str


class Source(BaseModel):
    type: str


class Status(BaseModel):
    type: str


class TracingId4(BaseModel):
    type: str


class Properties16(BaseModel):
    code: Code
    institutionError: InstitutionError
    message: Message
    source: Source
    status: Status
    tracingId: TracingId4


class ApiError(BaseModel):
    type: str
    properties: Properties16


class Error43(BaseModel):
    _ref: str = Field(..., alias='$ref')


class Items25(BaseModel):
    _ref: str = Field(..., alias='$ref')


class Monitoring(BaseModel):
    type: str
    items: Items25


class Items26(BaseModel):
    _ref: str = Field(..., alias='$ref')


class Raw4(BaseModel):
    type: str
    items: Items26


class Properties17(BaseModel):
    error: Error43
    monitoring: Monitoring
    raw: Raw4


class InstitutionError1(BaseModel):
    errorMessage: str
    httpStatusCode: int


class Error44(BaseModel):
    tracingId: str
    code: int
    institutionError: InstitutionError1
    source: str
    status: str


class Example1(BaseModel):
    error: Error44
    monitoring: List


class ApiResponseError(BaseModel):
    type: str
    properties: Properties17
    description: str
    example: Example1


class Uuid(BaseModel):
    type: str
    format: str


class Name1(BaseModel):
    type: str


class Active(BaseModel):
    type: str


class Items27(BaseModel):
    type: str


class AuthCallbacks(BaseModel):
    type: str
    items: Items27


class Items28(BaseModel):
    _ref: str = Field(..., alias='$ref')


class Institutions(BaseModel):
    uniqueItems: bool
    type: str
    items: Items28


class Items29(BaseModel):
    _ref: str = Field(..., alias='$ref')


class Media(BaseModel):
    uniqueItems: bool
    type: str
    items: Items29


class Created(BaseModel):
    type: str
    format: str


class Updated(BaseModel):
    type: str
    format: str


class Properties18(BaseModel):
    uuid: Uuid
    name: Name1
    active: Active
    authCallbacks: AuthCallbacks
    institutions: Institutions
    media: Media
    created: Created
    updated: Updated


class Application(BaseModel):
    type: str
    properties: Properties18


class Uuid1(BaseModel):
    type: str
    format: str


class ApplicationUuid(BaseModel):
    type: str
    format: str


class ApplicationUserId2(BaseModel):
    type: str


class ReferenceId(BaseModel):
    type: str


class Items30(BaseModel):
    _ref: str = Field(..., alias='$ref')


class InstitutionConsents(BaseModel):
    type: str
    items: Items30


class Properties19(BaseModel):
    uuid: Uuid1
    applicationUuid: ApplicationUuid
    applicationUserId: ApplicationUserId2
    referenceId: ReferenceId
    institutionConsents: InstitutionConsents


class ApplicationUser(BaseModel):
    type: str
    properties: Properties19


class Id2(BaseModel):
    type: str
    format: str


class UserUuid2(BaseModel):
    type: str
    format: str


class ApplicationUserId3(BaseModel):
    type: str


class ReferenceId1(BaseModel):
    type: str


class InstitutionId2(BaseModel):
    type: str


class Status1(BaseModel):
    type: str
    _ref: str = Field(..., alias='$ref')


class CreatedAt(BaseModel):
    type: str
    format: str


class TransactionFrom1(BaseModel):
    type: str
    format: str


class TransactionTo1(BaseModel):
    type: str
    format: str


class ExpiresAt1(BaseModel):
    type: str
    format: str


class TimeToExpireInMillis(BaseModel):
    type: str
    format: str
    deprecated: bool


class TimeToExpire(BaseModel):
    type: str
    format: str


class Items31(BaseModel):
    _ref: str = Field(..., alias='$ref')


class FeatureScope1(BaseModel):
    uniqueItems: bool
    type: str
    items: Items31


class ConsentToken(BaseModel):
    type: str


class State(BaseModel):
    type: str


class AuthorizedAt(BaseModel):
    type: str
    format: str


class InstitutionConsentId(BaseModel):
    type: str


class AuthorisationUrl(BaseModel):
    type: str


class QrCodeUrl(BaseModel):
    type: str


class Items32(BaseModel):
    _ref: str = Field(..., alias='$ref')


class ScaMethods(BaseModel):
    type: str
    items: Items32


class SelectedScaMethod7(BaseModel):
    _ref: str = Field(..., alias='$ref')


class Properties20(BaseModel):
    id: Id2
    userUuid: UserUuid2
    applicationUserId: ApplicationUserId3
    referenceId: ReferenceId1
    institutionId: InstitutionId2
    status: Status1
    createdAt: CreatedAt
    transactionFrom: TransactionFrom1
    transactionTo: TransactionTo1
    expiresAt: ExpiresAt1
    timeToExpireInMillis: TimeToExpireInMillis
    timeToExpire: TimeToExpire
    featureScope: FeatureScope1
    consentToken: ConsentToken
    state: State
    authorizedAt: AuthorizedAt
    institutionConsentId: InstitutionConsentId
    authorisationUrl: AuthorisationUrl
    qrCodeUrl: QrCodeUrl
    scaMethods: ScaMethods
    selectedScaMethod: SelectedScaMethod7


class AuthorisationEmbeddedRequestResponse(BaseModel):
    type: str
    properties: Properties20


class Meta47(BaseModel):
    _ref: str = Field(..., alias='$ref')


class Data37(BaseModel):
    _ref: str = Field(..., alias='$ref')


class AdditionalProperties4(BaseModel):
    type: str


class Links9(BaseModel):
    type: str
    additionalProperties: AdditionalProperties4


class Items33(BaseModel):
    _ref: str = Field(..., alias='$ref')


class ForwardedData4(BaseModel):
    type: str
    items: Items33


class Items34(BaseModel):
    _ref: str = Field(..., alias='$ref')


class Raw5(BaseModel):
    type: str
    items: Items34


class TracingId5(BaseModel):
    type: str
    writeOnly: bool


class Properties21(BaseModel):
    meta: Meta47
    data: Data37
    links: Links9
    forwardedData: ForwardedData4
    raw: Raw5
    tracingId: TracingId5


class ApiResponseOfAuthorisationEmbeddedRequestResponse(BaseModel):
    type: str
    properties: Properties21


class Id3(BaseModel):
    type: str
    format: str


class UserUuid3(BaseModel):
    type: str
    format: str


class ApplicationUserId4(BaseModel):
    type: str


class ReferenceId2(BaseModel):
    type: str


class InstitutionId3(BaseModel):
    type: str


class Status2(BaseModel):
    type: str
    _ref: str = Field(..., alias='$ref')


class CreatedAt1(BaseModel):
    type: str
    format: str


class TransactionFrom2(BaseModel):
    type: str
    format: str


class TransactionTo2(BaseModel):
    type: str
    format: str


class ExpiresAt2(BaseModel):
    type: str
    format: str


class TimeToExpireInMillis1(BaseModel):
    type: str
    format: str
    deprecated: bool


class TimeToExpire1(BaseModel):
    type: str
    format: str


class Items35(BaseModel):
    _ref: str = Field(..., alias='$ref')


class FeatureScope2(BaseModel):
    uniqueItems: bool
    type: str
    items: Items35


class ConsentToken1(BaseModel):
    type: str


class State1(BaseModel):
    type: str


class AuthorizedAt1(BaseModel):
    type: str
    format: str


class InstitutionConsentId1(BaseModel):
    type: str


class AuthorisationUrl1(BaseModel):
    type: str


class QrCodeUrl1(BaseModel):
    type: str


class Properties22(BaseModel):
    id: Id3
    userUuid: UserUuid3
    applicationUserId: ApplicationUserId4
    referenceId: ReferenceId2
    institutionId: InstitutionId3
    status: Status2
    createdAt: CreatedAt1
    transactionFrom: TransactionFrom2
    transactionTo: TransactionTo2
    expiresAt: ExpiresAt2
    timeToExpireInMillis: TimeToExpireInMillis1
    timeToExpire: TimeToExpire1
    featureScope: FeatureScope2
    consentToken: ConsentToken1
    state: State1
    authorizedAt: AuthorizedAt1
    institutionConsentId: InstitutionConsentId1
    authorisationUrl: AuthorisationUrl1
    qrCodeUrl: QrCodeUrl1


class AuthorisationRequestResponse(BaseModel):
    type: str
    properties: Properties22


class AuthorisationStatus(BaseModel):
    type: str
    enum: List[str]


class Meta48(BaseModel):
    _ref: str = Field(..., alias='$ref')


class Data38(BaseModel):
    _ref: str = Field(..., alias='$ref')


class AdditionalProperties5(BaseModel):
    type: str


class Links10(BaseModel):
    type: str
    additionalProperties: AdditionalProperties5


class Items36(BaseModel):
    _ref: str = Field(..., alias='$ref')


class ForwardedData5(BaseModel):
    type: str
    items: Items36


class Items37(BaseModel):
    _ref: str = Field(..., alias='$ref')


class Raw6(BaseModel):
    type: str
    items: Items37


class TracingId6(BaseModel):
    type: str
    writeOnly: bool


class Properties23(BaseModel):
    meta: Meta48
    data: Data38
    links: Links10
    forwardedData: ForwardedData5
    raw: Raw6
    tracingId: TracingId6


class ApiResponseOfAuthorisationRequestResponse(BaseModel):
    type: str
    properties: Properties23


class Type3(BaseModel):
    _ref: str = Field(..., alias='$ref')


class BalanceAmount5(BaseModel):
    _ref: str = Field(..., alias='$ref')


class Properties24(BaseModel):
    type: Type3
    balanceAmount: BalanceAmount5


class TransactionBalance(BaseModel):
    type: str
    properties: Properties24


class MainBalanceAmount1(BaseModel):
    _ref: str = Field(..., alias='$ref')


class Items38(BaseModel):
    _ref: str = Field(..., alias='$ref')


class Balances1(BaseModel):
    type: str
    items: Items38


class Properties25(BaseModel):
    mainBalanceAmount: MainBalanceAmount1
    balances: Balances1


class Balances(BaseModel):
    type: str
    properties: Properties25


class Meta49(BaseModel):
    _ref: str = Field(..., alias='$ref')


class Data39(BaseModel):
    _ref: str = Field(..., alias='$ref')


class AdditionalProperties6(BaseModel):
    type: str


class Links11(BaseModel):
    type: str
    additionalProperties: AdditionalProperties6


class Items39(BaseModel):
    _ref: str = Field(..., alias='$ref')


class ForwardedData6(BaseModel):
    type: str
    items: Items39


class Items40(BaseModel):
    _ref: str = Field(..., alias='$ref')


class Raw7(BaseModel):
    type: str
    items: Items40


class TracingId7(BaseModel):
    type: str
    writeOnly: bool


class Properties26(BaseModel):
    meta: Meta49
    data: Data39
    links: Links11
    forwardedData: ForwardedData6
    raw: Raw7
    tracingId: TracingId7


class ApiResponseOfBalances(BaseModel):
    type: str
    properties: Properties26


class Id4(BaseModel):
    type: str


class Reference(BaseModel):
    type: str


class Payee15(BaseModel):
    _ref: str = Field(..., alias='$ref')


class Trusted(BaseModel):
    type: str


class Properties27(BaseModel):
    id: Id4
    reference: Reference
    payee: Payee15
    trusted: Trusted


class Beneficiary(BaseModel):
    type: str
    properties: Properties27


class Name2(BaseModel):
    type: str
    description: str
    example: str


class ExampleItem(BaseModel):
    identification: str
    type: str


class Items41(BaseModel):
    _ref: str = Field(..., alias='$ref')


class AccountIdentifications1(BaseModel):
    type: str
    description: str
    example: List[ExampleItem]
    items: Items41
    uniqueItems: bool


class Address13(BaseModel):
    _ref: str = Field(..., alias='$ref')


class Properties28(BaseModel):
    name: Name2
    accountIdentifications: AccountIdentifications1
    address: Address13


class BeneficiaryPayee(BaseModel):
    description: str
    required: List[str]
    type: str
    properties: Properties28


class Meta50(BaseModel):
    _ref: str = Field(..., alias='$ref')


class Items42(BaseModel):
    _ref: str = Field(..., alias='$ref')


class Data40(BaseModel):
    type: str
    items: Items42


class AdditionalProperties7(BaseModel):
    type: str


class Links12(BaseModel):
    type: str
    additionalProperties: AdditionalProperties7


class Items43(BaseModel):
    _ref: str = Field(..., alias='$ref')


class ForwardedData7(BaseModel):
    type: str
    items: Items43


class Items44(BaseModel):
    _ref: str = Field(..., alias='$ref')


class Raw8(BaseModel):
    type: str
    items: Items44


class TracingId8(BaseModel):
    type: str
    writeOnly: bool


class Properties29(BaseModel):
    meta: Meta50
    data: Data40
    links: Links12
    forwardedData: ForwardedData7
    raw: Raw8
    tracingId: TracingId8


class ApiListResponseOfBeneficiary(BaseModel):
    type: str
    properties: Properties29


class UserUuid4(BaseModel):
    type: str
    format: str
    description: str
    example: str


class ApplicationUserId5(BaseModel):
    type: str
    description: str
    example: str


class Items45(BaseModel):
    type: str


class ForwardParameters2(BaseModel):
    type: str
    description: str
    items: Items45


class InstitutionId4(BaseModel):
    type: str
    description: str
    example: str


class Callback2(BaseModel):
    type: str
    description: str
    example: str


class Redirect2(BaseModel):
    _ref: str = Field(..., alias='$ref')


class OneTimeToken2(BaseModel):
    type: str
    description: str
    example: bool


class PaymentRequest9(BaseModel):
    _ref: str = Field(..., alias='$ref')


class Properties30(BaseModel):
    userUuid: UserUuid4
    applicationUserId: ApplicationUserId5
    forwardParameters: ForwardParameters2
    institutionId: InstitutionId4
    callback: Callback2
    redirect: Redirect2
    oneTimeToken: OneTimeToken2
    paymentRequest: PaymentRequest9


class BulkPaymentAuthorisationRequest(BaseModel):
    required: List[str]
    type: str
    properties: Properties30


class UserUuid5(BaseModel):
    type: str
    format: str
    description: str
    example: str


class ApplicationUserId6(BaseModel):
    type: str
    description: str
    example: str


class InstitutionId5(BaseModel):
    type: str
    description: str
    example: str


class Callback3(BaseModel):
    type: str
    description: str
    example: str


class Redirect3(BaseModel):
    _ref: str = Field(..., alias='$ref')


class OneTimeToken3(BaseModel):
    type: str
    description: str
    example: bool


class PaymentRequest10(BaseModel):
    _ref: str = Field(..., alias='$ref')


class UserCredentials4(BaseModel):
    _ref: str = Field(..., alias='$ref')


class SelectedScaMethod8(BaseModel):
    _ref: str = Field(..., alias='$ref')


class ScaCode1(BaseModel):
    type: str
    description: str
    example: str


class Properties31(BaseModel):
    userUuid: UserUuid5
    applicationUserId: ApplicationUserId6
    institutionId: InstitutionId5
    callback: Callback3
    redirect: Redirect3
    oneTimeToken: OneTimeToken3
    paymentRequest: PaymentRequest10
    userCredentials: UserCredentials4
    selectedScaMethod: SelectedScaMethod8
    scaCode: ScaCode1


class BulkPaymentEmbeddedAuthorisationRequest(BaseModel):
    required: List[str]
    type: str
    properties: Properties31
    description: str


class Items46(BaseModel):
    _ref: str = Field(..., alias='$ref')


class Payments(BaseModel):
    type: str
    description: str
    items: Items46


class OriginatorIdentificationNumber(BaseModel):
    type: str
    description: str


class ExecutionDateTime(BaseModel):
    type: str
    description: str
    format: str


class Properties32(BaseModel):
    payments: Payments
    originatorIdentificationNumber: OriginatorIdentificationNumber
    executionDateTime: ExecutionDateTime


class BulkPaymentRequest(BaseModel):
    required: List[str]
    type: str
    properties: Properties32
    description: str


class Items47(BaseModel):
    type: str


class Categories(BaseModel):
    type: str
    items: Items47


class Source1(BaseModel):
    type: str


class Properties33(BaseModel):
    categories: Categories
    source: Source1


class Categorisation(BaseModel):
    type: str
    properties: Properties33


class Id5(BaseModel):
    type: str
    format: str


class Label(BaseModel):
    type: str


class Country4(BaseModel):
    type: str


class Items48(BaseModel):
    _ref: str = Field(..., alias='$ref')


class Subcategories(BaseModel):
    type: str
    items: Items48


class Properties34(BaseModel):
    id: Id5
    label: Label
    country: Country4
    subcategories: Subcategories


class Category(BaseModel):
    type: str
    properties: Properties34


class Meta51(BaseModel):
    _ref: str = Field(..., alias='$ref')


class Items49(BaseModel):
    _ref: str = Field(..., alias='$ref')


class Data41(BaseModel):
    type: str
    items: Items49


class AdditionalProperties8(BaseModel):
    type: str


class Links13(BaseModel):
    type: str
    additionalProperties: AdditionalProperties8


class Items50(BaseModel):
    _ref: str = Field(..., alias='$ref')


class ForwardedData8(BaseModel):
    type: str
    items: Items50


class Items51(BaseModel):
    _ref: str = Field(..., alias='$ref')


class Raw9(BaseModel):
    type: str
    items: Items51


class Paging2(BaseModel):
    _ref: str = Field(..., alias='$ref')


class TracingId9(BaseModel):
    type: str
    writeOnly: bool


class Properties35(BaseModel):
    meta: Meta51
    data: Data41
    links: Links13
    forwardedData: ForwardedData8
    raw: Raw9
    paging: Paging2
    tracingId: TracingId9


class ApiListResponseOfCategory(BaseModel):
    type: str
    properties: Properties35


class ChargeBearerType(BaseModel):
    type: str
    description: str
    enum: List[str]


class ChargeAmount(BaseModel):
    description: str
    _ref: str = Field(..., alias='$ref')


class ChargeType(BaseModel):
    description: str
    type: str


class ChargeTo(BaseModel):
    description: str
    type: str


class Properties36(BaseModel):
    chargeAmount: ChargeAmount
    chargeType: ChargeType
    chargeTo: ChargeTo


class PaymentChargeDetails(BaseModel):
    type: str
    properties: Properties36


class Id6(BaseModel):
    type: str
    format: str


class UserUuid6(BaseModel):
    type: str
    format: str


class ApplicationUserId7(BaseModel):
    type: str


class ReferenceId3(BaseModel):
    type: str


class InstitutionId6(BaseModel):
    type: str


class Status3(BaseModel):
    type: str
    _ref: str = Field(..., alias='$ref')


class CreatedAt2(BaseModel):
    type: str
    format: str


class TransactionFrom3(BaseModel):
    type: str
    format: str


class TransactionTo3(BaseModel):
    type: str
    format: str


class ExpiresAt3(BaseModel):
    type: str
    format: str


class TimeToExpireInMillis2(BaseModel):
    type: str
    format: str
    deprecated: bool


class TimeToExpire2(BaseModel):
    type: str
    format: str


class Items52(BaseModel):
    _ref: str = Field(..., alias='$ref')


class FeatureScope3(BaseModel):
    uniqueItems: bool
    type: str
    items: Items52


class ConsentToken2(BaseModel):
    type: str


class State2(BaseModel):
    type: str


class AuthorizedAt2(BaseModel):
    type: str
    format: str


class InstitutionConsentId2(BaseModel):
    type: str


class Properties37(BaseModel):
    id: Id6
    userUuid: UserUuid6
    applicationUserId: ApplicationUserId7
    referenceId: ReferenceId3
    institutionId: InstitutionId6
    status: Status3
    createdAt: CreatedAt2
    transactionFrom: TransactionFrom3
    transactionTo: TransactionTo3
    expiresAt: ExpiresAt3
    timeToExpireInMillis: TimeToExpireInMillis2
    timeToExpire: TimeToExpire2
    featureScope: FeatureScope3
    consentToken: ConsentToken2
    state: State2
    authorizedAt: AuthorizedAt2
    institutionConsentId: InstitutionConsentId2


class Consent(BaseModel):
    type: str
    properties: Properties37


class Meta52(BaseModel):
    _ref: str = Field(..., alias='$ref')


class Items53(BaseModel):
    _ref: str = Field(..., alias='$ref')


class Data42(BaseModel):
    type: str
    items: Items53


class AdditionalProperties9(BaseModel):
    type: str


class Links14(BaseModel):
    type: str
    additionalProperties: AdditionalProperties9


class Items54(BaseModel):
    _ref: str = Field(..., alias='$ref')


class ForwardedData9(BaseModel):
    type: str
    items: Items54


class Items55(BaseModel):
    _ref: str = Field(..., alias='$ref')


class Raw10(BaseModel):
    type: str
    items: Items55


class Paging3(BaseModel):
    _ref: str = Field(..., alias='$ref')


class TracingId10(BaseModel):
    type: str
    writeOnly: bool


class Properties38(BaseModel):
    meta: Meta52
    data: Data42
    links: Links14
    forwardedData: ForwardedData9
    raw: Raw10
    paging: Paging3
    tracingId: TracingId10


class ApiListResponseOfConsent(BaseModel):
    type: str
    properties: Properties38


class Meta53(BaseModel):
    _ref: str = Field(..., alias='$ref')


class Data43(BaseModel):
    _ref: str = Field(..., alias='$ref')


class AdditionalProperties10(BaseModel):
    type: str


class Links15(BaseModel):
    type: str
    additionalProperties: AdditionalProperties10


class Items56(BaseModel):
    _ref: str = Field(..., alias='$ref')


class ForwardedData10(BaseModel):
    type: str
    items: Items56


class Items57(BaseModel):
    _ref: str = Field(..., alias='$ref')


class Raw11(BaseModel):
    type: str
    items: Items57


class TracingId11(BaseModel):
    type: str
    writeOnly: bool


class Properties39(BaseModel):
    meta: Meta53
    data: Data43
    links: Links15
    forwardedData: ForwardedData10
    raw: Raw11
    tracingId: TracingId11


class ApiResponseOfConsent(BaseModel):
    type: str
    properties: Properties39


class AuthCode(BaseModel):
    type: str
    description: str
    example: str


class AuthState(BaseModel):
    type: str
    description: str
    example: str


class Properties40(BaseModel):
    authCode: AuthCode
    authState: AuthState


class ConsentAuthCodeRequest(BaseModel):
    required: List[str]
    type: str
    properties: Properties40
    description: str


class Id7(BaseModel):
    type: str
    format: str


class DeleteStatus(BaseModel):
    _ref: str = Field(..., alias='$ref')


class InstitutionId7(BaseModel):
    type: str


class InstitutionConsentId3(BaseModel):
    type: str


class CreationDate(BaseModel):
    type: str
    format: str


class Properties41(BaseModel):
    id: Id7
    deleteStatus: DeleteStatus
    institutionId: InstitutionId7
    institutionConsentId: InstitutionConsentId3
    creationDate: CreationDate


class ConsentDeleteResponse(BaseModel):
    type: str
    properties: Properties41


class Meta54(BaseModel):
    _ref: str = Field(..., alias='$ref')


class Data44(BaseModel):
    _ref: str = Field(..., alias='$ref')


class AdditionalProperties11(BaseModel):
    type: str


class Links16(BaseModel):
    type: str
    additionalProperties: AdditionalProperties11


class Items58(BaseModel):
    _ref: str = Field(..., alias='$ref')


class ForwardedData11(BaseModel):
    type: str
    items: Items58


class Items59(BaseModel):
    _ref: str = Field(..., alias='$ref')


class Raw12(BaseModel):
    type: str
    items: Items59


class TracingId12(BaseModel):
    type: str
    writeOnly: bool


class Properties42(BaseModel):
    meta: Meta54
    data: Data44
    links: Links16
    forwardedData: ForwardedData11
    raw: Raw12
    tracingId: TracingId12


class ApiResponseOfConsentDeleteResponse(BaseModel):
    type: str
    properties: Properties42


class DisplayName(BaseModel):
    type: str


class CountryCode2(BaseModel):
    type: str


class Properties43(BaseModel):
    displayName: DisplayName
    countryCode2: CountryCode2


class Country5(BaseModel):
    type: str
    properties: Properties43
    description: str


class CredentialsType(BaseModel):
    type: str
    description: str
    enum: List[str]


class Type4(BaseModel):
    _ref: str = Field(..., alias='$ref')


class CreditLineAmount(BaseModel):
    _ref: str = Field(..., alias='$ref')


class Properties44(BaseModel):
    type: Type4
    creditLineAmount: CreditLineAmount


class CreditLine(BaseModel):
    type: str
    properties: Properties44


class CreditLineType(BaseModel):
    type: str
    enum: List[str]


class SourceCurrency(BaseModel):
    type: str


class TargetCurrency(BaseModel):
    type: str


class UnitCurrency(BaseModel):
    type: str


class ExchangeRate(BaseModel):
    type: str


class Properties45(BaseModel):
    sourceCurrency: SourceCurrency
    targetCurrency: TargetCurrency
    unitCurrency: UnitCurrency
    exchangeRate: ExchangeRate


class CurrencyExchange(BaseModel):
    type: str
    properties: Properties45


class DeleteStatusEnum(BaseModel):
    type: str
    enum: List[str]


class Id8(BaseModel):
    type: str


class StatusDetails7(BaseModel):
    _ref: str = Field(..., alias='$ref')


class PayeeDetails6(BaseModel):
    _ref: str = Field(..., alias='$ref')


class Reference1(BaseModel):
    type: str


class PreviousPaymentAmount1(BaseModel):
    _ref: str = Field(..., alias='$ref')


class PreviousPaymentDateTime(BaseModel):
    type: str
    format: str


class Properties46(BaseModel):
    id: Id8
    statusDetails: StatusDetails7
    payeeDetails: PayeeDetails6
    reference: Reference1
    previousPaymentAmount: PreviousPaymentAmount1
    previousPaymentDateTime: PreviousPaymentDateTime


class DirectDebitResponse(BaseModel):
    type: str
    properties: Properties46


class Name3(BaseModel):
    type: str
    description: str
    example: str


class Properties47(BaseModel):
    name: Name3


class DirectDebitPayee(BaseModel):
    type: str
    properties: Properties47


class TransactionId(BaseModel):
    type: str
    description: str
    example: str


class TransactionInformation(BaseModel):
    type: str
    description: str
    example: str


class Amount15(BaseModel):
    example: float
    type: str
    description: str


class Institution1(BaseModel):
    type: str
    description: str
    example: str


class BookingDateTime(BaseModel):
    type: str
    format: str
    description: str
    example: str


class Properties48(BaseModel):
    transactionId: TransactionId
    transactionInformation: TransactionInformation
    amount: Amount15
    institution: Institution1
    bookingDateTime: BookingDateTime


class EnrichedTransaction(BaseModel):
    description: str
    properties: Properties48


class Items60(BaseModel):
    _ref: str = Field(..., alias='$ref')


class IncomeStreams(BaseModel):
    type: str
    description: str
    items: Items60


class Items61(BaseModel):
    _ref: str = Field(..., alias='$ref')


class ExpenditureStreams(BaseModel):
    type: str
    description: str
    items: Items61


class Items62(BaseModel):
    _ref: str = Field(..., alias='$ref')


class RecentlyTerminatedIncomeStreams(BaseModel):
    type: str
    description: str
    items: Items62


class Items63(BaseModel):
    _ref: str = Field(..., alias='$ref')


class RecentlyTerminatedExpenditureStreams(BaseModel):
    type: str
    description: str
    items: Items63


class Properties49(BaseModel):
    incomeStreams: IncomeStreams
    expenditureStreams: ExpenditureStreams
    recentlyTerminatedIncomeStreams: RecentlyTerminatedIncomeStreams
    recentlyTerminatedExpenditureStreams: RecentlyTerminatedExpenditureStreams


class EnrichedWrapper(BaseModel):
    description: str
    properties: Properties49
    type: str


class Categorisation1(BaseModel):
    _ref: str = Field(..., alias='$ref')


class TransactionHash1(BaseModel):
    _ref: str = Field(..., alias='$ref')


class CleansedDescription(BaseModel):
    type: str


class Merchant(BaseModel):
    _ref: str = Field(..., alias='$ref')


class Location(BaseModel):
    type: str


class PaymentProcessor(BaseModel):
    type: str


class CorrectedDate(BaseModel):
    type: str
    format: str


class Properties50(BaseModel):
    categorisation: Categorisation1
    transactionHash: TransactionHash1
    cleansedDescription: CleansedDescription
    merchant: Merchant
    location: Location
    paymentProcessor: PaymentProcessor
    correctedDate: CorrectedDate


class Enrichment1(BaseModel):
    type: str
    properties: Properties50


class MerchantName(BaseModel):
    type: str


class ParentGroup(BaseModel):
    type: str


class Properties51(BaseModel):
    merchantName: MerchantName
    parentGroup: ParentGroup


class EnrichmentMerchant(BaseModel):
    type: str
    properties: Properties51


class EnvironmentType(BaseModel):
    type: str
    description: str
    enum: List[str]


class UnitCurrency1(BaseModel):
    type: str
    description: str


class Rate(BaseModel):
    type: str
    description: str


class RateType(BaseModel):
    _ref: str = Field(..., alias='$ref')


class ForeignExchangeContractReference(BaseModel):
    type: str
    description: str


class Properties52(BaseModel):
    unitCurrency: UnitCurrency1
    rate: Rate
    rateType: RateType
    foreignExchangeContractReference: ForeignExchangeContractReference


class ExchangeRateInformation(BaseModel):
    required: List[str]
    type: str
    properties: Properties52
    description: str


class UnitCurrency2(BaseModel):
    type: str
    description: str


class Rate1(BaseModel):
    type: str
    description: str


class RateType1(BaseModel):
    _ref: str = Field(..., alias='$ref')


class ForeignExchangeContractReference1(BaseModel):
    type: str
    description: str


class ExchangeRateExpiryDate(BaseModel):
    type: str
    format: str


class Properties53(BaseModel):
    unitCurrency: UnitCurrency2
    rate: Rate1
    rateType: RateType1
    foreignExchangeContractReference: ForeignExchangeContractReference1
    exchangeRateExpiryDate: ExchangeRateExpiryDate


class ExchangeRateInformationResponse(BaseModel):
    required: List[str]
    type: str
    properties: Properties53


class Feature(BaseModel):
    _ref: str = Field(..., alias='$ref')


class Endpoint(BaseModel):
    type: str


class DocumentationUrl(BaseModel):
    type: str


class Properties54(BaseModel):
    feature: Feature
    endpoint: Endpoint
    documentationUrl: DocumentationUrl


class FeatureDetails(BaseModel):
    type: str
    properties: Properties54


class Meta55(BaseModel):
    _ref: str = Field(..., alias='$ref')


class Items64(BaseModel):
    _ref: str = Field(..., alias='$ref')


class Data45(BaseModel):
    type: str
    items: Items64


class AdditionalProperties12(BaseModel):
    type: str


class Links17(BaseModel):
    type: str
    additionalProperties: AdditionalProperties12


class Items65(BaseModel):
    _ref: str = Field(..., alias='$ref')


class ForwardedData12(BaseModel):
    type: str
    items: Items65


class Items66(BaseModel):
    _ref: str = Field(..., alias='$ref')


class Raw13(BaseModel):
    type: str
    items: Items66


class Paging4(BaseModel):
    _ref: str = Field(..., alias='$ref')


class TracingId13(BaseModel):
    type: str
    writeOnly: bool


class Properties55(BaseModel):
    meta: Meta55
    data: Data45
    links: Links17
    forwardedData: ForwardedData12
    raw: Raw13
    paging: Paging4
    tracingId: TracingId13


class ApiListResponseOfDirectDebitResponse(BaseModel):
    type: str
    properties: Properties55


class Meta56(BaseModel):
    _ref: str = Field(..., alias='$ref')


class Items67(BaseModel):
    _ref: str = Field(..., alias='$ref')


class Data46(BaseModel):
    type: str
    items: Items67


class AdditionalProperties13(BaseModel):
    type: str


class Links18(BaseModel):
    type: str
    additionalProperties: AdditionalProperties13


class Items68(BaseModel):
    _ref: str = Field(..., alias='$ref')


class ForwardedData13(BaseModel):
    type: str
    items: Items68


class Items69(BaseModel):
    _ref: str = Field(..., alias='$ref')


class Raw14(BaseModel):
    type: str
    items: Items69


class Paging5(BaseModel):
    _ref: str = Field(..., alias='$ref')


class TracingId14(BaseModel):
    type: str
    writeOnly: bool


class Properties56(BaseModel):
    meta: Meta56
    data: Data46
    links: Links18
    forwardedData: ForwardedData13
    raw: Raw14
    paging: Paging5
    tracingId: TracingId14


class ApiListResponseOfFeatureDetails(BaseModel):
    type: str
    properties: Properties56


class FeatureEnum(BaseModel):
    type: str
    description: str
    enum: List[str]


class From(BaseModel):
    type: str
    format: str


class Before(BaseModel):
    type: str
    format: str


class Limit(BaseModel):
    type: str
    format: str


class Sort(BaseModel):
    _ref: str = Field(..., alias='$ref')


class Offset(BaseModel):
    type: str
    format: str


class Cursor(BaseModel):
    type: str


class Properties57(BaseModel):
    from_: From = Field(..., alias='from')
    before: Before
    limit: Limit
    sort: Sort
    offset: Offset
    cursor: Cursor


class FilterAndSort(BaseModel):
    type: str
    properties: Properties57


class ApiCall1(BaseModel):
    _ref: str = Field(..., alias='$ref')


class Items70(BaseModel):
    _ref: str = Field(..., alias='$ref')


class Data47(BaseModel):
    type: str
    items: Items70


class NextCursorHash(BaseModel):
    type: str


class NextLink(BaseModel):
    type: str


class AdditionalProperties14(BaseModel):
    _ref: str = Field(..., alias='$ref')


class PagingMap(BaseModel):
    type: str
    additionalProperties: AdditionalProperties14


class TotalCount(BaseModel):
    type: str
    format: str


class Properties58(BaseModel):
    apiCall: ApiCall1
    data: Data47
    nextCursorHash: NextCursorHash
    nextLink: NextLink
    pagingMap: PagingMap
    totalCount: TotalCount


class FilteredClientPayloadListAccount(BaseModel):
    type: str
    properties: Properties58


class ApiCall2(BaseModel):
    _ref: str = Field(..., alias='$ref')


class Items71(BaseModel):
    _ref: str = Field(..., alias='$ref')


class Data48(BaseModel):
    type: str
    items: Items71


class NextCursorHash1(BaseModel):
    type: str


class NextLink1(BaseModel):
    type: str


class AdditionalProperties15(BaseModel):
    _ref: str = Field(..., alias='$ref')


class PagingMap1(BaseModel):
    type: str
    additionalProperties: AdditionalProperties15


class TotalCount1(BaseModel):
    type: str
    format: str


class Properties59(BaseModel):
    apiCall: ApiCall2
    data: Data48
    nextCursorHash: NextCursorHash1
    nextLink: NextLink1
    pagingMap: PagingMap1
    totalCount: TotalCount1


class FilteredClientPayloadListAccountStatement(BaseModel):
    type: str
    properties: Properties59


class ApiCall3(BaseModel):
    _ref: str = Field(..., alias='$ref')


class Items72(BaseModel):
    _ref: str = Field(..., alias='$ref')


class Data49(BaseModel):
    type: str
    items: Items72


class NextCursorHash2(BaseModel):
    type: str


class NextLink2(BaseModel):
    type: str


class AdditionalProperties16(BaseModel):
    _ref: str = Field(..., alias='$ref')


class PagingMap2(BaseModel):
    type: str
    additionalProperties: AdditionalProperties16


class TotalCount2(BaseModel):
    type: str
    format: str


class Properties60(BaseModel):
    apiCall: ApiCall3
    data: Data49
    nextCursorHash: NextCursorHash2
    nextLink: NextLink2
    pagingMap: PagingMap2
    totalCount: TotalCount2


class FilteredClientPayloadListCategory(BaseModel):
    type: str
    properties: Properties60


class ApiCall4(BaseModel):
    _ref: str = Field(..., alias='$ref')


class Items73(BaseModel):
    _ref: str = Field(..., alias='$ref')


class Data50(BaseModel):
    type: str
    items: Items73


class NextCursorHash3(BaseModel):
    type: str


class NextLink3(BaseModel):
    type: str


class AdditionalProperties17(BaseModel):
    _ref: str = Field(..., alias='$ref')


class PagingMap3(BaseModel):
    type: str
    additionalProperties: AdditionalProperties17


class TotalCount3(BaseModel):
    type: str
    format: str


class Properties61(BaseModel):
    apiCall: ApiCall4
    data: Data50
    nextCursorHash: NextCursorHash3
    nextLink: NextLink3
    pagingMap: PagingMap3
    totalCount: TotalCount3


class FilteredClientPayloadListConsent(BaseModel):
    type: str
    properties: Properties61


class ApiCall5(BaseModel):
    _ref: str = Field(..., alias='$ref')


class Items74(BaseModel):
    _ref: str = Field(..., alias='$ref')


class Data51(BaseModel):
    type: str
    items: Items74


class NextCursorHash4(BaseModel):
    type: str


class NextLink4(BaseModel):
    type: str


class AdditionalProperties18(BaseModel):
    _ref: str = Field(..., alias='$ref')


class PagingMap4(BaseModel):
    type: str
    additionalProperties: AdditionalProperties18


class TotalCount4(BaseModel):
    type: str
    format: str


class Properties62(BaseModel):
    apiCall: ApiCall5
    data: Data51
    nextCursorHash: NextCursorHash4
    nextLink: NextLink4
    pagingMap: PagingMap4
    totalCount: TotalCount4


class FilteredClientPayloadListDirectDebitResponse(BaseModel):
    type: str
    properties: Properties62


class ApiCall6(BaseModel):
    _ref: str = Field(..., alias='$ref')


class Items75(BaseModel):
    _ref: str = Field(..., alias='$ref')


class Data52(BaseModel):
    type: str
    items: Items75


class NextCursorHash5(BaseModel):
    type: str


class NextLink5(BaseModel):
    type: str


class AdditionalProperties19(BaseModel):
    _ref: str = Field(..., alias='$ref')


class PagingMap5(BaseModel):
    type: str
    additionalProperties: AdditionalProperties19


class TotalCount5(BaseModel):
    type: str
    format: str


class Properties63(BaseModel):
    apiCall: ApiCall6
    data: Data52
    nextCursorHash: NextCursorHash5
    nextLink: NextLink5
    pagingMap: PagingMap5
    totalCount: TotalCount5


class FilteredClientPayloadListFeatureDetails(BaseModel):
    type: str
    properties: Properties63


class ApiCall7(BaseModel):
    _ref: str = Field(..., alias='$ref')


class Items76(BaseModel):
    _ref: str = Field(..., alias='$ref')


class Data53(BaseModel):
    type: str
    items: Items76


class NextCursorHash6(BaseModel):
    type: str


class NextLink6(BaseModel):
    type: str


class AdditionalProperties20(BaseModel):
    _ref: str = Field(..., alias='$ref')


class PagingMap6(BaseModel):
    type: str
    additionalProperties: AdditionalProperties20


class TotalCount6(BaseModel):
    type: str
    format: str


class Properties64(BaseModel):
    apiCall: ApiCall7
    data: Data53
    nextCursorHash: NextCursorHash6
    nextLink: NextLink6
    pagingMap: PagingMap6
    totalCount: TotalCount6


class FilteredClientPayloadListInstitution(BaseModel):
    type: str
    properties: Properties64


class ApiCall8(BaseModel):
    _ref: str = Field(..., alias='$ref')


class Items77(BaseModel):
    _ref: str = Field(..., alias='$ref')


class Data54(BaseModel):
    type: str
    items: Items77


class NextCursorHash7(BaseModel):
    type: str


class NextLink7(BaseModel):
    type: str


class AdditionalProperties21(BaseModel):
    _ref: str = Field(..., alias='$ref')


class PagingMap7(BaseModel):
    type: str
    additionalProperties: AdditionalProperties21


class TotalCount7(BaseModel):
    type: str
    format: str


class Properties65(BaseModel):
    apiCall: ApiCall8
    data: Data54
    nextCursorHash: NextCursorHash7
    nextLink: NextLink7
    pagingMap: PagingMap7
    totalCount: TotalCount7


class FilteredClientPayloadListPaymentResponse(BaseModel):
    type: str
    properties: Properties65


class ApiCall9(BaseModel):
    _ref: str = Field(..., alias='$ref')


class Items78(BaseModel):
    _ref: str = Field(..., alias='$ref')


class Data55(BaseModel):
    type: str
    items: Items78


class NextCursorHash8(BaseModel):
    type: str


class NextLink8(BaseModel):
    type: str


class AdditionalProperties22(BaseModel):
    _ref: str = Field(..., alias='$ref')


class PagingMap8(BaseModel):
    type: str
    additionalProperties: AdditionalProperties22


class TotalCount8(BaseModel):
    type: str
    format: str


class Properties66(BaseModel):
    apiCall: ApiCall9
    data: Data55
    nextCursorHash: NextCursorHash8
    nextLink: NextLink8
    pagingMap: PagingMap8
    totalCount: TotalCount8


class FilteredClientPayloadListTransaction(BaseModel):
    type: str
    properties: Properties66


class Status4(BaseModel):
    example: str
    type: str
    description: str


class Items79(BaseModel):
    _ref: str = Field(..., alias='$ref')


class ProfileConsents(BaseModel):
    type: str
    description: str
    items: Items79


class Enrichment2(BaseModel):
    _ref: str = Field(..., alias='$ref')


class Properties67(BaseModel):
    status: Status4
    profileConsents: ProfileConsents
    enrichment: Enrichment2


class FinancialProfile(BaseModel):
    description: str
    properties: Properties67
    type: str


class FrequencyEnumExtended(BaseModel):
    type: str
    description: str
    enum: List[str]


class Type5(BaseModel):
    _ref: str = Field(..., alias='$ref')


class IntervalWeek(BaseModel):
    type: str
    description: str
    format: str
    example: int


class IntervalMonth(BaseModel):
    type: str
    description: str
    format: str
    example: int


class ExecutionDay(BaseModel):
    type: str
    description: str
    format: str
    example: int


class Properties68(BaseModel):
    type: Type5
    intervalWeek: IntervalWeek
    intervalMonth: IntervalMonth
    executionDay: ExecutionDay


class FrequencyRequest(BaseModel):
    required: List[str]
    type: str
    properties: Properties68
    description: str


class FrequencyType(BaseModel):
    _ref: str = Field(..., alias='$ref')


class IntervalWeek1(BaseModel):
    type: str
    format: str


class IntervalMonth1(BaseModel):
    type: str
    format: str


class ExecutionDay1(BaseModel):
    type: str
    format: str


class Properties69(BaseModel):
    frequencyType: FrequencyType
    intervalWeek: IntervalWeek1
    intervalMonth: IntervalMonth1
    executionDay: ExecutionDay1


class FrequencyResponse(BaseModel):
    type: str
    properties: Properties69


class Id9(BaseModel):
    type: str


class FirstName(BaseModel):
    type: str


class LastName(BaseModel):
    type: str


class FullName(BaseModel):
    type: str


class Gender(BaseModel):
    type: str


class Birthdate(BaseModel):
    type: str


class Email(BaseModel):
    type: str


class Phone(BaseModel):
    type: str


class Items80(BaseModel):
    _ref: str = Field(..., alias='$ref')


class Addresses(BaseModel):
    type: str
    items: Items80


class Properties70(BaseModel):
    id: Id9
    firstName: FirstName
    lastName: LastName
    fullName: FullName
    gender: Gender
    birthdate: Birthdate
    email: Email
    phone: Phone
    addresses: Addresses


class Identity(BaseModel):
    type: str
    properties: Properties70


class Items81(BaseModel):
    type: str


class AddressLines1(BaseModel):
    type: str
    items: Items81


class City(BaseModel):
    type: str


class PostalCode(BaseModel):
    type: str


class Country6(BaseModel):
    type: str


class StreetName1(BaseModel):
    type: str


class BuildingNumber1(BaseModel):
    type: str


class Type6(BaseModel):
    _ref: str = Field(..., alias='$ref')


class County1(BaseModel):
    type: str


class Properties71(BaseModel):
    addressLines: AddressLines1
    city: City
    postalCode: PostalCode
    country: Country6
    streetName: StreetName1
    buildingNumber: BuildingNumber1
    type: Type6
    county: County1


class IdentityAddress(BaseModel):
    type: str
    properties: Properties71


class Meta57(BaseModel):
    _ref: str = Field(..., alias='$ref')


class Data56(BaseModel):
    _ref: str = Field(..., alias='$ref')


class AdditionalProperties23(BaseModel):
    type: str


class Links19(BaseModel):
    type: str
    additionalProperties: AdditionalProperties23


class Items82(BaseModel):
    _ref: str = Field(..., alias='$ref')


class ForwardedData14(BaseModel):
    type: str
    items: Items82


class Items83(BaseModel):
    _ref: str = Field(..., alias='$ref')


class Raw15(BaseModel):
    type: str
    items: Items83


class TracingId15(BaseModel):
    type: str
    writeOnly: bool


class Properties72(BaseModel):
    meta: Meta57
    data: Data56
    links: Links19
    forwardedData: ForwardedData14
    raw: Raw15
    tracingId: TracingId15


class ApiResponseOfIdentity(BaseModel):
    type: str
    properties: Properties72


class Id10(BaseModel):
    type: str
    description: str


class Name4(BaseModel):
    type: str
    description: str


class FullName1(BaseModel):
    type: str
    description: str


class Items84(BaseModel):
    _ref: str = Field(..., alias='$ref')


class Countries(BaseModel):
    uniqueItems: bool
    type: str
    description: str
    items: Items84


class EnvironmentType1(BaseModel):
    _ref: str = Field(..., alias='$ref')


class CredentialsType1(BaseModel):
    _ref: str = Field(..., alias='$ref')


class Items85(BaseModel):
    _ref: str = Field(..., alias='$ref')


class Media1(BaseModel):
    uniqueItems: bool
    type: str
    description: str
    items: Items85


class Items86(BaseModel):
    _ref: str = Field(..., alias='$ref')


class Features(BaseModel):
    uniqueItems: bool
    type: str
    items: Items86


class AdditionalProperties24(BaseModel):
    _ref: str = Field(..., alias='$ref')


class Monitoring1(BaseModel):
    type: str
    additionalProperties: AdditionalProperties24


class Properties73(BaseModel):
    id: Id10
    name: Name4
    fullName: FullName1
    countries: Countries
    environmentType: EnvironmentType1
    credentialsType: CredentialsType1
    media: Media1
    features: Features
    monitoring: Monitoring1


class Institution2(BaseModel):
    type: str
    properties: Properties73


class Meta58(BaseModel):
    _ref: str = Field(..., alias='$ref')


class Items87(BaseModel):
    _ref: str = Field(..., alias='$ref')


class Data57(BaseModel):
    type: str
    items: Items87


class AdditionalProperties25(BaseModel):
    type: str


class Links20(BaseModel):
    type: str
    additionalProperties: AdditionalProperties25


class Items88(BaseModel):
    _ref: str = Field(..., alias='$ref')


class ForwardedData15(BaseModel):
    type: str
    items: Items88


class Items89(BaseModel):
    _ref: str = Field(..., alias='$ref')


class Raw16(BaseModel):
    type: str
    items: Items89


class Paging6(BaseModel):
    _ref: str = Field(..., alias='$ref')


class TracingId16(BaseModel):
    type: str
    writeOnly: bool


class Properties74(BaseModel):
    meta: Meta58
    data: Data57
    links: Links20
    forwardedData: ForwardedData15
    raw: Raw16
    paging: Paging6
    tracingId: TracingId16


class ApiListResponseOfInstitution(BaseModel):
    type: str
    properties: Properties74


class InstitutionId8(BaseModel):
    type: str


class Properties75(BaseModel):
    institutionId: InstitutionId8


class InstitutionConsent2(BaseModel):
    type: str
    properties: Properties75


class ErrorMessage(BaseModel):
    type: str


class HttpStatusCode(BaseModel):
    type: str
    format: str


class Properties76(BaseModel):
    errorMessage: ErrorMessage
    httpStatusCode: HttpStatusCode


class InstitutionError2(BaseModel):
    type: str
    properties: Properties76


class CurrencyOfTransfer(BaseModel):
    type: str
    description: str


class ExchangeRateInformation1(BaseModel):
    _ref: str = Field(..., alias='$ref')


class Purpose(BaseModel):
    type: str
    description: str


class Priority(BaseModel):
    _ref: str = Field(..., alias='$ref')


class ChargeBearer(BaseModel):
    _ref: str = Field(..., alias='$ref')


class Properties77(BaseModel):
    currencyOfTransfer: CurrencyOfTransfer
    exchangeRateInformation: ExchangeRateInformation1
    purpose: Purpose
    priority: Priority
    chargeBearer: ChargeBearer


class InternationalPaymentRequest(BaseModel):
    required: List[str]
    type: str
    properties: Properties77
    description: str


class DomainCode1(BaseModel):
    _ref: str = Field(..., alias='$ref')


class FamilyCode1(BaseModel):
    _ref: str = Field(..., alias='$ref')


class SubFamilyCode1(BaseModel):
    _ref: str = Field(..., alias='$ref')


class Properties78(BaseModel):
    domainCode: DomainCode1
    familyCode: FamilyCode1
    subFamilyCode: SubFamilyCode1


class IsoBankTransactionCode1(BaseModel):
    type: str
    properties: Properties78


class Code1(BaseModel):
    default: str
    type: str


class Name5(BaseModel):
    default: str
    type: str


class Properties79(BaseModel):
    code: Code1
    name: Name5


class IsoCodeDetails(BaseModel):
    type: str
    properties: Properties79


class Source2(BaseModel):
    type: str


class Type7(BaseModel):
    type: str


class Properties80(BaseModel):
    source: Source2
    type: Type7


class Media2(BaseModel):
    type: str
    properties: Properties80
    description: str


class MerchantName1(BaseModel):
    type: str


class MerchantCategoryCode(BaseModel):
    type: str


class Properties81(BaseModel):
    merchantName: MerchantName1
    merchantCategoryCode: MerchantCategoryCode


class Merchant1(BaseModel):
    type: str
    properties: Properties81


class LastTested(BaseModel):
    type: str
    format: str


class ResourceEndpoint(BaseModel):
    type: str


class Span(BaseModel):
    type: str
    format: str


class Status5(BaseModel):
    _ref: str = Field(..., alias='$ref')


class Properties82(BaseModel):
    lastTested: LastTested
    resourceEndpoint: ResourceEndpoint
    span: Span
    status: Status5


class MonitoringEndpointStatus(BaseModel):
    type: str
    properties: Properties82


class LastTested1(BaseModel):
    type: str
    format: str


class Span1(BaseModel):
    type: str
    format: str


class Status6(BaseModel):
    _ref: str = Field(..., alias='$ref')


class Properties83(BaseModel):
    lastTested: LastTested1
    span: Span1
    status: Status6


class MonitoringFeatureStatus(BaseModel):
    type: str
    properties: Properties83


class Status7(BaseModel):
    type: str


class NumberOfAuthorisationRequired(BaseModel):
    type: str
    format: str


class NumberOfAuthorisationReceived(BaseModel):
    type: str
    format: str


class LastUpdatedDateTime(BaseModel):
    type: str
    format: str


class ExpirationDateTime(BaseModel):
    type: str
    format: str


class Properties84(BaseModel):
    status: Status7
    numberOfAuthorisationRequired: NumberOfAuthorisationRequired
    numberOfAuthorisationReceived: NumberOfAuthorisationReceived
    lastUpdatedDateTime: LastUpdatedDateTime
    expirationDateTime: ExpirationDateTime


class MultiAuthorisation(BaseModel):
    type: str
    properties: Properties84


class ApplicationUserId8(BaseModel):
    type: str
    description: str
    example: str


class ReferenceId4(BaseModel):
    type: str
    description: str


class Properties85(BaseModel):
    applicationUserId: ApplicationUserId8
    referenceId: ReferenceId4


class NewApplicationUser(BaseModel):
    type: str
    properties: Properties85


class From1(BaseModel):
    type: str
    format: str


class Before1(BaseModel):
    type: str
    format: str


class Limit1(BaseModel):
    type: str
    format: str


class Cursor1(BaseModel):
    type: str


class Properties86(BaseModel):
    from_: From1 = Field(..., alias='from')
    before: Before1
    limit: Limit1
    cursor: Cursor1


class Next(BaseModel):
    type: str
    properties: Properties86


class OneTimeToken4(BaseModel):
    type: str
    description: str
    example: str


class Properties87(BaseModel):
    oneTimeToken: OneTimeToken4


class OneTimeTokenRequest(BaseModel):
    required: List[str]
    type: str
    properties: Properties87
    description: str


class TotalCount9(BaseModel):
    type: str
    format: str


class Self6(BaseModel):
    _ref: str = Field(..., alias='$ref')


class Next1(BaseModel):
    _ref: str = Field(..., alias='$ref')


class Properties88(BaseModel):
    totalCount: TotalCount9
    self: Self6
    next: Next1


class Pagination6(BaseModel):
    type: str
    properties: Properties88


class Name6(BaseModel):
    type: str
    description: str
    example: str


class ExampleItem1(BaseModel):
    identification: str
    type: str


class Items90(BaseModel):
    _ref: str = Field(..., alias='$ref')


class AccountIdentifications2(BaseModel):
    uniqueItems: bool
    type: str
    description: str
    example: List[ExampleItem1]
    items: Items90


class Address14(BaseModel):
    _ref: str = Field(..., alias='$ref')


class MerchantId(BaseModel):
    type: str
    description: str
    example: str


class MerchantCategoryCode1(BaseModel):
    type: str
    description: str
    example: str


class Properties89(BaseModel):
    name: Name6
    accountIdentifications: AccountIdentifications2
    address: Address14
    merchantId: MerchantId
    merchantCategoryCode: MerchantCategoryCode1


class Payee16(BaseModel):
    type: str
    required: List[str]
    properties: Properties89
    description: str


class Name7(BaseModel):
    type: str
    description: str
    example: str


class ExampleItem2(BaseModel):
    identification: str
    type: str


class Items91(BaseModel):
    _ref: str = Field(..., alias='$ref')


class AccountIdentifications3(BaseModel):
    uniqueItems: bool
    type: str
    description: str
    example: List[ExampleItem2]
    items: Items91


class Country7(BaseModel):
    type: str
    description: str
    example: str


class Properties90(BaseModel):
    name: Name7
    accountIdentifications: AccountIdentifications3
    country: Country7


class PayeeDetails7(BaseModel):
    type: str
    required: List[str]
    properties: Properties90
    description: str


class Name8(BaseModel):
    type: str
    description: str
    example: str


class Items92(BaseModel):
    _ref: str = Field(..., alias='$ref')


class AccountIdentifications4(BaseModel):
    uniqueItems: bool
    type: str
    description: str
    items: Items92


class Address15(BaseModel):
    _ref: str = Field(..., alias='$ref')


class Properties91(BaseModel):
    name: Name8
    accountIdentifications: AccountIdentifications4
    address: Address15


class Payer11(BaseModel):
    required: List[str]
    type: str
    properties: Properties91
    description: str


class Items93(BaseModel):
    _ref: str = Field(..., alias='$ref')


class AccountIdentifications5(BaseModel):
    uniqueItems: bool
    type: str
    description: str
    items: Items93


class Properties92(BaseModel):
    accountIdentifications: AccountIdentifications5


class PayerDetails(BaseModel):
    required: List[str]
    type: str
    properties: Properties92
    description: str


class UserUuid7(BaseModel):
    type: str
    format: str


class ApplicationUserId9(BaseModel):
    type: str
    description: str
    example: str


class Items94(BaseModel):
    type: str


class ForwardParameters3(BaseModel):
    type: str
    description: str
    items: Items94


class InstitutionId9(BaseModel):
    type: str
    description: str
    example: str


class Callback4(BaseModel):
    type: str
    description: str
    example: str


class Redirect4(BaseModel):
    _ref: str = Field(..., alias='$ref')


class OneTimeToken5(BaseModel):
    type: str
    description: str
    example: bool


class PaymentRequest11(BaseModel):
    _ref: str = Field(..., alias='$ref')


class Properties93(BaseModel):
    userUuid: UserUuid7
    applicationUserId: ApplicationUserId9
    forwardParameters: ForwardParameters3
    institutionId: InstitutionId9
    callback: Callback4
    redirect: Redirect4
    oneTimeToken: OneTimeToken5
    paymentRequest: PaymentRequest11


class PaymentAuthorisationRequest(BaseModel):
    required: List[str]
    type: str
    properties: Properties93
    description: str


class Id11(BaseModel):
    type: str
    format: str


class UserUuid8(BaseModel):
    type: str
    format: str


class ApplicationUserId10(BaseModel):
    type: str


class ReferenceId5(BaseModel):
    type: str


class InstitutionId10(BaseModel):
    type: str


class Status8(BaseModel):
    type: str
    _ref: str = Field(..., alias='$ref')


class CreatedAt3(BaseModel):
    type: str
    format: str


class TransactionFrom4(BaseModel):
    type: str
    format: str


class TransactionTo4(BaseModel):
    type: str
    format: str


class ExpiresAt4(BaseModel):
    type: str
    format: str


class TimeToExpireInMillis3(BaseModel):
    type: str
    format: str
    deprecated: bool


class TimeToExpire3(BaseModel):
    type: str
    format: str


class Items95(BaseModel):
    _ref: str = Field(..., alias='$ref')


class FeatureScope4(BaseModel):
    uniqueItems: bool
    type: str
    items: Items95


class ConsentToken3(BaseModel):
    type: str


class State3(BaseModel):
    type: str


class AuthorizedAt3(BaseModel):
    type: str
    format: str


class InstitutionConsentId4(BaseModel):
    type: str


class Items96(BaseModel):
    _ref: str = Field(..., alias='$ref')


class Charges(BaseModel):
    type: str
    items: Items96


class ExchangeRateInformation2(BaseModel):
    _ref: str = Field(..., alias='$ref')


class AuthorisationUrl2(BaseModel):
    type: str


class QrCodeUrl2(BaseModel):
    type: str


class Explanation(BaseModel):
    type: str


class Properties94(BaseModel):
    id: Id11
    userUuid: UserUuid8
    applicationUserId: ApplicationUserId10
    referenceId: ReferenceId5
    institutionId: InstitutionId10
    status: Status8
    createdAt: CreatedAt3
    transactionFrom: TransactionFrom4
    transactionTo: TransactionTo4
    expiresAt: ExpiresAt4
    timeToExpireInMillis: TimeToExpireInMillis3
    timeToExpire: TimeToExpire3
    featureScope: FeatureScope4
    consentToken: ConsentToken3
    state: State3
    authorizedAt: AuthorizedAt3
    institutionConsentId: InstitutionConsentId4
    charges: Charges
    exchangeRateInformation: ExchangeRateInformation2
    authorisationUrl: AuthorisationUrl2
    qrCodeUrl: QrCodeUrl2
    explanation: Explanation


class PaymentAuthorisationRequestResponse(BaseModel):
    type: str
    properties: Properties94


class Meta59(BaseModel):
    _ref: str = Field(..., alias='$ref')


class Data58(BaseModel):
    _ref: str = Field(..., alias='$ref')


class AdditionalProperties26(BaseModel):
    type: str


class Links21(BaseModel):
    type: str
    additionalProperties: AdditionalProperties26


class Items97(BaseModel):
    _ref: str = Field(..., alias='$ref')


class ForwardedData16(BaseModel):
    type: str
    items: Items97


class Items98(BaseModel):
    _ref: str = Field(..., alias='$ref')


class Raw17(BaseModel):
    type: str
    items: Items98


class TracingId17(BaseModel):
    type: str
    writeOnly: bool


class Properties95(BaseModel):
    meta: Meta59
    data: Data58
    links: Links21
    forwardedData: ForwardedData16
    raw: Raw17
    tracingId: TracingId17


class ApiResponseOfPaymentAuthorisationRequestResponse(BaseModel):
    type: str
    properties: Properties95


class PaymentContextType(BaseModel):
    type: str
    default: str
    description: str
    enum: List[str]


class UserUuid9(BaseModel):
    type: str
    format: str


class ApplicationUserId11(BaseModel):
    type: str
    description: str
    example: str


class InstitutionId11(BaseModel):
    type: str
    description: str
    example: str


class Callback5(BaseModel):
    type: str
    description: str
    example: str


class Redirect5(BaseModel):
    _ref: str = Field(..., alias='$ref')


class OneTimeToken6(BaseModel):
    type: str
    description: str
    example: bool


class PaymentRequest12(BaseModel):
    _ref: str = Field(..., alias='$ref')


class UserCredentials5(BaseModel):
    _ref: str = Field(..., alias='$ref')


class SelectedScaMethod9(BaseModel):
    _ref: str = Field(..., alias='$ref')


class ScaCode2(BaseModel):
    type: str
    description: str
    example: str


class Properties96(BaseModel):
    userUuid: UserUuid9
    applicationUserId: ApplicationUserId11
    institutionId: InstitutionId11
    callback: Callback5
    redirect: Redirect5
    oneTimeToken: OneTimeToken6
    paymentRequest: PaymentRequest12
    userCredentials: UserCredentials5
    selectedScaMethod: SelectedScaMethod9
    scaCode: ScaCode2


class PaymentEmbeddedAuthorisationRequest(BaseModel):
    required: List[str]
    type: str
    properties: Properties96
    description: str


class Id12(BaseModel):
    type: str
    format: str


class UserUuid10(BaseModel):
    type: str
    format: str


class ApplicationUserId12(BaseModel):
    type: str


class ReferenceId6(BaseModel):
    type: str


class InstitutionId12(BaseModel):
    type: str


class Status9(BaseModel):
    type: str
    _ref: str = Field(..., alias='$ref')


class CreatedAt4(BaseModel):
    type: str
    format: str


class TransactionFrom5(BaseModel):
    type: str
    format: str


class TransactionTo5(BaseModel):
    type: str
    format: str


class ExpiresAt5(BaseModel):
    type: str
    format: str


class TimeToExpireInMillis4(BaseModel):
    type: str
    format: str
    deprecated: bool


class TimeToExpire4(BaseModel):
    type: str
    format: str


class Items99(BaseModel):
    _ref: str = Field(..., alias='$ref')


class FeatureScope5(BaseModel):
    uniqueItems: bool
    type: str
    items: Items99


class ConsentToken4(BaseModel):
    type: str


class State4(BaseModel):
    type: str


class AuthorizedAt4(BaseModel):
    type: str
    format: str


class InstitutionConsentId5(BaseModel):
    type: str


class Items100(BaseModel):
    _ref: str = Field(..., alias='$ref')


class Charges1(BaseModel):
    type: str
    items: Items100


class ExchangeRateInformation3(BaseModel):
    _ref: str = Field(..., alias='$ref')


class AuthorisationUrl3(BaseModel):
    type: str


class QrCodeUrl3(BaseModel):
    type: str


class Explanation1(BaseModel):
    type: str


class Items101(BaseModel):
    _ref: str = Field(..., alias='$ref')


class ScaMethods1(BaseModel):
    type: str
    items: Items101


class SelectedScaMethod10(BaseModel):
    _ref: str = Field(..., alias='$ref')


class Properties97(BaseModel):
    id: Id12
    userUuid: UserUuid10
    applicationUserId: ApplicationUserId12
    referenceId: ReferenceId6
    institutionId: InstitutionId12
    status: Status9
    createdAt: CreatedAt4
    transactionFrom: TransactionFrom5
    transactionTo: TransactionTo5
    expiresAt: ExpiresAt5
    timeToExpireInMillis: TimeToExpireInMillis4
    timeToExpire: TimeToExpire4
    featureScope: FeatureScope5
    consentToken: ConsentToken4
    state: State4
    authorizedAt: AuthorizedAt4
    institutionConsentId: InstitutionConsentId5
    charges: Charges1
    exchangeRateInformation: ExchangeRateInformation3
    authorisationUrl: AuthorisationUrl3
    qrCodeUrl: QrCodeUrl3
    explanation: Explanation1
    scaMethods: ScaMethods1
    selectedScaMethod: SelectedScaMethod10


class PaymentEmbeddedAuthorisationRequestResponse(BaseModel):
    type: str
    properties: Properties97


class Meta60(BaseModel):
    _ref: str = Field(..., alias='$ref')


class Data59(BaseModel):
    _ref: str = Field(..., alias='$ref')


class AdditionalProperties27(BaseModel):
    type: str


class Links22(BaseModel):
    type: str
    additionalProperties: AdditionalProperties27


class Items102(BaseModel):
    _ref: str = Field(..., alias='$ref')


class ForwardedData17(BaseModel):
    type: str
    items: Items102


class Items103(BaseModel):
    _ref: str = Field(..., alias='$ref')


class Raw18(BaseModel):
    type: str
    items: Items103


class TracingId18(BaseModel):
    type: str
    writeOnly: bool


class Properties98(BaseModel):
    meta: Meta60
    data: Data59
    links: Links22
    forwardedData: ForwardedData17
    raw: Raw18
    tracingId: TracingId18


class ApiResponseOfPaymentEmbeddedAuthorisationRequestResponse(BaseModel):
    type: str
    properties: Properties98


class Code2(BaseModel):
    _ref: str = Field(..., alias='$ref')


class Name9(BaseModel):
    type: str
    description: str
    example: str


class Properties99(BaseModel):
    code: Code2
    name: Name9


class PaymentIsoStatus(BaseModel):
    type: str
    properties: Properties99


class PaymentIsoStatusCodeEnum(BaseModel):
    type: str
    description: str
    example: str
    enum: List[str]


class UserUuid11(BaseModel):
    type: str
    format: str


class ApplicationUserId13(BaseModel):
    type: str
    description: str
    example: str


class Items104(BaseModel):
    type: str


class ForwardParameters4(BaseModel):
    type: str
    items: Items104


class InstitutionId13(BaseModel):
    type: str
    description: str
    example: str


class Callback6(BaseModel):
    type: str
    description: str
    example: str


class Redirect6(BaseModel):
    _ref: str = Field(..., alias='$ref')


class OneTimeToken7(BaseModel):
    type: str
    description: str
    example: bool


class Scope(BaseModel):
    type: str
    description: str
    example: str


class Payee17(BaseModel):
    _ref: str = Field(..., alias='$ref')


class Payer12(BaseModel):
    _ref: str = Field(..., alias='$ref')


class Amount16(BaseModel):
    _ref: str = Field(..., alias='$ref')


class Reference2(BaseModel):
    type: str
    description: str
    example: str


class Properties100(BaseModel):
    userUuid: UserUuid11
    applicationUserId: ApplicationUserId13
    forwardParameters: ForwardParameters4
    institutionId: InstitutionId13
    callback: Callback6
    redirect: Redirect6
    oneTimeToken: OneTimeToken7
    scope: Scope
    payee: Payee17
    payer: Payer12
    amount: Amount16
    reference: Reference2


class PaymentPreAuthorisationRequest(BaseModel):
    required: List[str]
    type: str
    properties: Properties100
    description: str


class PaymentIdempotencyId(BaseModel):
    type: str
    description: str
    example: str


class Payer13(BaseModel):
    _ref: str = Field(..., alias='$ref')


class Reference3(BaseModel):
    type: str
    description: str
    example: str


class ContextType(BaseModel):
    _ref: str = Field(..., alias='$ref')


class Type8(BaseModel):
    _ref: str = Field(..., alias='$ref')


class Payee18(BaseModel):
    _ref: str = Field(..., alias='$ref')


class PeriodicPayment(BaseModel):
    _ref: str = Field(..., alias='$ref')


class InternationalPayment(BaseModel):
    _ref: str = Field(..., alias='$ref')


class Amount17(BaseModel):
    _ref: str = Field(..., alias='$ref')


class PaymentDateTime(BaseModel):
    type: str
    description: str
    format: str
    example: str


class ReadRefundAccount(BaseModel):
    type: str
    description: str
    example: bool


class Properties101(BaseModel):
    paymentIdempotencyId: PaymentIdempotencyId
    payer: Payer13
    reference: Reference3
    contextType: ContextType
    type: Type8
    payee: Payee18
    periodicPayment: PeriodicPayment
    internationalPayment: InternationalPayment
    amount: Amount17
    paymentDateTime: PaymentDateTime
    readRefundAccount: ReadRefundAccount


class PaymentRequest13(BaseModel):
    required: List[str]
    type: str
    properties: Properties101
    description: str


class Id13(BaseModel):
    type: str


class InstitutionConsentId6(BaseModel):
    type: str


class PaymentIdempotencyId1(BaseModel):
    type: str


class PaymentLifecycleId(BaseModel):
    type: str


class Status10(BaseModel):
    _ref: str = Field(..., alias='$ref')


class StatusDetails8(BaseModel):
    _ref: str = Field(..., alias='$ref')


class Payer14(BaseModel):
    _ref: str = Field(..., alias='$ref')


class PayeeDetails8(BaseModel):
    _ref: str = Field(..., alias='$ref')


class Reference4(BaseModel):
    type: str


class Amount18(BaseModel):
    type: str


class Currency2(BaseModel):
    type: str


class AmountDetails5(BaseModel):
    _ref: str = Field(..., alias='$ref')


class CreatedAt5(BaseModel):
    type: str
    format: str


class FirstPaymentAmount1(BaseModel):
    _ref: str = Field(..., alias='$ref')


class FirstPaymentDateTime(BaseModel):
    type: str
    format: str


class NextPaymentAmount1(BaseModel):
    _ref: str = Field(..., alias='$ref')


class NextPaymentDateTime(BaseModel):
    type: str
    format: str


class FinalPaymentAmount1(BaseModel):
    _ref: str = Field(..., alias='$ref')


class FinalPaymentDateTime(BaseModel):
    type: str
    format: str


class NumberOfPayments(BaseModel):
    type: str
    format: str


class PreviousPaymentAmount2(BaseModel):
    _ref: str = Field(..., alias='$ref')


class PreviousPaymentDateTime1(BaseModel):
    type: str
    format: str


class Items105(BaseModel):
    _ref: str = Field(..., alias='$ref')


class ChargeDetails(BaseModel):
    type: str
    items: Items105


class ScheduledPaymentType(BaseModel):
    type: str


class ScheduledPaymentDateTime(BaseModel):
    type: str
    format: str


class Frequency1(BaseModel):
    _ref: str = Field(..., alias='$ref')


class CurrencyOfTransfer1(BaseModel):
    type: str


class Purpose1(BaseModel):
    type: str


class Priority1(BaseModel):
    _ref: str = Field(..., alias='$ref')


class ExchangeRate1(BaseModel):
    _ref: str = Field(..., alias='$ref')


class RefundAccount(BaseModel):
    _ref: str = Field(..., alias='$ref')


class BulkAmountSum(BaseModel):
    type: str


class Properties102(BaseModel):
    id: Id13
    institutionConsentId: InstitutionConsentId6
    paymentIdempotencyId: PaymentIdempotencyId1
    paymentLifecycleId: PaymentLifecycleId
    status: Status10
    statusDetails: StatusDetails8
    payer: Payer14
    payeeDetails: PayeeDetails8
    reference: Reference4
    amount: Amount18
    currency: Currency2
    amountDetails: AmountDetails5
    createdAt: CreatedAt5
    firstPaymentAmount: FirstPaymentAmount1
    firstPaymentDateTime: FirstPaymentDateTime
    nextPaymentAmount: NextPaymentAmount1
    nextPaymentDateTime: NextPaymentDateTime
    finalPaymentAmount: FinalPaymentAmount1
    finalPaymentDateTime: FinalPaymentDateTime
    numberOfPayments: NumberOfPayments
    previousPaymentAmount: PreviousPaymentAmount2
    previousPaymentDateTime: PreviousPaymentDateTime1
    chargeDetails: ChargeDetails
    scheduledPaymentType: ScheduledPaymentType
    scheduledPaymentDateTime: ScheduledPaymentDateTime
    frequency: Frequency1
    currencyOfTransfer: CurrencyOfTransfer1
    purpose: Purpose1
    priority: Priority1
    exchangeRate: ExchangeRate1
    refundAccount: RefundAccount
    bulkAmountSum: BulkAmountSum


class PaymentResponse(BaseModel):
    type: str
    properties: Properties102


class Meta61(BaseModel):
    _ref: str = Field(..., alias='$ref')


class Items106(BaseModel):
    _ref: str = Field(..., alias='$ref')


class Data60(BaseModel):
    type: str
    items: Items106


class AdditionalProperties28(BaseModel):
    type: str


class Links23(BaseModel):
    type: str
    additionalProperties: AdditionalProperties28


class Items107(BaseModel):
    _ref: str = Field(..., alias='$ref')


class ForwardedData18(BaseModel):
    type: str
    items: Items107


class Items108(BaseModel):
    _ref: str = Field(..., alias='$ref')


class Raw19(BaseModel):
    type: str
    items: Items108


class Paging7(BaseModel):
    _ref: str = Field(..., alias='$ref')


class TracingId19(BaseModel):
    type: str
    writeOnly: bool


class Properties103(BaseModel):
    meta: Meta61
    data: Data60
    links: Links23
    forwardedData: ForwardedData18
    raw: Raw19
    paging: Paging7
    tracingId: TracingId19


class ApiListResponseOfPaymentResponse(BaseModel):
    type: str
    properties: Properties103


class Meta62(BaseModel):
    _ref: str = Field(..., alias='$ref')


class Data61(BaseModel):
    _ref: str = Field(..., alias='$ref')


class AdditionalProperties29(BaseModel):
    type: str


class Links24(BaseModel):
    type: str
    additionalProperties: AdditionalProperties29


class Items109(BaseModel):
    _ref: str = Field(..., alias='$ref')


class ForwardedData19(BaseModel):
    type: str
    items: Items109


class Items110(BaseModel):
    _ref: str = Field(..., alias='$ref')


class Raw20(BaseModel):
    type: str
    items: Items110


class TracingId20(BaseModel):
    type: str
    writeOnly: bool


class Properties104(BaseModel):
    meta: Meta62
    data: Data61
    links: Links24
    forwardedData: ForwardedData19
    raw: Raw20
    tracingId: TracingId20


class ApiResponseOfPaymentResponse(BaseModel):
    type: str
    properties: Properties104


class Items111(BaseModel):
    _ref: str = Field(..., alias='$ref')


class Payments1(BaseModel):
    type: str
    items: Items111


class Properties105(BaseModel):
    payments: Payments1


class PaymentResponses(BaseModel):
    type: str
    properties: Properties105


class Meta63(BaseModel):
    _ref: str = Field(..., alias='$ref')


class Data62(BaseModel):
    _ref: str = Field(..., alias='$ref')


class AdditionalProperties30(BaseModel):
    type: str


class Links25(BaseModel):
    type: str
    additionalProperties: AdditionalProperties30


class Items112(BaseModel):
    _ref: str = Field(..., alias='$ref')


class ForwardedData20(BaseModel):
    type: str
    items: Items112


class Items113(BaseModel):
    _ref: str = Field(..., alias='$ref')


class Raw21(BaseModel):
    type: str
    items: Items113


class TracingId21(BaseModel):
    type: str
    writeOnly: bool


class Properties106(BaseModel):
    meta: Meta63
    data: Data62
    links: Links25
    forwardedData: ForwardedData20
    raw: Raw21
    tracingId: TracingId21


class ApiResponseOfPaymentResponses(BaseModel):
    type: str
    properties: Properties106


class PaymentStatus(BaseModel):
    type: str
    description: str
    enum: List[str]


class Status11(BaseModel):
    _ref: str = Field(..., alias='$ref')


class StatusReason(BaseModel):
    type: str


class StatusReasonDescription(BaseModel):
    type: str


class StatusUpdateDate(BaseModel):
    type: str
    format: str


class MultiAuthorisationStatus(BaseModel):
    _ref: str = Field(..., alias='$ref')


class IsoStatus3(BaseModel):
    _ref: str = Field(..., alias='$ref')


class Properties107(BaseModel):
    status: Status11
    statusReason: StatusReason
    statusReasonDescription: StatusReasonDescription
    statusUpdateDate: StatusUpdateDate
    multiAuthorisationStatus: MultiAuthorisationStatus
    isoStatus: IsoStatus3


class PaymentStatusDetails(BaseModel):
    type: str
    properties: Properties107


class PaymentType(BaseModel):
    type: str
    description: str
    enum: List[str]


class Frequency2(BaseModel):
    _ref: str = Field(..., alias='$ref')


class NumberOfPayments1(BaseModel):
    type: str
    description: str
    format: str
    example: int


class NextPaymentDateTime1(BaseModel):
    type: str
    description: str
    format: str
    example: str


class NextPaymentAmount2(BaseModel):
    description: str
    _ref: str = Field(..., alias='$ref')


class FinalPaymentDateTime1(BaseModel):
    type: str
    description: str
    format: str
    example: str


class FinalPaymentAmount2(BaseModel):
    description: str
    _ref: str = Field(..., alias='$ref')


class Properties108(BaseModel):
    frequency: Frequency2
    numberOfPayments: NumberOfPayments1
    nextPaymentDateTime: NextPaymentDateTime1
    nextPaymentAmount: NextPaymentAmount2
    finalPaymentDateTime: FinalPaymentDateTime1
    finalPaymentAmount: FinalPaymentAmount2


class PeriodicPaymentRequest(BaseModel):
    required: List[str]
    type: str
    properties: Properties108
    description: str


class UserUuid12(BaseModel):
    type: str
    format: str


class ApplicationUserId14(BaseModel):
    type: str
    description: str
    example: str


class Items114(BaseModel):
    type: str


class ForwardParameters5(BaseModel):
    type: str
    items: Items114


class InstitutionId14(BaseModel):
    type: str
    description: str
    example: str


class Callback7(BaseModel):
    type: str
    description: str
    example: str


class Redirect7(BaseModel):
    _ref: str = Field(..., alias='$ref')


class OneTimeToken8(BaseModel):
    type: str
    description: str
    example: bool


class Scope1(BaseModel):
    type: str
    description: str
    example: str


class Properties109(BaseModel):
    userUuid: UserUuid12
    applicationUserId: ApplicationUserId14
    forwardParameters: ForwardParameters5
    institutionId: InstitutionId14
    callback: Callback7
    redirect: Redirect7
    oneTimeToken: OneTimeToken8
    scope: Scope1


class PreAuthorisationRequest(BaseModel):
    required: List[str]
    type: str
    properties: Properties109


class PriorityCodeEnum(BaseModel):
    type: str
    enum: List[str]


class Id14(BaseModel):
    example: str
    type: str
    format: str
    description: str


class Status12(BaseModel):
    example: str
    type: str
    description: str


class UserId(BaseModel):
    example: str
    type: str
    format: str
    description: str


class ReferenceConsentId(BaseModel):
    example: str
    type: str
    format: str
    description: str


class InstitutionId15(BaseModel):
    example: str
    type: str
    description: str


class Properties110(BaseModel):
    id: Id14
    status: Status12
    userId: UserId
    referenceConsentId: ReferenceConsentId
    institutionId: InstitutionId15


class ProfileConsent(BaseModel):
    description: str
    properties: Properties110
    type: str


class Code3(BaseModel):
    type: str


class Issuer(BaseModel):
    type: str


class Properties111(BaseModel):
    code: Code3
    issuer: Issuer


class ProprietaryBankTransactionCode1(BaseModel):
    type: str
    properties: Properties111


class RateTypeEnum(BaseModel):
    type: str
    description: str
    enum: List[str]


class Method(BaseModel):
    type: str


class Url(BaseModel):
    type: str


class RequestInstant(BaseModel):
    type: str
    format: str


class AdditionalProperties31(BaseModel):
    type: str


class Headers(BaseModel):
    type: str
    additionalProperties: AdditionalProperties31


class Body(BaseModel):
    type: str


class AdditionalProperties32(BaseModel):
    type: str


class BodyParameters(BaseModel):
    type: str
    additionalProperties: AdditionalProperties32


class StartTime(BaseModel):
    type: str
    format: str


class StartedAt(BaseModel):
    type: str
    format: str
    deprecated: bool


class Properties112(BaseModel):
    method: Method
    url: Url
    requestInstant: RequestInstant
    headers: Headers
    body: Body
    bodyParameters: BodyParameters
    startTime: StartTime
    startedAt: StartedAt


class RawRequest(BaseModel):
    type: str
    properties: Properties112


class Request(BaseModel):
    _ref: str = Field(..., alias='$ref')


class Duration(BaseModel):
    type: str
    format: str


class AdditionalProperties33(BaseModel):
    type: str


class Headers1(BaseModel):
    type: str
    additionalProperties: AdditionalProperties33


class ResultCode(BaseModel):
    type: str
    format: str


class Result(BaseModel):
    type: str


class Properties113(BaseModel):
    request: Request
    duration: Duration
    headers: Headers1
    resultCode: ResultCode
    result: Result


class RawResponse(BaseModel):
    type: str
    properties: Properties113


class Url1(BaseModel):
    type: str
    description: str


class Properties114(BaseModel):
    url: Url1


class RedirectRequest(BaseModel):
    required: List[str]
    type: str
    properties: Properties114
    description: str


class Name10(BaseModel):
    type: str


class Items115(BaseModel):
    _ref: str = Field(..., alias='$ref')


class AccountIdentifications6(BaseModel):
    uniqueItems: bool
    type: str
    items: Items115


class Properties115(BaseModel):
    name: Name10
    accountIdentifications: AccountIdentifications6


class RefundAccount1(BaseModel):
    type: str
    properties: Properties115


class AdditionalProperties34(BaseModel):
    type: str


class Headers2(BaseModel):
    type: str
    additionalProperties: AdditionalProperties34


class Url2(BaseModel):
    type: str


class Properties116(BaseModel):
    headers: Headers2
    url: Url2


class ResponseForwardedData(BaseModel):
    type: str
    properties: Properties116


class TracingId22(BaseModel):
    type: str


class Count(BaseModel):
    type: str
    format: str


class Pagination7(BaseModel):
    _ref: str = Field(..., alias='$ref')


class Properties117(BaseModel):
    tracingId: TracingId22
    count: Count
    pagination: Pagination7


class ResponseListMeta(BaseModel):
    type: str
    properties: Properties117


class TracingId23(BaseModel):
    type: str


class Properties118(BaseModel):
    tracingId: TracingId23


class ResponseMeta(BaseModel):
    type: str
    properties: Properties118


class Example2(BaseModel):
    id: str
    type: str
    description: str


class Id15(BaseModel):
    type: str
    description: str
    example: str


class Type9(BaseModel):
    _ref: str = Field(..., alias='$ref')


class Description1(BaseModel):
    type: str
    description: str
    example: str


class Properties119(BaseModel):
    id: Id15
    type: Type9
    description: Description1


class ScaMethod4(BaseModel):
    required: List[str]
    type: str
    description: str
    example: Example2
    properties: Properties119


class SortEnum(BaseModel):
    type: str
    description: str
    enum: List[str]


class MonitoringStatusEnum(BaseModel):
    type: str
    enum: List[str]


class Value115(BaseModel):
    type: str


class Properties120(BaseModel):
    value: Value115


class StatementReference(BaseModel):
    type: str
    properties: Properties120


class Id16(BaseModel):
    type: str
    format: str


class Label1(BaseModel):
    type: str


class Properties121(BaseModel):
    id: Id16
    label: Label1


class Subcategory1(BaseModel):
    type: str
    properties: Properties121


class Id17(BaseModel):
    type: str


class Date(BaseModel):
    type: str
    format: str


class BookingDateTime1(BaseModel):
    type: str
    format: str


class ValueDateTime(BaseModel):
    type: str
    format: str


class Status13(BaseModel):
    _ref: str = Field(..., alias='$ref')


class Amount19(BaseModel):
    type: str


class Currency3(BaseModel):
    type: str


class TransactionAmount1(BaseModel):
    _ref: str = Field(..., alias='$ref')


class GrossAmount(BaseModel):
    _ref: str = Field(..., alias='$ref')


class CurrencyExchange1(BaseModel):
    _ref: str = Field(..., alias='$ref')


class ChargeDetails1(BaseModel):
    _ref: str = Field(..., alias='$ref')


class Reference5(BaseModel):
    type: str


class Items116(BaseModel):
    _ref: str = Field(..., alias='$ref')


class StatementReferences(BaseModel):
    type: str
    items: Items116


class Description2(BaseModel):
    type: str


class Items117(BaseModel):
    type: str


class TransactionInformation1(BaseModel):
    type: str
    items: Items117


class AddressDetails1(BaseModel):
    _ref: str = Field(..., alias='$ref')


class IsoBankTransactionCode2(BaseModel):
    _ref: str = Field(..., alias='$ref')


class ProprietaryBankTransactionCode2(BaseModel):
    _ref: str = Field(..., alias='$ref')


class Balance3(BaseModel):
    _ref: str = Field(..., alias='$ref')


class PayeeDetails9(BaseModel):
    _ref: str = Field(..., alias='$ref')


class PayerDetails1(BaseModel):
    _ref: str = Field(..., alias='$ref')


class Merchant2(BaseModel):
    _ref: str = Field(..., alias='$ref')


class Enrichment3(BaseModel):
    _ref: str = Field(..., alias='$ref')


class SupplementaryData(BaseModel):
    type: str


class Properties122(BaseModel):
    id: Id17
    date: Date
    bookingDateTime: BookingDateTime1
    valueDateTime: ValueDateTime
    status: Status13
    amount: Amount19
    currency: Currency3
    transactionAmount: TransactionAmount1
    grossAmount: GrossAmount
    currencyExchange: CurrencyExchange1
    chargeDetails: ChargeDetails1
    reference: Reference5
    statementReferences: StatementReferences
    description: Description2
    transactionInformation: TransactionInformation1
    addressDetails: AddressDetails1
    isoBankTransactionCode: IsoBankTransactionCode2
    proprietaryBankTransactionCode: ProprietaryBankTransactionCode2
    balance: Balance3
    payeeDetails: PayeeDetails9
    payerDetails: PayerDetails1
    merchant: Merchant2
    enrichment: Enrichment3
    supplementaryData: SupplementaryData


class Transaction(BaseModel):
    type: str
    properties: Properties122


class Meta64(BaseModel):
    _ref: str = Field(..., alias='$ref')


class Items118(BaseModel):
    _ref: str = Field(..., alias='$ref')


class Data63(BaseModel):
    type: str
    items: Items118


class AdditionalProperties35(BaseModel):
    type: str


class Links26(BaseModel):
    type: str
    additionalProperties: AdditionalProperties35


class Items119(BaseModel):
    _ref: str = Field(..., alias='$ref')


class ForwardedData21(BaseModel):
    type: str
    items: Items119


class Items120(BaseModel):
    _ref: str = Field(..., alias='$ref')


class Raw22(BaseModel):
    type: str
    items: Items120


class Paging8(BaseModel):
    _ref: str = Field(..., alias='$ref')


class TracingId24(BaseModel):
    type: str
    writeOnly: bool


class Properties123(BaseModel):
    meta: Meta64
    data: Data63
    links: Links26
    forwardedData: ForwardedData21
    raw: Raw22
    paging: Paging8
    tracingId: TracingId24


class ApiListResponseOfTransaction(BaseModel):
    type: str
    properties: Properties123


class ChargeAmount1(BaseModel):
    _ref: str = Field(..., alias='$ref')


class Properties124(BaseModel):
    chargeAmount: ChargeAmount1


class TransactionChargeDetails(BaseModel):
    type: str
    properties: Properties124


class Hash(BaseModel):
    type: str


class Properties125(BaseModel):
    hash: Hash


class TransactionHash2(BaseModel):
    type: str
    properties: Properties125


class Frequency3(BaseModel):
    type: str
    description: str
    example: str


class DetailedFrequency(BaseModel):
    type: str
    description: str
    example: str


class DetailedFrequencyParameter(BaseModel):
    type: str
    description: str
    example: int


class Properties126(BaseModel):
    frequency: Frequency3
    detailedFrequency: DetailedFrequency
    detailedFrequencyParameter: DetailedFrequencyParameter


class TransactionSchedule(BaseModel):
    description: str
    properties: Properties126


class TransactionStatusEnum(BaseModel):
    type: str
    enum: List[str]


class Name11(BaseModel):
    example: str
    type: str
    description: str


class Items121(BaseModel):
    _ref: str = Field(..., alias='$ref')


class Transactions(BaseModel):
    type: str
    description: str
    items: Items121


class TransactionSchedule1(BaseModel):
    _ref: str = Field(..., alias='$ref')


class ScheduleConsistencyScore(BaseModel):
    type: str
    description: str
    example: float


class NextExpectedTransactionDate(BaseModel):
    type: str
    format: str
    description: str
    example: str


class EarliestTransactionDate(BaseModel):
    type: str
    format: str
    description: str
    example: str


class MostRecentTransactionDate(BaseModel):
    type: str
    format: str
    description: str
    example: str


class AmountConsistencyScore(BaseModel):
    type: str
    description: str
    example: float


class AverageAmount(BaseModel):
    type: str
    description: str
    example: float


class Properties127(BaseModel):
    name: Name11
    transactions: Transactions
    transactionSchedule: TransactionSchedule1
    scheduleConsistencyScore: ScheduleConsistencyScore
    nextExpectedTransactionDate: NextExpectedTransactionDate
    earliestTransactionDate: EarliestTransactionDate
    mostRecentTransactionDate: MostRecentTransactionDate
    amountConsistencyScore: AmountConsistencyScore
    averageAmount: AverageAmount


class TransactionStream(BaseModel):
    description: str
    properties: Properties127


class Name12(BaseModel):
    example: str
    type: str
    description: str


class Items122(BaseModel):
    _ref: str = Field(..., alias='$ref')


class Transactions1(BaseModel):
    type: str
    description: str
    items: Items122


class TransactionSchedule2(BaseModel):
    _ref: str = Field(..., alias='$ref')


class ScheduleConsistencyScore1(BaseModel):
    type: str
    description: str
    example: float


class NextExpectedTransactionDate1(BaseModel):
    type: str
    format: str
    description: str
    example: str


class EarliestTransactionDate1(BaseModel):
    type: str
    format: str
    description: str
    example: str


class MostRecentTransactionDate1(BaseModel):
    type: str
    format: str
    description: str
    example: str


class AmountConsistencyScore1(BaseModel):
    type: str
    description: str
    example: float


class AverageAmount1(BaseModel):
    type: str
    description: str
    example: float


class MissedTransactions(BaseModel):
    type: str
    format: str
    description: str
    example: int


class Properties128(BaseModel):
    name: Name12
    transactions: Transactions1
    transactionSchedule: TransactionSchedule2
    scheduleConsistencyScore: ScheduleConsistencyScore1
    nextExpectedTransactionDate: NextExpectedTransactionDate1
    earliestTransactionDate: EarliestTransactionDate1
    mostRecentTransactionDate: MostRecentTransactionDate1
    amountConsistencyScore: AmountConsistencyScore1
    averageAmount: AverageAmount1
    missedTransactions: MissedTransactions


class TerminatedTransactionStream(BaseModel):
    description: str
    properties: Properties128


class Type10(BaseModel):
    type: str
    description: str
    enum: List[str]


class UsageType1(BaseModel):
    type: str
    enum: List[str]


class Id18(BaseModel):
    type: str
    description: str
    example: str


class CorporateId(BaseModel):
    type: str
    description: str
    example: str


class Password(BaseModel):
    type: str
    description: str
    example: str


class Properties129(BaseModel):
    id: Id18
    corporateId: CorporateId
    password: Password


class UserCredentials6(BaseModel):
    required: List[str]
    type: str
    properties: Properties129
    description: str


class Id19(BaseModel):
    type: str


class DeleteStatus1(BaseModel):
    _ref: str = Field(..., alias='$ref')


class CreationDate1(BaseModel):
    type: str
    format: str


class Items123(BaseModel):
    _ref: str = Field(..., alias='$ref')


class UserConsents(BaseModel):
    uniqueItems: bool
    type: str
    items: Items123


class Properties130(BaseModel):
    id: Id19
    deleteStatus: DeleteStatus1
    creationDate: CreationDate1
    userConsents: UserConsents


class UserDeleteResponse(BaseModel):
    type: str
    properties: Properties130


class Meta65(BaseModel):
    _ref: str = Field(..., alias='$ref')


class Data64(BaseModel):
    _ref: str = Field(..., alias='$ref')


class AdditionalProperties36(BaseModel):
    type: str


class Links27(BaseModel):
    type: str
    additionalProperties: AdditionalProperties36


class Items124(BaseModel):
    _ref: str = Field(..., alias='$ref')


class ForwardedData22(BaseModel):
    type: str
    items: Items124


class Items125(BaseModel):
    _ref: str = Field(..., alias='$ref')


class Raw23(BaseModel):
    type: str
    items: Items125


class TracingId25(BaseModel):
    type: str
    writeOnly: bool


class Properties131(BaseModel):
    meta: Meta65
    data: Data64
    links: Links27
    forwardedData: ForwardedData22
    raw: Raw23
    tracingId: TracingId25


class ApiResponseOfUserDeleteResponse(BaseModel):
    type: str
    properties: Properties131


class Schemas(BaseModel):
    Account: Account
    AccountApiListResponse: AccountApiListResponse
    ApiResponseOfAccount: ApiResponseOfAccount
    AccountAuthorisationRequest: AccountAuthorisationRequest
    AccountBalance: AccountBalance2
    AccountEmbeddedAuthorisationRequest: AccountEmbeddedAuthorisationRequest
    AccountIdentification: AccountIdentification35
    AccountInfo: AccountInfo
    AccountName: AccountName2
    AccountRequest: AccountRequest3
    AccountStatement: AccountStatement
    AccountBalanceType: AccountBalanceType
    AccountIdentificationType: AccountIdentificationType
    ApiResponseOfAccountStatement: ApiResponseOfAccountStatement
    ApiListResponseOfAccountStatement: ApiListResponseOfAccountStatement
    AccountType: AccountType1
    Address: Address12
    AddressDetails: AddressDetails
    AddressTypeEnum: AddressTypeEnum
    Amount: Amount13
    ApiCall: ApiCall
    ApiError: ApiError
    ApiResponseError: ApiResponseError
    Application: Application
    ApplicationUser: ApplicationUser
    AuthorisationEmbeddedRequestResponse: AuthorisationEmbeddedRequestResponse
    ApiResponseOfAuthorisationEmbeddedRequestResponse: ApiResponseOfAuthorisationEmbeddedRequestResponse
    AuthorisationRequestResponse: AuthorisationRequestResponse
    AuthorisationStatus: AuthorisationStatus
    ApiResponseOfAuthorisationRequestResponse: ApiResponseOfAuthorisationRequestResponse
    TransactionBalance: TransactionBalance
    Balances: Balances
    ApiResponseOfBalances: ApiResponseOfBalances
    Beneficiary: Beneficiary
    BeneficiaryPayee: BeneficiaryPayee
    ApiListResponseOfBeneficiary: ApiListResponseOfBeneficiary
    BulkPaymentAuthorisationRequest: BulkPaymentAuthorisationRequest
    BulkPaymentEmbeddedAuthorisationRequest: BulkPaymentEmbeddedAuthorisationRequest
    BulkPaymentRequest: BulkPaymentRequest
    Categorisation: Categorisation
    Category: Category
    ApiListResponseOfCategory: ApiListResponseOfCategory
    ChargeBearerType: ChargeBearerType
    PaymentChargeDetails: PaymentChargeDetails
    Consent: Consent
    ApiListResponseOfConsent: ApiListResponseOfConsent
    ApiResponseOfConsent: ApiResponseOfConsent
    ConsentAuthCodeRequest: ConsentAuthCodeRequest
    ConsentDeleteResponse: ConsentDeleteResponse
    ApiResponseOfConsentDeleteResponse: ApiResponseOfConsentDeleteResponse
    Country: Country5
    CredentialsType: CredentialsType
    CreditLine: CreditLine
    CreditLineType: CreditLineType
    CurrencyExchange: CurrencyExchange
    DeleteStatusEnum: DeleteStatusEnum
    DirectDebitResponse: DirectDebitResponse
    DirectDebitPayee: DirectDebitPayee
    EnrichedTransaction: EnrichedTransaction
    EnrichedWrapper: EnrichedWrapper
    Enrichment: Enrichment1
    EnrichmentMerchant: EnrichmentMerchant
    EnvironmentType: EnvironmentType
    ExchangeRateInformation: ExchangeRateInformation
    ExchangeRateInformationResponse: ExchangeRateInformationResponse
    FeatureDetails: FeatureDetails
    ApiListResponseOfDirectDebitResponse: ApiListResponseOfDirectDebitResponse
    ApiListResponseOfFeatureDetails: ApiListResponseOfFeatureDetails
    FeatureEnum: FeatureEnum
    FilterAndSort: FilterAndSort
    FilteredClientPayloadListAccount: FilteredClientPayloadListAccount
    FilteredClientPayloadListAccountStatement: FilteredClientPayloadListAccountStatement
    FilteredClientPayloadListCategory: FilteredClientPayloadListCategory
    FilteredClientPayloadListConsent: FilteredClientPayloadListConsent
    FilteredClientPayloadListDirectDebitResponse: FilteredClientPayloadListDirectDebitResponse
    FilteredClientPayloadListFeatureDetails: FilteredClientPayloadListFeatureDetails
    FilteredClientPayloadListInstitution: FilteredClientPayloadListInstitution
    FilteredClientPayloadListPaymentResponse: FilteredClientPayloadListPaymentResponse
    FilteredClientPayloadListTransaction: FilteredClientPayloadListTransaction
    FinancialProfile: FinancialProfile
    FrequencyEnumExtended: FrequencyEnumExtended
    FrequencyRequest: FrequencyRequest
    FrequencyResponse: FrequencyResponse
    Identity: Identity
    IdentityAddress: IdentityAddress
    ApiResponseOfIdentity: ApiResponseOfIdentity
    Institution: Institution2
    ApiListResponseOfInstitution: ApiListResponseOfInstitution
    InstitutionConsent: InstitutionConsent2
    InstitutionError: InstitutionError2
    InternationalPaymentRequest: InternationalPaymentRequest
    IsoBankTransactionCode: IsoBankTransactionCode1
    IsoCodeDetails: IsoCodeDetails
    Media: Media2
    Merchant: Merchant1
    MonitoringEndpointStatus: MonitoringEndpointStatus
    MonitoringFeatureStatus: MonitoringFeatureStatus
    MultiAuthorisation: MultiAuthorisation
    NewApplicationUser: NewApplicationUser
    Next: Next
    OneTimeTokenRequest: OneTimeTokenRequest
    Pagination: Pagination6
    Payee: Payee16
    PayeeDetails: PayeeDetails7
    Payer: Payer11
    PayerDetails: PayerDetails
    PaymentAuthorisationRequest: PaymentAuthorisationRequest
    PaymentAuthorisationRequestResponse: PaymentAuthorisationRequestResponse
    ApiResponseOfPaymentAuthorisationRequestResponse: ApiResponseOfPaymentAuthorisationRequestResponse
    PaymentContextType: PaymentContextType
    PaymentEmbeddedAuthorisationRequest: PaymentEmbeddedAuthorisationRequest
    PaymentEmbeddedAuthorisationRequestResponse: PaymentEmbeddedAuthorisationRequestResponse
    ApiResponseOfPaymentEmbeddedAuthorisationRequestResponse: ApiResponseOfPaymentEmbeddedAuthorisationRequestResponse
    PaymentIsoStatus: PaymentIsoStatus
    PaymentIsoStatusCodeEnum: PaymentIsoStatusCodeEnum
    PaymentPreAuthorisationRequest: PaymentPreAuthorisationRequest
    PaymentRequest: PaymentRequest13
    PaymentResponse: PaymentResponse
    ApiListResponseOfPaymentResponse: ApiListResponseOfPaymentResponse
    ApiResponseOfPaymentResponse: ApiResponseOfPaymentResponse
    PaymentResponses: PaymentResponses
    ApiResponseOfPaymentResponses: ApiResponseOfPaymentResponses
    PaymentStatus: PaymentStatus
    PaymentStatusDetails: PaymentStatusDetails
    PaymentType: PaymentType
    PeriodicPaymentRequest: PeriodicPaymentRequest
    PreAuthorisationRequest: PreAuthorisationRequest
    PriorityCodeEnum: PriorityCodeEnum
    ProfileConsent: ProfileConsent
    ProprietaryBankTransactionCode: ProprietaryBankTransactionCode1
    RateTypeEnum: RateTypeEnum
    RawRequest: RawRequest
    RawResponse: RawResponse
    RedirectRequest: RedirectRequest
    RefundAccount: RefundAccount1
    ResponseForwardedData: ResponseForwardedData
    ResponseListMeta: ResponseListMeta
    ResponseMeta: ResponseMeta
    ScaMethod: ScaMethod4
    SortEnum: SortEnum
    MonitoringStatusEnum: MonitoringStatusEnum
    StatementReference: StatementReference
    Subcategory: Subcategory1
    Transaction: Transaction
    ApiListResponseOfTransaction: ApiListResponseOfTransaction
    TransactionChargeDetails: TransactionChargeDetails
    TransactionHash: TransactionHash2
    TransactionSchedule: TransactionSchedule
    TransactionStatusEnum: TransactionStatusEnum
    TransactionStream: TransactionStream
    TerminatedTransactionStream: TerminatedTransactionStream
    Type: Type10
    UsageType: UsageType1
    UserCredentials: UserCredentials6
    UserDeleteResponse: UserDeleteResponse
    ApiResponseOfUserDeleteResponse: ApiResponseOfUserDeleteResponse


class BasicAuth(BaseModel):
    description: str
    scheme: str
    type: str


class SecuritySchemes(BaseModel):
    basicAuth: BasicAuth


class Components(BaseModel):
    schemas: Schemas
    securitySchemes: SecuritySchemes


class Model(BaseModel):
    openapi: str
    info: Info
    servers: List[Server]
    security: List[SecurityItem]
    tags: List[Tag]
    paths: Paths
    components: Components
