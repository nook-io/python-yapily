# coding: utf-8

"""
    Yapily API

    The Yapily API enables connections between your application and users' banks. For more information check out our [documentation](https://docs.yapily.com/).<br><br>In particular, make sure to view our [Getting Started](https://docs.yapily.com/pages/home/getting-started/) steps if this is your first time here.<br><br>While testing the API, our list of [sandbox credentials](https://docs.yapily.com/pages/key-concepts/sandbox-credentials/) maybe useful.

    The version of the OpenAPI document: 2.13.1
    Contact: support@yapily.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import json
import pprint
import re  # noqa: F401
from aenum import Enum, no_arg





class FeatureEnum(str, Enum):
    """
    Used to describe what functions are supported by the associated `Institution`.        <br><br>For more information on each feature, see the following links:        <ul>          <li>[Financial Data Features](https://docs.yapily.com/pages/key-concepts/account-data/account-features/)</li>          <li>[Payments Features](https://docs.yapily.com/pages/key-concepts/payments/payment-features/)</li>        </ul>
    """

    """
    allowed enum values
    """
    INITIATE_PRE_AUTHORISATION = 'INITIATE_PRE_AUTHORISATION'
    INITIATE_PRE_AUTHORISATION_ACCOUNTS = 'INITIATE_PRE_AUTHORISATION_ACCOUNTS'
    INITIATE_PRE_AUTHORISATION_PAYMENTS = 'INITIATE_PRE_AUTHORISATION_PAYMENTS'
    INITIATE_ACCOUNT_REQUEST = 'INITIATE_ACCOUNT_REQUEST'
    INITIATE_EMBEDDED_ACCOUNT_REQUEST = 'INITIATE_EMBEDDED_ACCOUNT_REQUEST'
    ACCOUNT_REQUEST_DETAILS = 'ACCOUNT_REQUEST_DETAILS'
    ACCOUNTS = 'ACCOUNTS'
    ACCOUNT = 'ACCOUNT'
    ACCOUNT_TRANSACTIONS = 'ACCOUNT_TRANSACTIONS'
    ACCOUNT_STATEMENTS = 'ACCOUNT_STATEMENTS'
    ACCOUNT_STATEMENT = 'ACCOUNT_STATEMENT'
    ACCOUNT_STATEMENT_FILE = 'ACCOUNT_STATEMENT_FILE'
    ACCOUNT_SCHEDULED_PAYMENTS = 'ACCOUNT_SCHEDULED_PAYMENTS'
    ACCOUNT_DIRECT_DEBITS = 'ACCOUNT_DIRECT_DEBITS'
    ACCOUNT_PERIODIC_PAYMENTS = 'ACCOUNT_PERIODIC_PAYMENTS'
    ACCOUNT_TRANSACTIONS_WITH_MERCHANT = 'ACCOUNT_TRANSACTIONS_WITH_MERCHANT'
    IDENTITY = 'IDENTITY'
    ACCOUNTS_WITHOUT_BALANCE = 'ACCOUNTS_WITHOUT_BALANCE'
    ACCOUNT_WITHOUT_BALANCE = 'ACCOUNT_WITHOUT_BALANCE'
    ACCOUNT_BALANCES = 'ACCOUNT_BALANCES'
    INITIATE_SINGLE_PAYMENT_SORTCODE = 'INITIATE_SINGLE_PAYMENT_SORTCODE'
    EXISTING_PAYMENT_INITIATION_DETAILS = 'EXISTING_PAYMENT_INITIATION_DETAILS'
    CREATE_SINGLE_PAYMENT_SORTCODE = 'CREATE_SINGLE_PAYMENT_SORTCODE'
    EXISTING_PAYMENTS_DETAILS = 'EXISTING_PAYMENTS_DETAILS'
    INITIATE_DOMESTIC_SINGLE_PAYMENT = 'INITIATE_DOMESTIC_SINGLE_PAYMENT'
    INITIATE_EMBEDDED_DOMESTIC_SINGLE_PAYMENT = 'INITIATE_EMBEDDED_DOMESTIC_SINGLE_PAYMENT'
    CREATE_DOMESTIC_SINGLE_PAYMENT = 'CREATE_DOMESTIC_SINGLE_PAYMENT'
    INITIATE_EMBEDDED_BULK_PAYMENT = 'INITIATE_EMBEDDED_BULK_PAYMENT'
    INITIATE_DOMESTIC_SINGLE_INSTANT_PAYMENT = 'INITIATE_DOMESTIC_SINGLE_INSTANT_PAYMENT'
    CREATE_DOMESTIC_SINGLE_INSTANT_PAYMENT = 'CREATE_DOMESTIC_SINGLE_INSTANT_PAYMENT'
    INITIATE_DOMESTIC_VARIABLE_RECURRING_PAYMENT = 'INITIATE_DOMESTIC_VARIABLE_RECURRING_PAYMENT'
    CREATE_DOMESTIC_VARIABLE_RECURRING_PAYMENT = 'CREATE_DOMESTIC_VARIABLE_RECURRING_PAYMENT'
    INITIATE_DOMESTIC_VARIABLE_RECURRING_PAYMENT_SWEEPING = 'INITIATE_DOMESTIC_VARIABLE_RECURRING_PAYMENT_SWEEPING'
    INITIATE_DOMESTIC_VARIABLE_RECURRING_PAYMENT_NONSWEEPING = 'INITIATE_DOMESTIC_VARIABLE_RECURRING_PAYMENT_NONSWEEPING'
    CREATE_DOMESTIC_VARIABLE_RECURRING_PAYMENT_SWEEPING = 'CREATE_DOMESTIC_VARIABLE_RECURRING_PAYMENT_SWEEPING'
    CREATE_DOMESTIC_VARIABLE_RECURRING_PAYMENT_NONSWEEPING = 'CREATE_DOMESTIC_VARIABLE_RECURRING_PAYMENT_NONSWEEPING'
    INITIATE_DOMESTIC_SCHEDULED_PAYMENT = 'INITIATE_DOMESTIC_SCHEDULED_PAYMENT'
    CREATE_DOMESTIC_SCHEDULED_PAYMENT = 'CREATE_DOMESTIC_SCHEDULED_PAYMENT'
    INITIATE_DOMESTIC_PERIODIC_PAYMENT = 'INITIATE_DOMESTIC_PERIODIC_PAYMENT'
    CREATE_DOMESTIC_PERIODIC_PAYMENT = 'CREATE_DOMESTIC_PERIODIC_PAYMENT'
    PERIODIC_PAYMENT_FREQUENCY_EXTENDED = 'PERIODIC_PAYMENT_FREQUENCY_EXTENDED'
    INITIATE_INTERNATIONAL_SCHEDULED_PAYMENT = 'INITIATE_INTERNATIONAL_SCHEDULED_PAYMENT'
    CREATE_INTERNATIONAL_SCHEDULED_PAYMENT = 'CREATE_INTERNATIONAL_SCHEDULED_PAYMENT'
    INITIATE_INTERNATIONAL_PERIODIC_PAYMENT = 'INITIATE_INTERNATIONAL_PERIODIC_PAYMENT'
    CREATE_INTERNATIONAL_PERIODIC_PAYMENT = 'CREATE_INTERNATIONAL_PERIODIC_PAYMENT'
    INITIATE_INTERNATIONAL_SINGLE_PAYMENT = 'INITIATE_INTERNATIONAL_SINGLE_PAYMENT'
    CREATE_INTERNATIONAL_SINGLE_PAYMENT = 'CREATE_INTERNATIONAL_SINGLE_PAYMENT'
    INITIATE_BULK_PAYMENT = 'INITIATE_BULK_PAYMENT'
    CREATE_BULK_PAYMENT = 'CREATE_BULK_PAYMENT'
    TRANSFER = 'TRANSFER'
    OPEN_DATA_PERSONAL_CURRENT_ACCOUNTS = 'OPEN_DATA_PERSONAL_CURRENT_ACCOUNTS'
    OPEN_DATA_ATMS = 'OPEN_DATA_ATMS'
    READ_DOMESTIC_SINGLE_REFUND = 'READ_DOMESTIC_SINGLE_REFUND'
    READ_DOMESTIC_SCHEDULED_REFUND = 'READ_DOMESTIC_SCHEDULED_REFUND'
    READ_DOMESTIC_PERIODIC_PAYMENT_REFUND = 'READ_DOMESTIC_PERIODIC_PAYMENT_REFUND'
    READ_INTERNATIONAL_SINGLE_REFUND = 'READ_INTERNATIONAL_SINGLE_REFUND'
    READ_INTERNATIONAL_SCHEDULED_REFUND = 'READ_INTERNATIONAL_SCHEDULED_REFUND'
    ACCOUNT_BENEFICIARIES = 'ACCOUNT_BENEFICIARIES'
    INITIATE_ONETIME_PRE_AUTHORISATION_PAYMENTS = 'INITIATE_ONETIME_PRE_AUTHORISATION_PAYMENTS'
    INITIATE_ONETIME_PRE_AUTHORISATION_ACCOUNTS = 'INITIATE_ONETIME_PRE_AUTHORISATION_ACCOUNTS'
    INITIATE_ONETIME_PRE_AUTHORISATION = 'INITIATE_ONETIME_PRE_AUTHORISATION'
    VARIABLE_RECURRING_PAYMENT_FUNDS_CONFIRMATION = 'VARIABLE_RECURRING_PAYMENT_FUNDS_CONFIRMATION'

    @classmethod
    def from_json(cls, json_str: str) -> FeatureEnum:
        """Create an instance of FeatureEnum from a JSON string"""
        return FeatureEnum(json.loads(json_str))


