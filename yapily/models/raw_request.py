# coding: utf-8

"""
    Yapily API

    The Yapily API enables connections between your application and users' banks. For more information check out our [documentation](https://docs.yapily.com/).<br><br>In particular, make sure to view our [Getting Started](https://docs.yapily.com/pages/home/getting-started/) steps if this is your first time here.<br><br>While testing the API, our list of [sandbox credentials](https://docs.yapily.com/pages/key-concepts/sandbox-credentials/) maybe useful.  # noqa: E501

    The version of the OpenAPI document: 2.13.1
    Contact: support@yapily.com
    Generated by: https://openapi-generator.tech
"""


import pprint
import re  # noqa: F401

import six

from yapily.configuration import Configuration


class RawRequest(object):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {
        'method': 'str',
        'url': 'str',
        'request_instant': 'datetime',
        'headers': 'dict(str, str)',
        'body': 'object',
        'body_parameters': 'dict(str, str)',
        'start_time': 'datetime',
        'started_at': 'datetime'
    }

    attribute_map = {
        'method': 'method',
        'url': 'url',
        'request_instant': 'requestInstant',
        'headers': 'headers',
        'body': 'body',
        'body_parameters': 'bodyParameters',
        'start_time': 'startTime',
        'started_at': 'startedAt'
    }

    def __init__(self, method=None, url=None, request_instant=None, headers=None, body=None, body_parameters=None, start_time=None, started_at=None, local_vars_configuration=None):  # noqa: E501
        """RawRequest - a model defined in OpenAPI"""  # noqa: E501
        if local_vars_configuration is None:
            local_vars_configuration = Configuration()
        self.local_vars_configuration = local_vars_configuration

        self._method = None
        self._url = None
        self._request_instant = None
        self._headers = None
        self._body = None
        self._body_parameters = None
        self._start_time = None
        self._started_at = None
        self.discriminator = None

        if method is not None:
            self.method = method
        if url is not None:
            self.url = url
        if request_instant is not None:
            self.request_instant = request_instant
        if headers is not None:
            self.headers = headers
        if body is not None:
            self.body = body
        if body_parameters is not None:
            self.body_parameters = body_parameters
        if start_time is not None:
            self.start_time = start_time
        if started_at is not None:
            self.started_at = started_at

    @property
    def method(self):
        """Gets the method of this RawRequest.  # noqa: E501


        :return: The method of this RawRequest.  # noqa: E501
        :rtype: str
        """
        return self._method

    @method.setter
    def method(self, method):
        """Sets the method of this RawRequest.


        :param method: The method of this RawRequest.  # noqa: E501
        :type: str
        """

        self._method = method

    @property
    def url(self):
        """Gets the url of this RawRequest.  # noqa: E501


        :return: The url of this RawRequest.  # noqa: E501
        :rtype: str
        """
        return self._url

    @url.setter
    def url(self, url):
        """Sets the url of this RawRequest.


        :param url: The url of this RawRequest.  # noqa: E501
        :type: str
        """

        self._url = url

    @property
    def request_instant(self):
        """Gets the request_instant of this RawRequest.  # noqa: E501


        :return: The request_instant of this RawRequest.  # noqa: E501
        :rtype: datetime
        """
        return self._request_instant

    @request_instant.setter
    def request_instant(self, request_instant):
        """Sets the request_instant of this RawRequest.


        :param request_instant: The request_instant of this RawRequest.  # noqa: E501
        :type: datetime
        """

        self._request_instant = request_instant

    @property
    def headers(self):
        """Gets the headers of this RawRequest.  # noqa: E501


        :return: The headers of this RawRequest.  # noqa: E501
        :rtype: dict(str, str)
        """
        return self._headers

    @headers.setter
    def headers(self, headers):
        """Sets the headers of this RawRequest.


        :param headers: The headers of this RawRequest.  # noqa: E501
        :type: dict(str, str)
        """

        self._headers = headers

    @property
    def body(self):
        """Gets the body of this RawRequest.  # noqa: E501


        :return: The body of this RawRequest.  # noqa: E501
        :rtype: object
        """
        return self._body

    @body.setter
    def body(self, body):
        """Sets the body of this RawRequest.


        :param body: The body of this RawRequest.  # noqa: E501
        :type: object
        """

        self._body = body

    @property
    def body_parameters(self):
        """Gets the body_parameters of this RawRequest.  # noqa: E501


        :return: The body_parameters of this RawRequest.  # noqa: E501
        :rtype: dict(str, str)
        """
        return self._body_parameters

    @body_parameters.setter
    def body_parameters(self, body_parameters):
        """Sets the body_parameters of this RawRequest.


        :param body_parameters: The body_parameters of this RawRequest.  # noqa: E501
        :type: dict(str, str)
        """

        self._body_parameters = body_parameters

    @property
    def start_time(self):
        """Gets the start_time of this RawRequest.  # noqa: E501


        :return: The start_time of this RawRequest.  # noqa: E501
        :rtype: datetime
        """
        return self._start_time

    @start_time.setter
    def start_time(self, start_time):
        """Sets the start_time of this RawRequest.


        :param start_time: The start_time of this RawRequest.  # noqa: E501
        :type: datetime
        """

        self._start_time = start_time

    @property
    def started_at(self):
        """Gets the started_at of this RawRequest.  # noqa: E501


        :return: The started_at of this RawRequest.  # noqa: E501
        :rtype: datetime
        """
        return self._started_at

    @started_at.setter
    def started_at(self, started_at):
        """Sets the started_at of this RawRequest.


        :param started_at: The started_at of this RawRequest.  # noqa: E501
        :type: datetime
        """

        self._started_at = started_at

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, RawRequest):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, RawRequest):
            return True

        return self.to_dict() != other.to_dict()
