# coding: utf-8

"""
    Yapily API

    The Yapily API enables connections between your application and users' banks. For more information check out our [documentation](https://docs.yapily.com/).<br><br>In particular, make sure to view our [Getting Started](https://docs.yapily.com/pages/home/getting-started/) steps if this is your first time here.<br><br>While testing the API, our list of [sandbox credentials](https://docs.yapily.com/pages/key-concepts/sandbox-credentials/) maybe useful.

    The version of the OpenAPI document: 4.2.0
    Contact: support@yapily.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from yapily.models.direct_debit_response import DirectDebitResponse  # noqa: E501

class TestDirectDebitResponse(unittest.TestCase):
    """DirectDebitResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> DirectDebitResponse:
        """Test DirectDebitResponse
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `DirectDebitResponse`
        """
        model = DirectDebitResponse()  # noqa: E501
        if include_optional:
            return DirectDebitResponse(
                id = '',
                status_details = yapily.models.payment_status_details.PaymentStatusDetails(
                    status = 'PENDING', 
                    status_reason = '', 
                    status_reason_description = '', 
                    status_update_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    multi_authorisation_status = yapily.models.multi_authorisation.MultiAuthorisation(
                        number_of_authorisation_required = 56, 
                        number_of_authorisation_received = 56, 
                        last_updated_date_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        expiration_date_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), ), 
                    iso_status = yapily.models.payment_iso_status.PaymentIsoStatus(
                        code = 'ACCC', 
                        name = 'AcceptedCreditSettlementCompleted', ), ),
                payee_details = yapily.models.direct_debit_payee.DirectDebitPayee(
                    name = 'Tempus Risus Company', ),
                reference = '',
                previous_payment_amount = yapily.models.amount_details.Amount Details(
                    amount = 10, 
                    currency = 'GBP', ),
                previous_payment_date_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f')
            )
        else:
            return DirectDebitResponse(
        )
        """

    def testDirectDebitResponse(self):
        """Test DirectDebitResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
