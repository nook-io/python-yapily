# coding: utf-8

"""
    Yapily API

    The Yapily API enables connections between your application and users' banks. For more information check out our [documentation](https://docs.yapily.com/).<br><br>In particular, make sure to view our [Getting Started](https://docs.yapily.com/pages/home/getting-started/) steps if this is your first time here.<br><br>While testing the API, our list of [sandbox credentials](https://docs.yapily.com/pages/key-concepts/sandbox-credentials/) maybe useful.

    The version of the OpenAPI document: 4.2.0
    Contact: support@yapily.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from yapily.models.payment_pre_authorisation_request import PaymentPreAuthorisationRequest  # noqa: E501

class TestPaymentPreAuthorisationRequest(unittest.TestCase):
    """PaymentPreAuthorisationRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> PaymentPreAuthorisationRequest:
        """Test PaymentPreAuthorisationRequest
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `PaymentPreAuthorisationRequest`
        """
        model = PaymentPreAuthorisationRequest()  # noqa: E501
        if include_optional:
            return PaymentPreAuthorisationRequest(
                user_uuid = '',
                application_user_id = 'user-234562290',
                forward_parameters = [
                    ''
                    ],
                institution_id = 'yapily-mock',
                callback = 'https://display-parameters.com',
                redirect = yapily.models.redirect_request.RedirectRequest(
                    url = '', ),
                one_time_token = False,
                scope = 'AIS',
                payee = yapily.models.payee_details.PayeeDetails(
                    name = 'Jane Doe', 
                    account_identifications = [{"identification":"IBUK123456789","type":"IBAN"}], 
                    country = 'GB', ),
                payer = yapily.models.payer_details.PayerDetails(
                    account_identifications = [
                        yapily.models.account_identifications.Account Identifications(
                            type = 'SORT_CODE', 
                            identification = '401016', )
                        ], ),
                amount = yapily.models.amount_details.Amount Details(
                    amount = 10, 
                    currency = 'GBP', ),
                reference = 'Bill payment'
            )
        else:
            return PaymentPreAuthorisationRequest(
                institution_id = 'yapily-mock',
                scope = 'AIS',
                payee = yapily.models.payee_details.PayeeDetails(
                    name = 'Jane Doe', 
                    account_identifications = [{"identification":"IBUK123456789","type":"IBAN"}], 
                    country = 'GB', ),
                payer = yapily.models.payer_details.PayerDetails(
                    account_identifications = [
                        yapily.models.account_identifications.Account Identifications(
                            type = 'SORT_CODE', 
                            identification = '401016', )
                        ], ),
                amount = yapily.models.amount_details.Amount Details(
                    amount = 10, 
                    currency = 'GBP', ),
                reference = 'Bill payment',
        )
        """

    def testPaymentPreAuthorisationRequest(self):
        """Test PaymentPreAuthorisationRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
