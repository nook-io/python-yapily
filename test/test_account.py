# coding: utf-8

"""
    Yapily API

    The Yapily API enables connections between your application and users' banks. For more information check out our [documentation](https://docs.yapily.com/).<br><br>In particular, make sure to view our [Getting Started](https://docs.yapily.com/#getting-started) steps if this is your first time here.<br><br>While testing the API, our list of [sandbox credentials](https://docs.yapily.com/guides/applications/institutions/sandbox/) maybe useful.  # noqa: E501

    The version of the OpenAPI document: 2.1.0
    Contact: support@yapily.com
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import openapi_client
from openapi_client.models.account import Account  # noqa: E501
from openapi_client.rest import ApiException

class TestAccount(unittest.TestCase):
    """Account unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test Account
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = openapi_client.models.account.Account()  # noqa: E501
        if include_optional :
            return Account(
                id = '0', 
                type = '0', 
                description = '0', 
                balance = 1.337, 
                currency = '0', 
                usage_type = 'PERSONAL', 
                account_type = 'CASH_TRADING', 
                nickname = '0', 
                details = '0', 
                account_names = [
                    openapi_client.models.account_name.AccountName(
                        name = '0', )
                    ], 
                account_identifications = [
                    openapi_client.models.account_identification.AccountIdentification(
                        type = 'SORT_CODE', 
                        identification = '401016', )
                    ], 
                account_balances = [
                    openapi_client.models.account_balance.AccountBalance(
                        type = 'CLOSING_AVAILABLE', 
                        date_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        balance_amount = openapi_client.models.amount.Amount(
                            amount = 10, 
                            currency = 'GBP', ), 
                        credit_line_included = True, 
                        credit_lines = [
                            openapi_client.models.credit_line.CreditLine(
                                credit_line_amount = openapi_client.models.amount.Amount(
                                    amount = 10, 
                                    currency = 'GBP', ), )
                            ], )
                    ]
            )
        else :
            return Account(
        )

    def testAccount(self):
        """Test Account"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
