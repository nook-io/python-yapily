# coding: utf-8

"""
    Yapily API

    The Yapily API enables connections between your application and users' banks. For more information check out our [documentation](https://docs.yapily.com/).<br><br>In particular, make sure to view our [Getting Started](https://docs.yapily.com/pages/home/getting-started/) steps if this is your first time here.<br><br>While testing the API, our list of [sandbox credentials](https://docs.yapily.com/pages/key-concepts/sandbox-credentials/) maybe useful.

    The version of the OpenAPI document: 2.13.1
    Contact: support@yapily.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from yapily.models.periodic_payment_request import PeriodicPaymentRequest

class TestPeriodicPaymentRequest(unittest.TestCase):
    """PeriodicPaymentRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> PeriodicPaymentRequest:
        """Test PeriodicPaymentRequest
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `PeriodicPaymentRequest`
        """
        model = PeriodicPaymentRequest()
        if include_optional:
            return PeriodicPaymentRequest(
                frequency = yapily.models.frequency_request.FrequencyRequest(
                    type = 'DAILY', 
                    interval_week = 1, 
                    interval_month = 1, 
                    execution_day = 1, ),
                number_of_payments = 5,
                next_payment_date_time = '2018-01-10T00:00Z',
                next_payment_amount = yapily.models.amount.Amount(
                    amount = 10, 
                    currency = 'GBP', ),
                final_payment_date_time = '2030-01-10T00:00Z',
                final_payment_amount = yapily.models.amount.Amount(
                    amount = 10, 
                    currency = 'GBP', )
            )
        else:
            return PeriodicPaymentRequest(
                frequency = yapily.models.frequency_request.FrequencyRequest(
                    type = 'DAILY', 
                    interval_week = 1, 
                    interval_month = 1, 
                    execution_day = 1, ),
        )
        """

    def testPeriodicPaymentRequest(self):
        """Test PeriodicPaymentRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
