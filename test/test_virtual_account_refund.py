# coding: utf-8

"""
    Yapily API

    The Yapily API enables connections between your application and users' banks. For more information check out our [documentation](https://docs.yapily.com/).<br><br>In particular, make sure to view our [Getting Started](https://docs.yapily.com/pages/home/getting-started/) steps if this is your first time here.<br><br>While testing the API, our list of [sandbox credentials](https://docs.yapily.com/pages/key-concepts/sandbox-credentials/) maybe useful.

    The version of the OpenAPI document: 2.25.0
    Contact: support@yapily.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from yapily.models.virtual_account_refund import VirtualAccountRefund  # noqa: E501

class TestVirtualAccountRefund(unittest.TestCase):
    """VirtualAccountRefund unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> VirtualAccountRefund:
        """Test VirtualAccountRefund
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `VirtualAccountRefund`
        """
        model = VirtualAccountRefund()  # noqa: E501
        if include_optional:
            return VirtualAccountRefund(
                id = 'za2ad0234-a333-5435-8787-a3a3cef4031c',
                original_payment = yapily.models.virtual_account_original_payment.VirtualAccountOriginalPayment(
                    payment_initiation_id = '', ),
                status = 'INITIATED',
                amount = None,
                issues = [
                    yapily.models.error_issue.ErrorIssue(
                        type = '', 
                        code = '', 
                        parameter = '', 
                        message = '', 
                        institution_error = yapily.models.institution_error.InstitutionError(
                            error_message = '', 
                            http_status_code = 56, ), )
                    ],
                reason = 'REQUESTED_BY_CUSTOMER',
                payment_date = 'Tue Oct 04 01:00:00 BST 2022',
                reference = 'Refund 123',
                refund_to = 'SOURCE',
                refund_to_original_payer = True,
                beneficiary_type = 'INDIVIDUAL',
                beneficiary_id = 'sd6ad034-a111-4143-8756-a3a3cef4045v',
                created_date_time = '2022-04-24T00:30:19.951Z',
                updated_date_time = '2022-04-24T00:30:19.951Z'
            )
        else:
            return VirtualAccountRefund(
        )
        """

    def testVirtualAccountRefund(self):
        """Test VirtualAccountRefund"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
