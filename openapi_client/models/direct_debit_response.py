# coding: utf-8

"""
    Yapily API

    The Yapily API enables connections between your application and users' banks. For more information check out our [documentation](https://docs.yapily.com/).<br><br>In particular, make sure to view our [Getting Started](https://docs.yapily.com/#getting-started) steps if this is your first time here.<br><br>While testing the API, our list of [sandbox credentials](https://docs.yapily.com/guides/applications/institutions/sandbox/) maybe useful.  # noqa: E501

    The version of the OpenAPI document: 2.1.0
    Contact: support@yapily.com
    Generated by: https://openapi-generator.tech
"""


import pprint
import re  # noqa: F401

import six

from openapi_client.configuration import Configuration


class DirectDebitResponse(object):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {
        'id': 'str',
        'status_details': 'PaymentStatusDetails',
        'payee_details': 'DirectDebitPayee',
        'reference': 'str',
        'previous_payment_amount': 'Amount',
        'previous_payment_date_time': 'datetime'
    }

    attribute_map = {
        'id': 'id',
        'status_details': 'statusDetails',
        'payee_details': 'payeeDetails',
        'reference': 'reference',
        'previous_payment_amount': 'previousPaymentAmount',
        'previous_payment_date_time': 'previousPaymentDateTime'
    }

    def __init__(self, id=None, status_details=None, payee_details=None, reference=None, previous_payment_amount=None, previous_payment_date_time=None, local_vars_configuration=None):  # noqa: E501
        """DirectDebitResponse - a model defined in OpenAPI"""  # noqa: E501
        if local_vars_configuration is None:
            local_vars_configuration = Configuration()
        self.local_vars_configuration = local_vars_configuration

        self._id = None
        self._status_details = None
        self._payee_details = None
        self._reference = None
        self._previous_payment_amount = None
        self._previous_payment_date_time = None
        self.discriminator = None

        if id is not None:
            self.id = id
        if status_details is not None:
            self.status_details = status_details
        if payee_details is not None:
            self.payee_details = payee_details
        if reference is not None:
            self.reference = reference
        if previous_payment_amount is not None:
            self.previous_payment_amount = previous_payment_amount
        if previous_payment_date_time is not None:
            self.previous_payment_date_time = previous_payment_date_time

    @property
    def id(self):
        """Gets the id of this DirectDebitResponse.  # noqa: E501


        :return: The id of this DirectDebitResponse.  # noqa: E501
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this DirectDebitResponse.


        :param id: The id of this DirectDebitResponse.  # noqa: E501
        :type: str
        """

        self._id = id

    @property
    def status_details(self):
        """Gets the status_details of this DirectDebitResponse.  # noqa: E501


        :return: The status_details of this DirectDebitResponse.  # noqa: E501
        :rtype: PaymentStatusDetails
        """
        return self._status_details

    @status_details.setter
    def status_details(self, status_details):
        """Sets the status_details of this DirectDebitResponse.


        :param status_details: The status_details of this DirectDebitResponse.  # noqa: E501
        :type: PaymentStatusDetails
        """

        self._status_details = status_details

    @property
    def payee_details(self):
        """Gets the payee_details of this DirectDebitResponse.  # noqa: E501


        :return: The payee_details of this DirectDebitResponse.  # noqa: E501
        :rtype: DirectDebitPayee
        """
        return self._payee_details

    @payee_details.setter
    def payee_details(self, payee_details):
        """Sets the payee_details of this DirectDebitResponse.


        :param payee_details: The payee_details of this DirectDebitResponse.  # noqa: E501
        :type: DirectDebitPayee
        """

        self._payee_details = payee_details

    @property
    def reference(self):
        """Gets the reference of this DirectDebitResponse.  # noqa: E501


        :return: The reference of this DirectDebitResponse.  # noqa: E501
        :rtype: str
        """
        return self._reference

    @reference.setter
    def reference(self, reference):
        """Sets the reference of this DirectDebitResponse.


        :param reference: The reference of this DirectDebitResponse.  # noqa: E501
        :type: str
        """

        self._reference = reference

    @property
    def previous_payment_amount(self):
        """Gets the previous_payment_amount of this DirectDebitResponse.  # noqa: E501


        :return: The previous_payment_amount of this DirectDebitResponse.  # noqa: E501
        :rtype: Amount
        """
        return self._previous_payment_amount

    @previous_payment_amount.setter
    def previous_payment_amount(self, previous_payment_amount):
        """Sets the previous_payment_amount of this DirectDebitResponse.


        :param previous_payment_amount: The previous_payment_amount of this DirectDebitResponse.  # noqa: E501
        :type: Amount
        """

        self._previous_payment_amount = previous_payment_amount

    @property
    def previous_payment_date_time(self):
        """Gets the previous_payment_date_time of this DirectDebitResponse.  # noqa: E501


        :return: The previous_payment_date_time of this DirectDebitResponse.  # noqa: E501
        :rtype: datetime
        """
        return self._previous_payment_date_time

    @previous_payment_date_time.setter
    def previous_payment_date_time(self, previous_payment_date_time):
        """Sets the previous_payment_date_time of this DirectDebitResponse.


        :param previous_payment_date_time: The previous_payment_date_time of this DirectDebitResponse.  # noqa: E501
        :type: datetime
        """

        self._previous_payment_date_time = previous_payment_date_time

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, DirectDebitResponse):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, DirectDebitResponse):
            return True

        return self.to_dict() != other.to_dict()
